Sure, here is an example of a process tree for a hypothetical Purchase-to-Pay process:

```python
from pm4py.objects.process_tree.obj import ProcessTree, Operator

root = ProcessTree(operator=Operator.SEQUENCE)

purchase = ProcessTree(label="Purchase", parent=root)
receive_invoice = ProcessTree(label="Receive Invoice", parent=root)

check_invoice = ProcessTree(operator=Operator.XOR, parent=root)
check_invoice_correctness = ProcessTree(label="Check Invoice Correctness", parent=check_invoice)
check_invoice_approval = ProcessTree(label="Check Invoice Approval", parent=check_invoice)

pay_invoice = ProcessTree(operator=Operator.SEQUENCE, parent=root)
get_payment_details = ProcessTree(label="Get Payment Details", parent=pay_invoice)
execute_payment = ProcessTree(label="Execute Payment", parent=pay_invoice)

check_invoice.children.append(check_invoice_correctness)
check_invoice.children.append(check_invoice_approval)

pay_invoice.children.append(get_payment_details)
pay_invoice.children.append(execute_payment)

root.children.append(purchase)
root.children.append(receive_invoice)
root.children.append(check_invoice)
root.children.append(pay_invoice)
```

This process tree describes the following process:

1. First, the purchase activity is executed.
2. Then, the invoice is received.
3. After that, there is an exclusive choice between checking the invoice's correctness or checking its approval.
4. Finally, if the invoice is correct or approved, the payment is executed by getting the payment details and then executing the payment itself.

Please note that this is just an example, and it might not reflect the actual Purchase-to-Pay process in a real-world scenario.