I can provide a Python dictionary representing a temporal profile for a hypothetical Purchase-to-Pay process. Please note that the values are arbitrary and used only for illustration purposes.

```python
temporal_profile = {
    ('Create Purchase Order', 'Approve Purchase Order'): (86400, 3600),  # 1 day average, 1 hour standard deviation
    ('Approve Purchase Order', 'Send Purchase Order to Supplier'): (3600, 1800),  # 1 hour average, 30 minutes standard deviation
    ('Send Purchase Order to Supplier', 'Receive Goods'): (604800, 86400),  # 7 days average, 1 day standard deviation
    ('Receive Goods', 'Create Invoice'): (86400, 3600),  # 1 day average, 1 hour standard deviation
    ('Create Invoice', 'Approve Invoice'): (3600, 1800),  # 1 hour average, 30 minutes standard deviation
    ('Approve Invoice', 'Pay Invoice'): (86400, 3600),  # 1 day average, 1 hour standard deviation
    ('Create Purchase Order', 'Receive Goods'): (1209600, 604800),  # 14 days average, 7 days standard deviation
    ('Create Purchase Order', 'Pay Invoice'): (1814400, 604800),  # 21 days average, 7 days standard deviation
}
```

This temporal profile describes the average and standard deviation of times between various activities in a Purchase-to-Pay process, such as creating and approving purchase orders, sending orders to suppliers, receiving goods, creating and approving invoices, and paying invoices. Additionally, it includes indirect relationships, such as the time between creating a purchase order and receiving goods, or creating a purchase order and paying an invoice.

You can use this temporal profile to detect deviations in process executions by applying the ZETA threshold. For example, if ZETA is set to 2, a deviation would occur if the time between two activities is less than AVG - 2 \* STDEV or greater than AVG + 2 \* STDEV.