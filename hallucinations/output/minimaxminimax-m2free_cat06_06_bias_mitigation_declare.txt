{
  "categories": {
    "1a_instruction_override": {
      "count": 1,
      "instances": [
        {
          "snippet": "\"existence\" with support=1.0 for \"ManualReview\" and \"BiasMitigationCheck\" forces these activities in *every* trace",
          "why": "The prompt specifies bias mitigation should be conditional on sensitive demographics, not universal application of these activities, so this constraint overrides this explicit requirement.",
          "severity": "high"
        }
      ]
    },
    "1b_context_omission": {
      "count": 0,
      "instances": []
    },
    "1c_prompt_contradiction": {
      "count": 0,
      "instances": []
    },
    "2a_concept_fabrication": {
      "count": 1,
      "instances": [
        {
          "snippet": "introduces \"CheckApplicantRace\", \"CheckApplicantAge\" as activities without adding their \"existence\" or justification",
          "why": "These activities are not present in the original model, and their introduction without grounding or justification fabricates new concepts that were not established by prompt or original data.",
          "severity": "medium"
        }
      ]
    },
    "2b_spurious_numeric": {
      "count": 0,
      "instances": []
    },
    "2c_false_citation": {
      "count": 0,
      "instances": []
    },
    "3a_unsupported_leap": {
      "count": 1,
      "instances": [
        {
          "snippet": "Assumption that adding multiple overlapping constraints (response, precedence, succession) does not harm model despite redundancy",
          "why": "The conclusion ignores that overlapping constraints may introduce conflicts or invalid traces, an unsupported leap without formal validation or justification.",
          "severity": "medium"
        }
      ]
    },
    "3b_self_contradiction": {
      "count": 0,
      "instances": []
    },
    "3c_circular_reasoning": {
      "count": 0,
      "instances": []
    },
    "4a_syntax_error": {
      "count": 1,
      "instances": [
        {
          "snippet": "Repeated keys like \"CheckApplicantRace\" defined twice in the same dictionary causing overwriting",
          "why": "This is a fatal structural error in the code that breaks Python semantics and invalidates the code functionality.",
          "severity": "critical"
        }
      ]
    },
    "4b_model_semantics_breach": {
      "count": 0,
      "instances": []
    },
    "4c_visual_descr_mismatch": {
      "count": 0,
      "instances": []
    }
  },
  "totals": { "hallucinations_overall": 4 }
}