{
  "categories": {
    "1a_instruction_override": {
      "count": 0,
      "instances": []
    },
    "1b_context_omission": {
      "count": 0,
      "instances": []
    },
    "1c_prompt_contradiction": {
      "count": 0,
      "instances": []
    },
    "2a_concept_fabrication": {
      "count": 0,
      "instances": []
    },
    "2b_spurious_numeric": {
      "count": 0,
      "instances": []
    },
    "2c_false_citation": {
      "count": 0,
      "instances": []
    },
    "3a_unsupported_leap": {
      "count": 5,
      "instances": [
        {
          "snippet": "interprets `chainprecedence: Authorize_Contract_Terms -> Preliminary_Credit_Check` as \"Must occur after the initial credit check\"",
          "why": "The conclusion that this means standard precedence ignoring 'chain' immediate succession is unsupported by the constraint's definition.",
          "severity": "critical"
        },
        {
          "snippet": "interprets `chainsuccession: Quality_Assurance_Review -> Assemble_Loan_Offer_Package` as \"Must follow QA review\"",
          "why": "Fails to recognize the immediate succession requirement of 'chainsuccession', an unsupported leap in interpretation.",
          "severity": "critical"
        },
        {
          "snippet": "\"Happy Path\" sequence inserting `Authorize_Contract_Terms` between chained activities",
          "why": "The sequence violates declared chain succession constraints, an unsupported leap ignoring these core rules.",
          "severity": "critical"
        },
        {
          "snippet": "claims `coexistence(Gather_Additional_Documents, Authorize_Contract_Terms)` means ordering (document gathering before authorization)",
          "why": "Incorrectly interprets coexistence, which only requires co-occurrence, not order, an unsupported reasoning leap.",
          "severity": "high"
        },
        {
          "snippet": "interprets `noncoexistence(Transfer_Funds, Receive_Application)` as 'cannot transfer funds while receiving application'",
          "why": "Fails to infer that these activities cannot co-occur at all, missing critical logical consequences of the constraint.",
          "severity": "high"
        }
      ]
    },
    "3b_self_contradiction": {
      "count": 0,
      "instances": []
    },
    "3c_circular_reasoning": {
      "count": 0,
      "instances": []
    },
    "4a_syntax_error": {
      "count": 0,
      "instances": []
    },
    "4b_model_semantics_breach": {
      "count": 1,
      "instances": [
        {
          "snippet": "claims `nonchainsuccession(Authorize_Contract_Terms, Notify_Customer)` prevents 'Authorizing terms after notifying customer'",
          "why": "Misrepresents 'nonchainsuccession' which bans immediate succession only; this breaches the semantics of the constraint definition.",
          "severity": "high"
        }
      ]
    },
    "4c_visual_descr_mismatch": {
      "count": 0,
      "instances": []
    }
  },
  "totals": {
    "hallucinations_overall": 6
  }
}