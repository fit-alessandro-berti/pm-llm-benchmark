{
  "categories": {
    "1a_instruction_override": {
      "count": 1,
      "instances": [
        {
          "snippet": "None of the queries use the `adjusters` table (e.g., no join on `resource` to `adjuster_id`/`name` to verify if assignments/Evaluations involve valid adjusters by specialization/region, or check if E always follows A with a matching adjuster resource).",
          "why": "The LLM ignored the explicit prompt constraint to use the `adjusters` table in queries, directly contravening the stated requirements.",
          "severity": "high"
        }
      ]
    },
    "1b_context_omission": {
      "count": 0,
      "instances": []
    },
    "1c_prompt_contradiction": {
      "count": 0,
      "instances": []
    },
    "2a_concept_fabrication": {
      "count": 0,
      "instances": []
    },
    "2b_spurious_numeric": {
      "count": 0,
      "instances": []
    },
    "2c_false_citation": {
      "count": 0,
      "instances": []
    },
    "3a_unsupported_leap": {
      "count": 0,
      "instances": []
    },
    "3b_self_contradiction": {
      "count": 1,
      "instances": [
        {
          "snippet": "labeling responded_existence as 'correctly enforces' ignores its downstream conflict: requiring AE indirectly forbids A (since E can't coexist with required C), creating an unmentioned contradiction.",
          "why": "The answer asserts that responded_existence is enforced correctly while, due to E/C noncoexistence, it actually creates an irreconcilable logic contradiction within the answer.",
          "severity": "medium"
        }
      ]
    },
    "3c_circular_reasoning": {
      "count": 0,
      "instances": []
    },
    "4a_syntax_error": {
      "count": 0,
      "instances": []
    },
    "4b_model_semantics_breach": {
      "count": 0,
      "instances": []
    },
    "4c_visual_descr_mismatch": {
      "count": 0,
      "instances": []
    }
  },
  "totals": {
    "hallucinations_overall": 2
  }
}