{
  "categories": {
    "1a_instruction_override": { "count": 0, "instances": [] },
    "1b_context_omission": { "count": 0, "instances": [] },
    "1c_prompt_contradiction": { "count": 0, "instances": [] },
    "2a_concept_fabrication": { "count": 0, "instances": [] },
    "2b_spurious_numeric": { "count": 0, "instances": [] },
    "2c_false_citation": { "count": 1, "instances": [
      {
        "snippet": "joins `claims cl` ON `cl.customer_residence_region = a.region` - schema for `claims` does *not* include `customer_residence_region`",
        "why": "The answer uses a non-existent column in the provided schema, falsely attributing data fields that do not exist, constituting a false citation of schema elements.",
        "severity": "high"
      }
    ] },
    "3a_unsupported_leap": { "count": 3, "instances": [
      {
        "snippet": "Query 1b identifies only 'C' immediately after 'A', but edge allows 'C' any time after 'A', so query is too specific",
        "why": "The conclusion that the query fully captures the A->C edge anomaly is unjustified; it misses cases where 'C' is delayed but still violates rules.",
        "severity": "medium"
      },
      {
        "snippet": "Query 2b looks only for 'P' occurring before 'E' but does not capture E->P->E cycles fully",
        "why": "The conclusion that Query 2b captures cyclical patterns is unsupported due to incompleteness of the query logic.",
        "severity": "medium"
      },
      {
        "snippet": "Query 3b links skipped notifications to adjusters via region without schema guarantee and ignores `claim_events.resource`",
        "why": "The reasoning relies on unproven assumptions about relations between region and adjusters, and omits a more direct linking attribute.",
        "severity": "high"
      }
    ] },
    "3b_self_contradiction": { "count": 0, "instances": [] },
    "3c_circular_reasoning": { "count": 0, "instances": [] },
    "4a_syntax_error": { "count": 1, "instances": [
      {
        "snippet": "Query 3b uses incorrect column name `cl.clm_id` instead of `claim_id`",
        "why": "This is a syntax error due to referencing a non-existent column name, making the SQL invalid.",
        "severity": "high"
      }
    ] },
    "4b_model_semantics_breach": { "count": 0, "instances": [] },
    "4c_visual_descr_mismatch": { "count": 0, "instances": [] }
  },
  "totals": { "hallucinations_overall": 5 }
}