{
  "categories": {
    "1a_instruction_override": {
      "count": 0,
      "instances": []
    },
    "1b_context_omission": {
      "count": 0,
      "instances": []
    },
    "1c_prompt_contradiction": {
      "count": 0,
      "instances": []
    },
    "2a_concept_fabrication": {
      "count": 0,
      "instances": []
    },
    "2b_spurious_numeric": {
      "count": 1,
      "instances": [
        {
          "snippet": "Third query's <7 days arbitrary threshold (good intent, but lacks justificationâ€”why not configurable?)",
          "why": "The arbitrary use of a 7-day threshold without evidence or justification invents unsupported numeric criteria.",
          "severity": "medium"
        }
      ]
    },
    "2c_false_citation": {
      "count": 0,
      "instances": []
    },
    "3a_unsupported_leap": {
      "count": 3,
      "instances": [
        {
          "snippet": "Queries assume single instances of key events (e.g., one A, one C per claim), risking cartesian products or missed results if multiple events exist.",
          "why": "Assuming a single event per type without aggregation leads to conclusions invalid for claims with multiple relevant events.",
          "severity": "high"
        },
        {
          "snippet": "Second and third queries filter with WHERE NOT EXISTS but redundantly use boolean flags reflecting the same condition, causing confusion.",
          "why": "Using tautological filters creates misleading and inefficient logic that undermines query correctness and clarity.",
          "severity": "medium"
        },
        {
          "snippet": "First query uses COUNT > 2 as a proxy for loops, which can incorrectly trigger for three E events without Ps, thus inaccurate.",
          "why": "The reasoning to detect loops via this proxy is flawed and overgeneralizes event counts to anomalous behavior detection.",
          "severity": "high"
        }
      ]
    },
    "3b_self_contradiction": {
      "count": 0,
      "instances": []
    },
    "3c_circular_reasoning": {
      "count": 0,
      "instances": []
    },
    "4a_syntax_error": {
      "count": 0,
      "instances": []
    },
    "4b_model_semantics_breach": {
      "count": 1,
      "instances": [
        {
          "snippet": "Resource matching ce.resource = a.adjuster_id::VARCHAR assumes stringified integer IDs, ignoring that resource may hold names or mixed types.",
          "why": "This assumption about resource encoding breaches the database schema semantics and risks incorrect joins or failed matches.",
          "severity": "high"
        }
      ]
    },
    "4c_visual_descr_mismatch": {
      "count": 0,
      "instances": []
    }
  },
  "totals": {
    "hallucinations_overall": 5
  }
}