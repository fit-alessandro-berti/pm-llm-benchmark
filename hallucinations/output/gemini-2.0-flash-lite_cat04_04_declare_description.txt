{
  "categories": {
    "1a_instruction_override": {
      "count": 0,
      "instances": []
    },
    "1b_context_omission": {
      "count": 0,
      "instances": []
    },
    "1c_prompt_contradiction": {
      "count": 0,
      "instances": []
    },
    "2a_concept_fabrication": {
      "count": 0,
      "instances": []
    },
    "2b_spurious_numeric": {
      "count": 0,
      "instances": []
    },
    "2c_false_citation": {
      "count": 0,
      "instances": []
    },
    "3a_unsupported_leap": {
      "count": 6,
      "instances": [
        {
          "snippet": "Gather_Additional_Documents is triggered \"simultaneously or in parallel\" with Preliminary_Credit_Check despite `succession` meaning A precedes B",
          "why": "This is an unsupported leap because it misinterprets the succession constraint to allow parallel execution without justification.",
          "severity": "high"
        },
        {
          "snippet": "Response reverses the logic of responded_existence, stating \"if QA occurs, Assemble must have occurred\" instead of the actual logic.",
          "why": "The conclusion incorrectly flips the dependency implied by responded_existence, an unsupported leap from the true constraint semantics.",
          "severity": "high"
        },
        {
          "snippet": "Claims `Quality_Assurance_Review` follows assembly based on altsuccession involving different activities than specified.",
          "why": "This leap falsely attributes the altsuccession constraint to a pair not related by it, lacking support in the model.",
          "severity": "high"
        },
        {
          "snippet": "Interprets chainprecedence(Authorize_Contract_Terms, Preliminary_Credit_Check) as a credit check preceding Authorize, opposite of correct meaning.",
          "why": "This is a critical logical error reversing constraint meaning, an unsupported leap from the actual definition.",
          "severity": "critical"
        },
        {
          "snippet": "States altresponse and altprecedence constraints on Notify_Customer and Transfer_Funds as contradictory without acknowledging potential coexistence.",
          "why": "The reasoning fails to reconcile the complex interaction of constraints, making final conclusion logically incoherent.",
          "severity": "high"
        },
        {
          "snippet": "Uses terms like \"simultaneously or in parallel\" and \"parallel execution\" to describe coexistence constraint incorrectly.",
          "why": "Misapplies the meaning of coexistence to imply concurrency, an unsupported conclusion about the process behavior.",
          "severity": "medium"
        }
      ]
    },
    "3b_self_contradiction": {
      "count": 1,
      "instances": [
        {
          "snippet": "Step 5 says Notify_Customer follows Transfer_Funds, Step 6 says Notify_Customer happens prior to Transfer_Funds based on altprecedence",
          "why": "This is a direct contradiction within the answer about the sequence of these activities.",
          "severity": "high"
        }
      ]
    },
    "3c_circular_reasoning": {
      "count": 0,
      "instances": []
    },
    "4a_syntax_error": {
      "count": 0,
      "instances": []
    },
    "4b_model_semantics_breach": {
      "count": 0,
      "instances": []
    },
    "4c_visual_descr_mismatch": {
      "count": 0,
      "instances": []
    }
  },
  "totals": { "hallucinations_overall": 7 }
}