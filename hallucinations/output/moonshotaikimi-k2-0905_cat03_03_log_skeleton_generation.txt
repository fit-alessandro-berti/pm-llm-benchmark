{
  "categories": {
    "1a_instruction_override": { "count": 0, "instances": [] },
    "1b_context_omission":    { "count": 0, "instances": [] },
    "1c_prompt_contradiction":{ "count": 0, "instances": [] },
    "2a_concept_fabrication": { "count": 0, "instances": [] },
    "2b_spurious_numeric":    { "count": 0, "instances": [] },
    "2c_false_citation":      { "count": 0, "instances": [] },
    "3a_unsupported_leap":    { 
      "count": 5, 
      "instances": [
        {
          "snippet": "never_together means the two activities cannot both appear in the same case",
          "why": "Misinterprets 'never_together' as forbidding valid co-occurrence of events, leading to invalid conclusions.",
          "severity": "critical"
        },
        {
          "snippet": "The author uses never_together to enforce ordering (e.g., cannot dispatch before receiving)",
          "why": "'never_together' is incorrectly applied as an ordering constraint, which should be for always_before/after, invalidating the model.",
          "severity": "critical"
        },
        {
          "snippet": "'RO': {1} always occurs, 'directly_follows' includes ('RO', 'CA'), but 'CA': {0,1}",
          "why": "Logical contradiction: if RO always occurs and RO->CA directly follows, CA must always occur, but frequency allows CA to be missing.",
          "severity": "critical"
        },
        {
          "snippet": "('CA', 'RI') implies every Check Availability is followed by Reserve Items",
          "why": "Assuming equivalence ignores real-world exceptions where CA occurs without RI, invalidating assumptions.",
          "severity": "high"
        },
        {
          "snippet": "always_after: ('RI', 'PI') implies reserved items are always picked",
          "why": "Ignores cancellations and exceptions, making constraints overly restrictive and unrealistic.",
          "severity": "high"
        }
      ]
    },
    "3b_self_contradiction":  { 
      "count": 1, 
      "instances": [
        {
          "snippet": "'activ_freq' defines 'CA': {0,1} but 'directly_follows' implies CA always",
          "why": "Constraints conflict internally as CA is both optional and mandatory following RO, causing contradiction.",
          "severity": "critical"
        }
      ]
    },
    "3c_circular_reasoning":  { "count": 0, "instances": [] },
    "4a_syntax_error":        { "count": 0, "instances": [] },
    "4b_model_semantics_breach": { "count": 0, "instances": [] },
    "4c_visual_descr_mismatch": { "count": 0, "instances": [] }
  },
  "totals": { "hallucinations_overall": 7 }
}