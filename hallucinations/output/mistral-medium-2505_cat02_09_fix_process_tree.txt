{
  "categories": {
    "1a_instruction_override": { "count": 0, "instances": [] },
    "1b_context_omission": { "count": 0, "instances": [] },
    "1c_prompt_contradiction": { "count": 0, "instances": [] },
    "2a_concept_fabrication": { "count": 0, "instances": [] },
    "2b_spurious_numeric": { "count": 0, "instances": [] },
    "2c_false_citation": { "count": 0, "instances": [] },
    "3a_unsupported_leap": {
      "count": 1,
      "instances": [
        {
          "snippet": "\"XOR(Receive_Goods, Receive_Invoice)\" means either \"Receive Goods\" occurs or \"Receive Invoice\" occurs, but not both.",
          "why": "This incorrectly concludes that XOR can model both tasks happening in any order, while XOR implies exclusivity, making the conclusion unsupported by the correct semantics.",
          "severity": "high"
        }
      ]
    },
    "3b_self_contradiction": {
      "count": 1,
      "instances": [
        {
          "snippet": "\"Receive_Goods` and `Receive_Invoice` can happen in any order [implying both happen]\" vs XOR choice allowing only one.",
          "why": "The answer claims both activities occur but then models them with XOR which allows only one, contradicting itself within the same answer.",
          "severity": "high"
        }
      ]
    },
    "3c_circular_reasoning": { "count": 0, "instances": [] },
    "4a_syntax_error": { "count": 0, "instances": [] },
    "4b_model_semantics_breach": {
      "count": 1,
      "instances": [
        {
          "snippet": "Suggesting XOR between Receive_Goods and Receive_Invoice as a way to allow slight variations in order.",
          "why": "This violates the semantic rule that XOR as exclusive choice means only one path is taken, not both actions happening in any order, breaching domain modeling conventions.",
          "severity": "critical"
        }
      ]
    },
    "4c_visual_descr_mismatch": { "count": 0, "instances": [] }
  },
  "totals": { "hallucinations_overall": 3 }
}