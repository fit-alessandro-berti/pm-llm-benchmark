{
  "categories": {
    "1a_instruction_override": { "count": 0, "instances": [] },
    "1b_context_omission":    { "count": 0, "instances": [] },
    "1c_prompt_contradiction":{ "count": 0, "instances": [] },
    "2a_concept_fabrication": { "count": 0, "instances": [] },
    "2b_spurious_numeric":    { "count": 0, "instances": [] },
    "2c_false_citation":      { "count": 0, "instances": [] },
    "3a_unsupported_leap":    { "count": 0, "instances": [] },
    "3b_self_contradiction":  { "count": 0, "instances": [] },
    "3c_circular_reasoning":  { "count": 0, "instances": [] },
    "4a_syntax_error":        { "count": 0, "instances": [] },
    "4b_model_semantics_breach": { 
      "count": 4,
      "instances": [
        {
          "snippet": "Succession: The model correctly identifies that ('AG', 'FL') is a succession. However, it then proceeds to *also* list this pair under response and precedence.",
          "why": "This is a violation of DECLARE model semantics, as listing both a composite constraint (succession) and its components (response, precedence) is redundant and invalid in minimal DECLARE models.",
          "severity": "critical"
        },
        {
          "snippet": "Chain Succession: This error is duplicated for the chain templates. 'chainsuccession(A, B)' is defined as 'chainresponse(A, B) AND chainprecedence(A, B)'. The answer lists ('LT', 'UT') and ('MP', 'FL') under all three templates...",
          "why": "Redundantly listing chain succession and both of its component constraints breaches the modeling formalism of DECLARE and is considered a semantic model error.",
          "severity": "critical"
        },
        {
          "snippet": "Alternate Succession: The same error occurs again. 'altsuccession('AG', 'FL')' is listed, as are 'altresponse('AG', 'FL')' and 'altprecedence('AG', 'FL')'.",
          "why": "Including both composite and component constraints in models is against DECLARE's minimal constraint principles and is an error of formal semantics.",
          "severity": "critical"
        },
        {
          "snippet": "Redundancy Between Unary and Binary Constraints: 'exactly_one('AG')' makes the 'altresponse('AG', 'FL')' constraint completely redundant.",
          "why": "Including constraints that are logically implied or made vacuously true by stronger/unary constraints breaks the intended semantics of a minimal DECLARE specification.",
          "severity": "high"
        }
      ]
    },
    "4c_visual_descr_mismatch": { "count": 0, "instances": [] }
  },
  "totals": { "hallucinations_overall": 4 }
}