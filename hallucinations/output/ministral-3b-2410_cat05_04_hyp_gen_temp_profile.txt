{
  "categories": {
    "1a_instruction_override": {
      "count": 0,
      "instances": []
    },
    "1b_context_omission": {
      "count": 0,
      "instances": []
    },
    "1c_prompt_contradiction": {
      "count": 0,
      "instances": []
    },
    "2a_concept_fabrication": {
      "count": 0,
      "instances": []
    },
    "2b_spurious_numeric": {
      "count": 3,
      "instances": [
        {
          "snippet": "WHERE clause EXTRACT(EPOCH FROM ...) > 3600 OR < 3600 simplifies to != 3600, misinterpreting anomaly timing.",
          "why": "The condition arbitrarily uses 3600 seconds (mean R-A interval) for all anomalies without accounting for different mean Â± stddev ranges.",
          "severity": "critical"
        },
        {
          "snippet": "Query 2 uses '> 3600 OR < 3600' threshold for any event pair, applying 3600 arbitrarily beyond R-A anomalies.",
          "why": "The numeric threshold does not consider different means and deviations for various anomalous event pairs, leading to invalid anomaly detection.",
          "severity": "critical"
        },
        {
          "snippet": "Query 4 condition 'ce.timestamp + INTERVAL '7 days' > (SELECT MAX(...))' reverses intended logic for > 7 days anomaly.",
          "why": "The reversed inequality results in identifying claims with short waits instead of excessively long waits, invalidating the numeric interpretation.",
          "severity": "critical"
        }
      ]
    },
    "2c_false_citation": {
      "count": 0,
      "instances": []
    },
    "3a_unsupported_leap": {
      "count": 3,
      "instances": [
        {
          "snippet": "Query 1's logic identifies durations != 3600 instead of outside expected anomaly ranges.",
          "why": "The conclusion that times differing from 3600 seconds are anomalous ignores necessary statistical thresholds and standard deviation considerations.",
          "severity": "high"
        },
        {
          "snippet": "Query 2 assumes LAG differences with any adjacent events correspond to specific anomalies.",
          "why": "This unjustifiably generalizes event durations across all event pairs without validating event type sequences relevant to anomalies.",
          "severity": "high"
        },
        {
          "snippet": "Query 4 uses reversed inequality leading to misidentification of excessive delay anomalies.",
          "why": "The inappropriate logic leap causes fundamentally incorrect claims about timing anomalies between approval and notification events.",
          "severity": "high"
        }
      ]
    },
    "3b_self_contradiction": {
      "count": 0,
      "instances": []
    },
    "3c_circular_reasoning": {
      "count": 0,
      "instances": []
    },
    "4a_syntax_error": {
      "count": 0,
      "instances": []
    },
    "4b_model_semantics_breach": {
      "count": 1,
      "instances": [
        {
          "snippet": "Assumes claim_events.resource directly maps to adjusters.adjuster_id without schema support.",
          "why": "This breaks domain modelling rules by mapping potentially unrelated fields without justification or schema confirmation.",
          "severity": "medium"
        }
      ]
    },
    "4c_visual_descr_mismatch": {
      "count": 0,
      "instances": []
    }
  },
  "totals": {
    "hallucinations_overall": 7
  }
}