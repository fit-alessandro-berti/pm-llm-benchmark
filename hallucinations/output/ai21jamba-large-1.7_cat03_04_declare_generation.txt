{
  "categories": {
    "1a_instruction_override": {
      "count": 0,
      "instances": []
    },
    "1b_context_omission": {
      "count": 0,
      "instances": []
    },
    "1c_prompt_contradiction": {
      "count": 0,
      "instances": []
    },
    "2a_concept_fabrication": {
      "count": 0,
      "instances": []
    },
    "2b_spurious_numeric": {
      "count": 0,
      "instances": []
    },
    "2c_false_citation": {
      "count": 0,
      "instances": []
    },
    "3a_unsupported_leap": {
      "count": 1,
      "instances": [
        {
          "snippet": "'existence' key asserts Technical Feasibility Check (TFC) and Cost Evaluation (CE) must occur; 'absence' key asserts they must never occur",
          "why": "The conclusion that both 'existence' and 'absence' constraints can be applied to the same activities simultaneously is logically invalid and unsupported.",
          "severity": "critical"
        }
      ]
    },
    "3b_self_contradiction": {
      "count": 1,
      "instances": [
        {
          "snippet": "'existence' and 'absence' constraints both defined for TFC and CE, directly conflicting",
          "why": "The answer contains conflicting claims that the same activities must both occur and be absent, a direct self-contradiction within the model.",
          "severity": "critical"
        }
      ]
    },
    "3c_circular_reasoning": {
      "count": 0,
      "instances": []
    },
    "4a_syntax_error": {
      "count": 1,
      "instances": [
        {
          "snippet": "The provided Python code cuts off abruptly in the middle of the 'altprecedence' dictionary value",
          "why": "The answer is incomplete, breaking code syntax by truncation, rendering it unusable and incomplete.",
          "severity": "critical"
        }
      ]
    },
    "4b_model_semantics_breach": {
      "count": 2,
      "instances": [
        {
          "snippet": "'exactly_one' used as a binary constraint with tuple key instead of unary with single string",
          "why": "This violates the semantic definition of the 'exactly_one' template, which must be unary, not binary.",
          "severity": "high"
        },
        {
          "snippet": "'responded_existence' used as unary constraint with single activity strings as keys instead of binary with tuples",
          "why": "This misrepresents the binary nature of 'responded_existence', breaching modelling notation rules.",
          "severity": "high"
        }
      ]
    },
    "4c_visual_descr_mismatch": {
      "count": 0,
      "instances": []
    }
  },
  "totals": {
    "hallucinations_overall": 5
  }
}