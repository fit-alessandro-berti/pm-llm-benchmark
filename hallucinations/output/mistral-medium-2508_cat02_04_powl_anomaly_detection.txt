{
  "categories": {
    "1a_instruction_override": { "count": 0, "instances": [] },
    "1b_context_omission":    { "count": 0, "instances": [] },
    "1c_prompt_contradiction":{ "count": 0, "instances": [] },
    "2a_concept_fabrication": { "count": 0, "instances": [] },
    "2b_spurious_numeric":    { "count": 0, "instances": [] },
    "2c_false_citation":      { "count": 0, "instances": [] },
    "3a_unsupported_leap":    { "count": 2, "instances": [
      {
        "snippet": "the response repeatedly claims that the `loop_approve_invoice` operator allows `Approve_Order (A)` and `Issue_Invoice (I)` to be executed \"in any order\"",
        "why": "This conclusion that 'Approve_Order' and 'Issue_Invoice' can be executed in any order is not justified by the model structure (LOOP operator with ordered children); it's an unsupported leap.",
        "severity": "critical"
      },
      {
        "snippet": "The current model allows **invoices to be issued before approval**",
        "why": "This claim jumps to a conclusion not supported by the model (which enforces Approve before Invoice in the LOOP); it is a critical logical error.",
        "severity": "critical"
      }
    ] },
    "3b_self_contradiction":  { "count": 0, "instances": [] },
    "3c_circular_reasoning":  { "count": 0, "instances": [] },
    "4a_syntax_error":        { "count": 0, "instances": [] },
    "4b_model_semantics_breach": { "count": 0, "instances": [] },
    "4c_visual_descr_mismatch": { "count": 0, "instances": [] }
  },
  "totals": { "hallucinations_overall": 2 }
}