{
  "categories": {
    "1a_instruction_override": { "count": 0, "instances": [] },
    "1b_context_omission":    { "count": 0, "instances": [] },
    "1c_prompt_contradiction":{ "count": 0, "instances": [] },
    "2a_concept_fabrication": { "count": 0, "instances": [] },
    "2b_spurious_numeric":    { "count": 0, "instances": [] },
    "2c_false_citation":      { "count": 0, "instances": [] },
    "3a_unsupported_leap":    {
      "count": 5,
      "instances": [
        {
          "snippet": "\"Manual Data Entry Issues\" is a weak hypothesis for low standard deviation...",
          "why": "Manual entry issues typically increase variability, so attributing low standard deviation to manual errors is logically unsupported.",
          "severity": "medium"
        },
        {
          "snippet": "\"Automated Notifications Skipped\" is poorly explained; skipping wouldn't increase P-N time for notified claims...",
          "why": "The hypothesis is unclear and presents an unsupported causal relationship between skipping notifications and increased delay.",
          "severity": "medium"
        },
        {
          "snippet": "Subquery assumption that exactly one event of type 'X' exists per claim...",
          "why": "Assuming a single event per claim is an unsupported simplification in real-world logs where multiple or zero events may exist, undermining query validity.",
          "severity": "high"
        },
        {
          "snippet": "Join of 'claims' table often unused in WHERE clause and unnecessary...",
          "why": "Including unused joins complicates queries needlessly and may mislead about data dependencies without justification.",
          "severity": "low"
        },
        {
          "snippet": "Schema assumption: Query 3 and 4 select c.region but region is in adjusters table...",
          "why": "This factual error leads to queries that would fail or produce incorrect results, invalidating the verification method.",
          "severity": "high"
        }
      ]
    },
    "3b_self_contradiction":  {
      "count": 2,
      "instances": [
        {
          "snippet": "Query 2's WHERE clause filters ce.activity IN ('R', 'P'), which is incorrect...",
          "why": "The logic contradicts itself by filtering for both events simultaneously, making the query inconsistent with its stated aim.",
          "severity": "high"
        },
        {
          "snippet": "Query 3 uses ce.timestamp + INTERVAL '2 hours' < subquery_for_C_timestamp to identify immediate closure...",
          "why": "This condition incorrectly captures cases where 'C' occurs more than 2 hours after 'A', contradicting the intended analysis of immediate closure.",
          "severity": "high"
        }
      ]
    },
    "3c_circular_reasoning":  { "count": 0, "instances": [] },
    "4a_syntax_error":        { "count": 0, "instances": [] },
    "4b_model_semantics_breach": { "count": 0, "instances": [] },
    "4c_visual_descr_mismatch": { "count": 0, "instances": [] }
  },
  "totals": { "hallucinations_overall": 7 }
}