{
  "categories": {
    "1a_instruction_override": {
      "count": 0,
      "instances": []
    },
    "1b_context_omission": {
      "count": 8,
      "instances": [
        {
          "snippet": "Critically misses the chainprecedence(Authorize_Contract_Terms, Preliminary_Credit_Check)â€¦",
          "why": "The omission of this unusual and defining constraint crucially distorts the process sequence, ignoring prompt context needed to accurately answer.",
          "severity": "critical"
        },
        {
          "snippet": "Fails to mention the crucial chainsuccession(Quality_Assurance_Review, Assemble_Loan_Offer_Package)",
          "why": "Ignoring this immediate precedence constraint omits key sequential context shaping the process flow as defined by the model.",
          "severity": "high"
        },
        {
          "snippet": "Noncoexistence(Transfer_Funds, Receive_Application) is completely ignored.",
          "why": "Omitting this strong constraint ignores an essential model rule that restricts certain activities co-occurring in the process, affecting correctness.",
          "severity": "high"
        },
        {
          "snippet": "altprecedence(Notify_Customer, Transfer_Funds) omitted",
          "why": "Excluding this constraint misses an important ordering condition from the prompt context, reducing answer completeness.",
          "severity": "medium"
        },
        {
          "snippet": "nonchainsuccession(Authorize_Contract_Terms, Notify_Customer) omitted",
          "why": "Ignoring this constraint drops relevant sequence detail required by the model, impairing faithfulness.",
          "severity": "medium"
        },
        {
          "snippet": "altsuccession(Gather_Additional_Documents, Quality_Assurance_Review) omitted",
          "why": "Failure to mention this sequencing rule removes part of the model's complexity, making the answer incomplete.",
          "severity": "medium"
        },
        {
          "snippet": "Coexistence(Gather_Additional_Documents, Authorize_Contract_Terms) mentioned for GAD but ignored for ACT",
          "why": "Selective omission of constraints weakens the overall representation of the process dependencies required by the prompt.",
          "severity": "medium"
        },
        {
          "snippet": "Several other constraints mentioned above were also missed in relevant activity steps",
          "why": "General omission of multiple constraints critical for accurate modeling reduces answer completeness and faithfulness.",
          "severity": "high"
        }
      ]
    },
    "1c_prompt_contradiction": {
      "count": 0,
      "instances": []
    },
    "2a_concept_fabrication": {
      "count": 0,
      "instances": []
    },
    "2b_spurious_numeric": {
      "count": 0,
      "instances": []
    },
    "2c_false_citation": {
      "count": 0,
      "instances": []
    },
    "3a_unsupported_leap": {
      "count": 4,
      "instances": [
        {
          "snippet": "Incorrectly states succession follows Receive_Application; model has response(Receive_Application, Preliminary_Credit_Check)",
          "why": "Concluding a stronger succession constraint than stated is unsupported given the weaker response relation.",
          "severity": "high"
        },
        {
          "snippet": "Incorrectly interprets responded_existence(Assemble_Loan_Offer_Package, Quality_Assurance_Review) as ALOP in response to QAR",
          "why": "The reversed dependency claim contradicts the actual constraint semantic, constituting an unsupported logical leap.",
          "severity": "high"
        },
        {
          "snippet": "Claims a response constraint ensures Transfer_Funds follows Preliminary_Credit_Check, no such constraint exists",
          "why": "Infers a direct response without basis in the model, introducing an unsupported conclusion.",
          "severity": "high"
        },
        {
          "snippet": "Claims a response constraint ensures Notify_Customer follows Transfer_Funds, but model has altresponse with different semantics",
          "why": "Misinterpreting altresponse as response incorrectly supports an unsupported sequential conclusion.",
          "severity": "high"
        }
      ]
    },
    "3b_self_contradiction": {
      "count": 0,
      "instances": []
    },
    "3c_circular_reasoning": {
      "count": 0,
      "instances": []
    },
    "4a_syntax_error": {
      "count": 0,
      "instances": []
    },
    "4b_model_semantics_breach": {
      "count": 0,
      "instances": []
    },
    "4c_visual_descr_mismatch": {
      "count": 0,
      "instances": []
    }
  },
  "totals": {
    "hallucinations_overall": 12
  }
}