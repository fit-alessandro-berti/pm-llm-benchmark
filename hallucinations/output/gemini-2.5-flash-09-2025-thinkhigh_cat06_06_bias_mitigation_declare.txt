{
  "categories": {
    "1a_instruction_override": {
      "count": 0,
      "instances": []
    },
    "1b_context_omission": {
      "count": 0,
      "instances": []
    },
    "1c_prompt_contradiction": {
      "count": 0,
      "instances": []
    },
    "2a_concept_fabrication": {
      "count": 1,
      "instances": [
        {
          "snippet": "Adding `existence` constraints for `Reject_MinorityApplicant` mandates every trace to include a minority rejection",
          "why": "This invents a decision step that implies universal minority rejection, misrepresenting bias mitigation goals and the prompt's conditional fairness intent.",
          "severity": "critical"
        }
      ]
    },
    "2b_spurious_numeric": {
      "count": 1,
      "instances": [
        {
          "snippet": "`existence` constraints enforce support=1.0 mandates occurrence in every trace",
          "why": "The numeric enforcement described is not supported by prompt or justified logically, creating an unintended global constraint.",
          "severity": "high"
        }
      ]
    },
    "2c_false_citation": {
      "count": 0,
      "instances": []
    },
    "3a_unsupported_leap": {
      "count": 2,
      "instances": [
        {
          "snippet": "Rationale dismisses semantics of `existence` constraints as merely vocabulary without enforcement implications",
          "why": "This unjustifiably infers the constraints do not impose universal occurrence, a misleading leap in reasoning.",
          "severity": "high"
        },
        {
          "snippet": "Bidirectional `coexistence` combined with `existence` creates contradictory model that biases outcomes",
          "why": "The conclusion of contradiction and discrimination is valid but not explicitly supported by the prompt or code comments, making reasoning unsupported.",
          "severity": "medium"
        }
      ]
    },
    "3b_self_contradiction": {
      "count": 1,
      "instances": [
        {
          "snippet": "Bidirectional coexistence implies manual review iff rejection, but also `existence` requires manual review always",
          "why": "The answer contains conflicting constraints that cannot both hold simultaneously, creating self-contradiction within the logic.",
          "severity": "high"
        }
      ]
    },
    "3c_circular_reasoning": {
      "count": 0,
      "instances": []
    },
    "4a_syntax_error": {
      "count": 0,
      "instances": []
    },
    "4b_model_semantics_breach": {
      "count": 1,
      "instances": [
        {
          "snippet": "`Reject_MinorityApplicant` modeled as an activity enforcing bias rather than mitigating it",
          "why": "This misuse of DECLARE semantics breaks the intended model semantics for fairness representation by encoding discriminatory logic as explicit activities.",
          "severity": "critical"
        }
      ]
    },
    "4c_visual_descr_mismatch": {
      "count": 0,
      "instances": []
    }
  },
  "totals": {
    "hallucinations_overall": 7
  }
}