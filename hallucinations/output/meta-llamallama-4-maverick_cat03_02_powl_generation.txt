{
  "categories": {
    "1a_instruction_override": { "count": 0, "instances": [] },
    "1b_context_omission":    { "count": 0, "instances": [] },
    "1c_prompt_contradiction":{ "count": 0, "instances": [] },
    "2a_concept_fabrication": { "count": 0, "instances": [] },
    "2b_spurious_numeric":    { "count": 0, "instances": [] },
    "2c_false_citation":      { "count": 0, "instances": [] },
    "3a_unsupported_leap":    { 
      "count": 4, 
      "instances": [
        {
          "snippet": "pre_deployment contains initial_order and parallel_setup as nodes and tries to order them",
          "why": "Ordering container 'StrictPartialOrder' objects as nodes leads to an unsupported leap because sequence SR -> CS -> ... must be modeled at the node level, not container blocks.",
          "severity": "high"
        },
        {
          "snippet": "parallel_setup_order.order.add_edge(CS, parallel_setup) linking transition CS to entire partial order parallel_setup",
          "why": "Edges added between transitions and container objects rather than individual nodes is an unsupported leap in reasoning about dependencies.",
          "severity": "high"
        },
        {
          "snippet": "pre_deployment.order.add_edge(parallel_setup, loop_config) fails to model join synchronization",
          "why": "Assuming an edge from a container to loop_config suffices ignores the need for edges from both DA and ACI to loop_config, thus unsupported leap in synchronization logic.",
          "severity": "high"
        },
        {
          "snippet": "final_order.order.add_edge(deployment_choice, final_tasks) and final_order.order.add_edge(final_tasks, GLA) wrong sequencing logic",
          "why": "Edges between containers instead of individual tasks leads to unsupported leap in correctly modeling split/join synchronization between QA, SA, and GLA.",
          "severity": "high"
        }
      ]
    },
    "3b_self_contradiction":  { "count": 0, "instances": [] },
    "3c_circular_reasoning":  { "count": 0, "instances": [] },
    "4a_syntax_error":        { "count": 0, "instances": [] },
    "4b_model_semantics_breach": { 
      "count": 1, 
      "instances": [
        {
          "snippet": "Edges defined between container StrictPartialOrder objects instead of actual nodes",
          "why": "This violates the modelling principles of POWL, where edges must connect contained nodes, not containers themselves.",
          "severity": "critical"
        }
      ]
    },
    "4c_visual_descr_mismatch": { "count": 0, "instances": [] }
  },
  "totals": { "hallucinations_overall": 5 }
}