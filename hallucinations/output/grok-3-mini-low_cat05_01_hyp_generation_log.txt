{
  "categories": {
    "1a_instruction_override": {
      "count": 0,
      "instances": []
    },
    "1b_context_omission": {
      "count": 0,
      "instances": []
    },
    "1c_prompt_contradiction": {
      "count": 1,
      "instances": [
        {
          "snippet": "\"Ship Goods occurs before Confirm Shipment, and both happen before Issue Invoice\" for Case 1003",
          "why": "This statement contradicts the given log data where 'Confirm Shipment' actually occurs after 'Issue Invoice', showing incorrect temporal ordering.",
          "severity": "medium"
        }
      ]
    },
    "2a_concept_fabrication": {
      "count": 0,
      "instances": []
    },
    "2b_spurious_numeric": {
      "count": 0,
      "instances": []
    },
    "2c_false_citation": {
      "count": 0,
      "instances": []
    },
    "3a_unsupported_leap": {
      "count": 4,
      "instances": [
        {
          "snippet": "Query 1: condition `el1.timestamp > el2.timestamp` identifies normal sequence, not out-of-order",
          "why": "The logic wrongly detects the normal sequence as out-of-order, invalidating the query's purpose.",
          "severity": "critical"
        },
        {
          "snippet": "Query 3: comparison `timestamp < (SELECT MIN(timestamp)...` excludes cases missing 'Perform Credit Check'",
          "why": "Because the subquery returns NULL if 'Perform Credit Check' is missing, anomalous cases are silently excluded, missing key anomalies.",
          "severity": "high"
        },
        {
          "snippet": "Query 3: `ARRAY_AGG(el.activity)` aggregates all resource activities, not just anomalous ones",
          "why": "This misrepresents anomalies by including all activities, leading to misleading interpretations of resource anomalies.",
          "severity": "medium"
        },
        {
          "snippet": "Query 4: condition `BOOL_OR(el.activity NOT IN ('Perform Credit Check', 'Validate Stock'))` always true",
          "why": "As most cases have other activities, this condition incorrectly flags nearly all cases, failing to detect missing checks properly.",
          "severity": "critical"
        }
      ]
    },
    "3b_self_contradiction": {
      "count": 0,
      "instances": []
    },
    "3c_circular_reasoning": {
      "count": 0,
      "instances": []
    },
    "4a_syntax_error": {
      "count": 0,
      "instances": []
    },
    "4b_model_semantics_breach": {
      "count": 0,
      "instances": []
    },
    "4c_visual_descr_mismatch": {
      "count": 0,
      "instances": []
    }
  },
  "totals": {
    "hallucinations_overall": 5
  }
}