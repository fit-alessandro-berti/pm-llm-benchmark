{
  "categories": {
    "1a_instruction_override": {
      "count": 0,
      "instances": []
    },
    "1b_context_omission": {
      "count": 0,
      "instances": []
    },
    "1c_prompt_contradiction": {
      "count": 0,
      "instances": []
    },
    "2a_concept_fabrication": {
      "count": 0,
      "instances": []
    },
    "2b_spurious_numeric": {
      "count": 0,
      "instances": []
    },
    "2c_false_citation": {
      "count": 0,
      "instances": []
    },
    "3a_unsupported_leap": {
      "count": 1,
      "instances": [
        {
          "snippet": "\"...receiving goods should happen before receiving an invoice...\"",
          "why": "This states a general domain truth about event order without support, while the prompt only requires a specific sequence; it is an unsupported leap beyond the prompt.",
          "severity": "low"
        }
      ]
    },
    "3b_self_contradiction": {
      "count": 0,
      "instances": []
    },
    "3c_circular_reasoning": {
      "count": 0,
      "instances": []
    },
    "4a_syntax_error": {
      "count": 0,
      "instances": []
    },
    "4b_model_semantics_breach": {
      "count": 1,
      "instances": [
        {
          "snippet": "nested SEQUENCE operator: root = ProcessTree(operator=Operator.SEQUENCE, children=[..., sequence_block, ...])",
          "why": "The use of nested SEQUENCE nodes violates the canonical process tree representation since these can be flattened; it shows a breach of modelling notation conventions.",
          "severity": "medium"
        }
      ]
    },
    "4c_visual_descr_mismatch": {
      "count": 0,
      "instances": []
    }
  },
  "totals": { "hallucinations_overall": 2 }
}