{
  "categories": {
    "1a_instruction_override": { "count": 0, "instances": [] },
    "1b_context_omission":    { "count": 0, "instances": [] },
    "1c_prompt_contradiction":{ "count": 0, "instances": [] },
    "2a_concept_fabrication": { 
      "count": 2, 
      "instances": [
        {
          "snippet": "Introduction of activities like `Approve_Minority` and `Reject_Minority` as activities",
          "why": "Activities labeled as 'Approve_Minority' or 'Reject_Minority' are fabricated concepts since DECLARE models on activities/events, not data attributes purported as activities.",
          "severity": "high"
        },
        {
          "snippet": "Activity `Applicant_Sensitive_Activity` added vaguely with unclear purpose",
          "why": "The concept of `Applicant_Sensitive_Activity` as an activity disclosing sensitive info is fabricated without basis in the prompt or standard DECLARE semantics.",
          "severity": "medium"
        }
      ]
    },
    "2b_spurious_numeric":    { "count": 1, "instances": [
      {
        "snippet": "`nonchainsuccession` defined with `\"support\": 0.0, \"confidence\": 0.0`",
        "why": "Using 0.0 support and confidence is non-standard and unsupported for specifying prescriptive constraints, thus numeric parameters are spurious.",
        "severity": "medium"
      }
    ]},
    "2c_false_citation":      { "count": 0, "instances": [] },
    "3a_unsupported_leap":    { "count": 2, "instances": [
      {
        "snippet": "Both `succession` constraints requiring `FinalDecision` to be immediately preceded by both `RequestAdditionalInfo` and `BiasMitigationCheck`",
        "why": "Concluding model correctness despite impossibility for an event to have two different immediate predecessors violates logic.",
        "severity": "high"
      },
      {
        "snippet": "Assuming `succession` constraint suffices for bias mitigation instead of weaker constraints like `precedence` or `response`",
        "why": "The claim that immediate succession captures intended bias check logic is an unjustified leap ignoring better-suited constraints.",
        "severity": "medium"
      }
    ]},
    "3b_self_contradiction":  { "count": 1, "instances": [
      {
        "snippet": "Non-succession constraint rationale mentions preventing direct succession to `Reject` but implemented on `FinalDecision`",
        "why": "The contradiction between explanation and code target invalidates the intended constraint consistency.",
        "severity": "high"
      }
    ]},
    "3c_circular_reasoning":  { "count": 0, "instances": [] },
    "4a_syntax_error":        { "count": 0, "instances": [] },
    "4b_model_semantics_breach": { "count": 1, "instances": [
      {
        "snippet": "Modeling data attributes as separate activities in DECLARE process model",
        "why": "Violates semantics of DECLARE where activities represent events, not data properties; conflates separate modeling layers.",
        "severity": "critical"
      }
    ]},
    "4c_visual_descr_mismatch": { "count": 0, "instances": [] }
  },
  "totals": { "hallucinations_overall": 8 }
}