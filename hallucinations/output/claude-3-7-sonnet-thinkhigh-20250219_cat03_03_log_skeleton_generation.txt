{
  "categories": {
    "1a_instruction_override": {
      "count": 0,
      "instances": []
    },
    "1b_context_omission": {
      "count": 1,
      "instances": [
        {
          "snippet": "`directly_follows`: omission of ('PI', 'QC') pair",
          "why": "The omission of a strongly likely directly-follows pair ('PI', 'QC') ignores prompt context about process steps, leading to incomplete model representation.",
          "severity": "medium"
        }
      ]
    },
    "1c_prompt_contradiction": {
      "count": 1,
      "instances": [
        {
          "snippet": "`always_after`: includes ('CA', 'RI'), ('QC', 'PO'), ('IC', 'RP') despite conditionality noted",
          "why": "These constraints contradict candidate's own textual analysis that conditional execution may prevent these activities from always occurring after the first.",
          "severity": "high"
        }
      ]
    },
    "2a_concept_fabrication": {
      "count": 0,
      "instances": []
    },
    "2b_spurious_numeric": {
      "count": 1,
      "instances": [
        {
          "snippet": "`activ_freq` bounds like {'RI': {0,1}, 'PI': {0,1}} indicating no rework loops",
          "why": "Restricting frequencies to {0,1} for activities that likely repeat due to rework is unsupported by scenario complexity and oversimplifies process behavior.",
          "severity": "medium"
        }
      ]
    },
    "2c_false_citation": {
      "count": 0,
      "instances": []
    },
    "3a_unsupported_leap": {
      "count": 1,
      "instances": [
        {
          "snippet": "`directly_follows`: ('QC', 'PO') assumed immediate even if QC may fail",
          "why": "Assumes packing always immediately follows quality check ignoring QC failure conditionality, an unjustified conclusion from the given facts.",
          "severity": "high"
        }
      ]
    },
    "3b_self_contradiction": {
      "count": 1,
      "instances": [
        {
          "snippet": "candidate's text acknowledges conditional paths, but `always_after` implies guarantee of subsequent activities",
          "why": "This internal contradiction invalidates part of the model since activities are both considered conditional and guaranteed following others.",
          "severity": "critical"
        }
      ]
    },
    "3c_circular_reasoning": {
      "count": 0,
      "instances": []
    },
    "4a_syntax_error": {
      "count": 0,
      "instances": []
    },
    "4b_model_semantics_breach": {
      "count": 0,
      "instances": []
    },
    "4c_visual_descr_mismatch": {
      "count": 0,
      "instances": []
    }
  },
  "totals": {
    "hallucinations_overall": 6
  }
}