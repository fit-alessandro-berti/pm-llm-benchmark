{
  "categories": {
    "1a_instruction_override": { "count": 0, "instances": [] },
    "1b_context_omission": { "count": 0, "instances": [] },
    "1c_prompt_contradiction": { "count": 0, "instances": [] },
    "2a_concept_fabrication": {
      "count": 0,
      "instances": []
    },
    "2b_spurious_numeric": {
      "count": 0,
      "instances": []
    },
    "2c_false_citation": {
      "count": 0,
      "instances": []
    },
    "3a_unsupported_leap": {
      "count": 3,
      "instances": [
        {
          "snippet": "introduction of the activities `Approve` and `Reject` within the `nonsuccession` constraint without defining them anywhere else",
          "why": "The model uses activities not defined in the process alphabet, which invalidates the logical coherence of the model, representing an unsupported conclusion that these activities apply.",
          "severity": "critical"
        },
        {
          "snippet": "mixes these specific activities with new generic activities (`Approve`, `Reject`) in constraints",
          "why": "The reasoning assumes these generic and specific activities relate or overlap, but DECLARE treats activity names as unique and unrelated, making the mixing logically unsound.",
          "severity": "high"
        },
        {
          "snippet": "pairs a generic check activity (`CheckApplicantRace`) with a specific outcome activity (`Approve_Minority`), creating ambiguity",
          "why": "The model assumes a link between different granularities of activities without formal justification, leading to ambiguous logic in constraint relationships.",
          "severity": "medium"
        }
      ]
    },
    "3b_self_contradiction": {
      "count": 1,
      "instances": [
        {
          "snippet": "forbidding `nonsuccession(CheckApplicantGender, Reject_Female)` and `nonsuccession(CheckApplicantGender, Reject)` simultaneously",
          "why": "This represents conflicting constraints treating the same logical decision inconsistently within the same model, revealing an internal conflict.",
          "severity": "high"
        }
      ]
    },
    "3c_circular_reasoning": { "count": 0, "instances": [] },
    "4a_syntax_error": { "count": 0, "instances": [] },
    "4b_model_semantics_breach": {
      "count": 2,
      "instances": [
        {
          "snippet": "using activities (`Approve` and `Reject`) without adding them to the existence list or explaining their relation",
          "why": "Violates DECLARE modelling rules requiring all activities to be defined and known before use in constraints.",
          "severity": "critical"
        },
        {
          "snippet": "mixing specific attribute-aware activities (like `Approve_Minority`) with generic ones (`Approve`)",
          "why": "Breaches modelling consistency by mixing distinct activities as if related, whereas the notation treats all activity names as unique.",
          "severity": "high"
        }
      ]
    },
    "4c_visual_descr_mismatch": { "count": 0, "instances": [] }
  },
  "totals": { "hallucinations_overall": 7 }
}