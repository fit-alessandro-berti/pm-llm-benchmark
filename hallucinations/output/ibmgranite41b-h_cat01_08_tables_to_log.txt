{
  "categories": {
    "1a_instruction_override": {
      "count": 3,
      "instances": [
        {
          "snippet": "Missing Order 1005 entirely despite prompt requirement",
          "why": "The prompt explicitly requires inclusion of every event for every order_id, but 1005 is omitted completely.",
          "severity": "critical"
        },
        {
          "snippet": "No \"Order Arrived\" events included despite available data",
          "why": "Prompt explicitly mandates deriving both \"Order Dispatched\" and \"Order Arrived\" events from Delivery table, yet arrivals are omitted.",
          "severity": "critical"
        },
        {
          "snippet": "Fabricated events for Order 1004 without noting assumptions",
          "why": "Inventing dispatch and invoice events absent in prompt data violates clear instructions to document assumptions when data is missing.",
          "severity": "high"
        }
      ]
    },
    "1b_context_omission": {
      "count": 4,
      "instances": [
        {
          "snippet": "Omitting entire Order 1005 and related events",
          "why": "Important context from the prompt data (all orders) is silently dropped, impairing answer completeness.",
          "severity": "critical"
        },
        {
          "snippet": "Ignoring 'Order Arrived' events derived from delivery_arrival_date",
          "why": "Prompt context requires including these lifecycle events, yet they are completely omitted without explanation.",
          "severity": "critical"
        },
        {
          "snippet": "No documentation or handling of multiple deliveries, invoices, or payments",
          "why": "Ignoring multiplicity context leads to partial and misleading event representation.",
          "severity": "high"
        },
        {
          "snippet": "Not documenting assumptions or summarization rationale for multi-event cases",
          "why": "Answer ignores prompt context demanding justification for data aggregation or omission when ambiguous.",
          "severity": "medium"
        }
      ]
    },
    "1c_prompt_contradiction": {
      "count": 0,
      "instances": []
    },
    "2a_concept_fabrication": {
      "count": 3,
      "instances": [
        {
          "snippet": "Fabricated \"Order Dispatched\" event for 1004 on 2024-01-07T10:30:00Z",
          "why": "No corresponding delivery record exists in prompt data; inventing event contradicts factual prompt content.",
          "severity": "high"
        },
        {
          "snippet": "Invented \"Invoice Issued\" event for 1004 though no such invoice exists",
          "why": "This event is fabricated without backing data or declared assumptions.",
          "severity": "high"
        },
        {
          "snippet": "\"Payment Received\" event for 1004 listed as N/A with nonsensical reference \"REF-N/A\"",
          "why": "Answer fabricates a meaningless payment reference instead of acknowledging missing data appropriately.",
          "severity": "medium"
        }
      ]
    },
    "2b_spurious_numeric": {
      "count": 0,
      "instances": []
    },
    "2c_false_citation": {
      "count": 0,
      "instances": []
    },
    "3a_unsupported_leap": {
      "count": 3,
      "instances": [
        {
          "snippet": "\"Items Picked\" event for 1004 timestamp \"N/A\" despite real picking data existing",
          "why": "Answer illogically ignores accurate timestamps, making unsupported assumptions about data absence.",
          "severity": "medium"
        },
        {
          "snippet": "For 1003 \"Payment Received\" uses payment details from different order (PAY-2003)",
          "why": "Incorrect association is an unsupported leap, mixing data across orders without justification.",
          "severity": "high"
        },
        {
          "snippet": "Summarizing multiple deliveries/payments for 1002 without logical explanation",
          "why": "Answer jumps to summarization with no rationale, omitting events and skewing lifecycle completeness.",
          "severity": "medium"
        }
      ]
    },
    "3b_self_contradiction": {
      "count": 0,
      "instances": []
    },
    "3c_circular_reasoning": {
      "count": 0,
      "instances": []
    },
    "4a_syntax_error": {
      "count": 0,
      "instances": []
    },
    "4b_model_semantics_breach": {
      "count": 2,
      "instances": [
        {
          "snippet": "Table omits Case IDs on subsequent lines within same case, breaking flat event log rule",
          "why": "Violates prompt's structural requirement of repeated Case IDs per event, making output unusable for process mining.",
          "severity": "critical"
        },
        {
          "snippet": "Using payment_method as Resource/Actor, an illogical role assignment",
          "why": "Misdirected attribution of resource semantics breaks model logic on actors in event logs.",
          "severity": "medium"
        }
      ]
    },
    "4c_visual_descr_mismatch": {
      "count": 0,
      "instances": []
    }
  },
  "totals": { "hallucinations_overall": 18 }
}