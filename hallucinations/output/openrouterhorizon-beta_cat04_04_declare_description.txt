{
  "categories": {
    "1a_instruction_override": {
      "count": 0,
      "instances": []
    },
    "1b_context_omission": {
      "count": 0,
      "instances": []
    },
    "1c_prompt_contradiction": {
      "count": 0,
      "instances": []
    },
    "2a_concept_fabrication": {
      "count": 2,
      "instances": [
        {
          "snippet": "The answer incorrectly states the opposite: \"Quality_Assurance_Review must be preceded by Authorize_Contract_Terms.\"",
          "why": "This inverts the actual meaning of the 'precedence' constraint, fabricating a reversed relationship not in the model.",
          "severity": "critical"
        },
        {
          "snippet": "The sequence it derives (`Credit Check -> Authorize -> QA -> Assemble`) is the *opposite* of what the model specifies for those activities (`QA -> Authorize -> Credit Check`).",
          "why": "The entire end-to-end process narrative is fabricated, not matching the actual formal semantics of the DECLARE model.",
          "severity": "critical"
        }
      ]
    },
    "2b_spurious_numeric": {
      "count": 0,
      "instances": []
    },
    "2c_false_citation": {
      "count": 0,
      "instances": []
    },
    "3a_unsupported_leap": {
      "count": 3,
      "instances": [
        {
          "snippet": "The answer incorrectly states the opposite: \"Authorize_Contract_Terms must be directly preceded by Preliminary_Credit_Check.\"",
          "why": "This reversed interpretation is unsupported by the provided model and misses contradictions, making an unjustified leap in reasoning.",
          "severity": "critical"
        },
        {
          "snippet": "The answer confuses `chainresponse` with `chainsuccession` and states transfer must occur \"immediately.\"",
          "why": "This is an unsupported logical leap, as it misapplies distinct constraint semantics leading to incorrect conclusions.",
          "severity": "high"
        },
        {
          "snippet": "It provides plausible real-world motivations for rules that do not actually exist in the model.",
          "why": "The motivations contradict the actual constraints; thus, the reasoning is unsupported by the facts in the model.",
          "severity": "high"
        }
      ]
    },
    "3b_self_contradiction": {
      "count": 1,
      "instances": [
        {
          "snippet": "Misses the inherent contradiction this constraint creates with the `response` constraint (which states `Receive_Application` must be followed by `Preliminary_Credit_Check`).",
          "why": "The answer ignores contradictory constraints within the same model, leading to internal inconsistency.",
          "severity": "critical"
        }
      ]
    },
    "3c_circular_reasoning": {
      "count": 0,
      "instances": []
    },
    "4a_syntax_error": {
      "count": 0,
      "instances": []
    },
    "4b_model_semantics_breach": {
      "count": 0,
      "instances": []
    },
    "4c_visual_descr_mismatch": {
      "count": 0,
      "instances": []
    }
  },
  "totals": {
    "hallucinations_overall": 7
  }
}