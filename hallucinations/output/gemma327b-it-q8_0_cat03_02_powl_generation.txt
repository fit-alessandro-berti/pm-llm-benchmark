{
  "categories": {
    "1a_instruction_override": { "count": 0, "instances": [] },
    "1b_context_omission": { "count": 0, "instances": [] },
    "1c_prompt_contradiction": { "count": 0, "instances": [] },
    "2a_concept_fabrication": { "count": 0, "instances": [] },
    "2b_spurious_numeric": { "count": 0, "instances": [] },
    "2c_false_citation": { "count": 0, "instances": [] },
    "3a_unsupported_leap": {
      "count": 5,
      "instances": [
        {
          "snippet": "code attempts to add edges from nodes inside `concurrent_nodes` to `loop_nodes` using `concurrent_nodes.order`",
          "why": "This incorrectly links nodes across separate structures without a proper top-level partial order, an unsupported leap in reasoning about POWL linking.",
          "severity": "high"
        },
        {
          "snippet": "`loop_nodes.order.add_edge(BNC, xor_nodes)` with `loop_nodes` as an `OperatorPOWL` lacking `.order`",
          "why": "The code assumes nonexistent attributes and tries to define dependencies improperly, an unsupported leap violating the library's model semantics.",
          "severity": "critical"
        },
        {
          "snippet": "`xor_nodes.order.add_edge(CD, final_nodes)` and similar calls on `OperatorPOWL`",
          "why": "Invalid assumption that `OperatorPOWL` has an `.order` to add edges causing unsupported dependency modeling.",
          "severity": "critical"
        },
        {
          "snippet": "Edges from `final_nodes.order` to nodes outside its `nodes` list, e.g., `GLA`",
          "why": "Adding edges to nodes not included in the partial order structure, an unsupported and invalid leap.",
          "severity": "high"
        },
        {
          "snippet": "Attempting to create dependencies on children of operators instead of on the operator nodes themselves",
          "why": "Logical misunderstanding of POWL semantics, improperly modeling dependencies at a granularity not supported by the framework.",
          "severity": "high"
        }
      ]
    },
    "3b_self_contradiction": { "count": 0, "instances": [] },
    "3c_circular_reasoning": { "count": 0, "instances": [] },
    "4a_syntax_error": { "count": 0, "instances": [] },
    "4b_model_semantics_breach": {
      "count": 5,
      "instances": [
        {
          "snippet": "`concurrent_nodes.order.add_edge(DA, loop_nodes)` where `loop_nodes` is external",
          "why": "Edges added pointing outside the nodes of a `StrictPartialOrder`, violating modelling rules.",
          "severity": "high"
        },
        {
          "snippet": "`loop_nodes` and `xor_nodes` being `OperatorPOWL`s without `.order` attribute",
          "why": "Assumption of an `.order` attribute on `OperatorPOWL` objects is a modelling breach.",
          "severity": "critical"
        },
        {
          "snippet": "Edges added from `final_nodes.order` to `GLA` not included in `final_nodes` nodes list",
          "why": "Violates the invariant that edges must only connect nodes within the partial order's nodes.",
          "severity": "high"
        },
        {
          "snippet": "Using operator children nodes (`BNC`, `CD`, `MD`) to add dependencies instead of operator nodes",
          "why": "Breaks the semantics that only composed operator nodes are used to link structures, breaching modeling rules.",
          "severity": "high"
        },
        {
          "snippet": "`root.order.add_edge(CS, concurrent_nodes)` treats `concurrent_nodes` as a single node incorrectly",
          "why": "Treating a composite structure as a single node when its composition requires higher-level ordering is a breach of correct POWL structure.",
          "severity": "medium"
        }
      ]
    },
    "4c_visual_descr_mismatch": { "count": 0, "instances": [] }
  },
  "totals": { "hallucinations_overall": 10 }
}