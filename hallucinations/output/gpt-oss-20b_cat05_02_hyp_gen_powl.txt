{
  "categories": {
    "1a_instruction_override": { "count": 0, "instances": [] },
    "1b_context_omission":    { "count": 0, "instances": [] },
    "1c_prompt_contradiction":{ "count": 0, "instances": [] },
    "2a_concept_fabrication": { "count": 0, "instances": [] },
    "2b_spurious_numeric":    { "count": 0, "instances": [] },
    "2c_false_citation":      { "count": 0, "instances": [] },
    "3a_unsupported_leap":    {
      "count": 2,
      "instances": [
        {
          "snippet": "Query C [...] The final SELECT clause contains broken logic: MIN(c.submission_date) and MAX(c.submission_date + INTERVAL '0 days')",
          "why": "These functions are used nonsensically in the query context, producing results not aligned with the intended logic for first and last events.",
          "severity": "high"
        },
        {
          "snippet": "Query D [...] net_ep_diff calculation is wrong; it becomes count(E) + count(P) instead of count(E) - count(P).",
          "why": "The incorrect CASE logic leads to a mathematically unsupported leap in calculating differences, invalidating the result.",
          "severity": "critical"
        }
      ]
    },
    "3b_self_contradiction":  { "count": 0, "instances": [] },
    "3c_circular_reasoning":  { "count": 0, "instances": [] },
    "4a_syntax_error":        { "count": 0, "instances": [] },
    "4b_model_semantics_breach": { "count": 1,
      "instances": [
        {
          "snippet": "Query D [...] final aggregation COUNT(DISTINCT epc.adjuster_id) within group defined by ad.name and ad.specialization",
          "why": "Counting distinct adjuster_id within a group that already identifies a single adjuster contradicts correct aggregation semantics.",
          "severity": "high"
        }
      ]
    },
    "4c_visual_descr_mismatch": { "count": 0, "instances": [] }
  },
  "totals": { "hallucinations_overall": 3 }
}