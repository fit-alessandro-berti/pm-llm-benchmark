{
  "categories": {
    "1a_instruction_override": {
      "count": 0,
      "instances": []
    },
    "1b_context_omission": {
      "count": 0,
      "instances": []
    },
    "1c_prompt_contradiction": {
      "count": 0,
      "instances": []
    },
    "2a_concept_fabrication": {
      "count": 0,
      "instances": []
    },
    "2b_spurious_numeric": {
      "count": 0,
      "instances": []
    },
    "2c_false_citation": {
      "count": 0,
      "instances": []
    },
    "3a_unsupported_leap": {
      "count": 4,
      "instances": [
        {
          "snippet": "\"...where the quality assurance review is mandated to follow the assembly of the package.\"",
          "why": "Incorrectly interprets `responded_existence` as imposing order (QA after Assemble), though it only requires occurrence without order.",
          "severity": "high"
        },
        {
          "snippet": "\"A 'chain succession' constraint ... sets the stage for tightly coupling these two steps so that any error ... gets caught immediately before assembling the final offer.\"",
          "why": "Misreasoning the order and role of `chainsuccession`; the constraint implies QA immediately followed by Assemble, contradicting the explanation's logic.",
          "severity": "high"
        },
        {
          "snippet": "\"...a 'chain precedence' ... reinforces that credit has been checked long before loan terms are authorized.\"",
          "why": "Misinterprets the `chainprecedence` constraint direction; according to model, authorization precedes credit check immediately, opposite of claim.",
          "severity": "critical"
        },
        {
          "snippet": "\"...if funds are disbursed, then the customer must be notified (and vice versa). These symmetric rules guarantee...\"",
          "why": "Incorrectly states bidirectionality from `altresponse` and `altprecedence`; 'vice versa' implication is unsupported by the constraints.",
          "severity": "medium"
        }
      ]
    },
    "3b_self_contradiction": {
      "count": 0,
      "instances": []
    },
    "3c_circular_reasoning": {
      "count": 0,
      "instances": []
    },
    "4a_syntax_error": {
      "count": 0,
      "instances": []
    },
    "4b_model_semantics_breach": {
      "count": 0,
      "instances": []
    },
    "4c_visual_descr_mismatch": {
      "count": 0,
      "instances": []
    }
  },
  "totals": {
    "hallucinations_overall": 4
  }
}