{
  "categories": {
    "1a_instruction_override": { "count": 0, "instances": [] },
    "1b_context_omission": { "count": 0, "instances": [] },
    "1c_prompt_contradiction": { "count": 0, "instances": [] },
    "2a_concept_fabrication": { "count": 0, "instances": [] },
    "2b_spurious_numeric": { "count": 0, "instances": [] },
    "2c_false_citation": { "count": 0, "instances": [] },
    "3a_unsupported_leap": {
      "count": 5,
      "instances": [
        {
          "snippet": "Step 3: Combining response(...) and succession(...) into a rigid sequence (Receive -> Check -> Gather)",
          "why": "This incorrectly assumes immediate or strict sequencing, whereas DECLARE constraints allow flexible ordering as long as constraints hold.",
          "severity": "high"
        },
        {
          "snippet": "Step 5: Describes chainsuccession(Quality_Assurance_Review, Assemble_Loan_Offer_Package) vaguely and misses immediate succession requirement",
          "why": "The LLM's interpretation fails to capture the mandatory immediate succession, leading to a misleading explanation of the constraint.",
          "severity": "high"
        },
        {
          "snippet": "Step 7: Claims response(Assemble_Loan_Offer_Package, Transfer_Funds) instead of chainresponse",
          "why": "Using the wrong constraint type ignores the immediate succession requirement, resulting in an unjustified conclusion.",
          "severity": "high"
        },
        {
          "snippet": "Step 7: Reverses altprecedence temporal relationship by stating Notify_Customer must follow Transfer_Funds",
          "why": "Incorrectly flipping temporal direction constitutes an unsupported leap not justified by the constraint's definition.",
          "severity": "high"
        },
        {
          "snippet": "Step 6: Claims 'Both are required for final approval' from coexistence constraint",
          "why": "The coexistence only requires that if one occurs, the other must occur sometime, but does not mandate both as strictly required, adding an interpretation leap.",
          "severity": "medium"
        }
      ]
    },
    "3b_self_contradiction": {
      "count": 1,
      "instances": [
        {
          "snippet": "Step 10: Explanation for noncoexistence(...) describes it as preventing 'commingling' instead of mutual exclusion in entire process instance",
          "why": "The description conflicts with the actual constraint meaning, implying a weaker condition than the mutual exclusivity defined, conflicting within the same evaluation.",
          "severity": "medium"
        }
      ]
    },
    "3c_circular_reasoning": { "count": 0, "instances": [] },
    "4a_syntax_error": { "count": 0, "instances": [] },
    "4b_model_semantics_breach": { "count": 0, "instances": [] },
    "4c_visual_descr_mismatch": { "count": 0, "instances": [] }
  },
  "totals": { "hallucinations_overall": 6 }
}