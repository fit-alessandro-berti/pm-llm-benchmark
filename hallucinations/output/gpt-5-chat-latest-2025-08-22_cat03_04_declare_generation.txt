{
  "categories": {
    "1a_instruction_override": { "count": 0, "instances": [] },
    "1b_context_omission": { "count": 0, "instances": [] },
    "1c_prompt_contradiction": { "count": 0, "instances": [] },
    "2a_concept_fabrication": { "count": 0, "instances": [] },
    "2b_spurious_numeric": { "count": 0, "instances": [] },
    "2c_false_citation": { 
      "count": 0, 
      "instances": [] 
    },
    "3a_unsupported_leap": { "count": 0, "instances": [] },
    "3b_self_contradiction": { 
      "count": 1, 
      "instances": [
        {
          "snippet": "\"noncoexistence(\"FL\", \"IG\")\" contradicts \"init(\"IG\")\" and \"existence(\"FL\")\"",
          "why": "The model states that FL and IG cannot coexist but requires both IG to start and FL to exist, making the model unsatisfiable.",
          "severity": "critical"
        }
      ] 
    },
    "3c_circular_reasoning": { "count": 0, "instances": [] },
    "4a_syntax_error": { "count": 0, "instances": [] },
    "4b_model_semantics_breach": { 
      "count": 1, 
      "instances": [
        {
          "snippet": "\"response\": {\"DD\": {\"TFC\": ...}} used instead of tuple keys like (\"DD\",\"TFC\")",
          "why": "The answer uses nested dicts for binary constraints instead of the library-standard format with tuples as keys, violating the expected data structure.",
          "severity": "high"
        }
      ] 
    },
    "4c_visual_descr_mismatch": { "count": 0, "instances": [] }
  },
  "totals": { "hallucinations_overall": 2 }
}