{
  "categories": {
    "1a_instruction_override": {
      "count": 0,
      "instances": []
    },
    "1b_context_omission": {
      "count": 0,
      "instances": []
    },
    "1c_prompt_contradiction": {
      "count": 0,
      "instances": []
    },
    "2a_concept_fabrication": {
      "count": 1,
      "instances": [
        {
          "snippet": "The solution invents multiple events for `Case ID` 1004 that do not exist in the source data",
          "why": "Events are fabricated for case 1004 where no data exists in any source table, violating data integrity.",
          "severity": "critical"
        }
      ]
    },
    "2b_spurious_numeric": {
      "count": 0,
      "instances": []
    },
    "2c_false_citation": {
      "count": 0,
      "instances": []
    },
    "3a_unsupported_leap": {
      "count": 3,
      "instances": [
        {
          "snippet": "The solution completely misses multiple events for `Case ID` 1002",
          "why": "The answer omits required events for order 1002 despite prompt instructions to include every event.",
          "severity": "high"
        },
        {
          "snippet": "Events are incorrectly attributed to the wrong cases (e.g., payment for 1003 linked to case 1004)",
          "why": "Misassigned events cause a logically invalid mapping of payments and orders, breaking correct process flow.",
          "severity": "high"
        },
        {
          "snippet": "Events incorrectly assigned: 'Payment Received - INV-1003' to Case 1003 though INV-1003 belongs to 1002",
          "why": "Wrong joins in data cause logically unjustified conclusions about event ownership and flow.",
          "severity": "high"
        }
      ]
    },
    "3b_self_contradiction": {
      "count": 0,
      "instances": []
    },
    "3c_circular_reasoning": {
      "count": 0,
      "instances": []
    },
    "4a_syntax_error": {
      "count": 0,
      "instances": []
    },
    "4b_model_semantics_breach": {
      "count": 1,
      "instances": [
        {
          "snippet": "`payment_reference` used as the `Resource/Actor` for 'Payment Received' events",
          "why": "Assigning a payment reference (an event attribute) as the resource actor contradicts standard event log semantics.",
          "severity": "high"
        }
      ]
    },
    "4c_visual_descr_mismatch": {
      "count": 0,
      "instances": []
    }
  },
  "totals": {
    "hallucinations_overall": 5
  }
}