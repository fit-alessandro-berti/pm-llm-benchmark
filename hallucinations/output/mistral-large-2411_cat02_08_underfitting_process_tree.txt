{
  "categories": {
    "1a_instruction_override": { "count": 0, "instances": [] },
    "1b_context_omission":    { "count": 0, "instances": [] },
    "1c_prompt_contradiction":{ "count": 0, "instances": [] },
    "2a_concept_fabrication": { "count": 0, "instances": [] },
    "2b_spurious_numeric":    { "count": 0, "instances": [] },
    "2c_false_citation":      { "count": 0, "instances": [] },
    "3a_unsupported_leap":    {
      "count": 2,
      "instances": [
        {
          "snippet": "The answer identifies the trace: [Receive_Order, Check_Inventory, Authorize_Payment, Close_Order]. This trace is fundamentally incorrect and not allowed by the provided model.",
          "why": "The answer claims this trace is permitted by the model but it flatly contradicts the model structure, hence the conclusion that the trace is valid is an unsupported leap.",
          "severity": "critical"
        },
        {
          "snippet": "The answer incorrectly states that Operator.PARALLEL allows the identified (invalid) trace; it misunderstands how PARALLEL operates in the process tree.",
          "why": "The reasoning that the PARALLEL operator allows skipping parallel branches is factually wrong, constituting an unsupported leap in process tree semantics.",
          "severity": "high"
        }
      ]
    },
    "3b_self_contradiction":  { "count": 0, "instances": [] },
    "3c_circular_reasoning":  { "count": 0, "instances": [] },
    "4a_syntax_error":        { "count": 0, "instances": [] },
    "4b_model_semantics_breach": { "count": 0, "instances": [] },
    "4c_visual_descr_mismatch": { "count": 0, "instances": [] }
  },
  "totals": { "hallucinations_overall": 2 }
}