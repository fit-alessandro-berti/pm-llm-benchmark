{
  "categories": {
    "1a_instruction_override": {
      "count": 0,
      "instances": []
    },
    "1b_context_omission": {
      "count": 0,
      "instances": []
    },
    "1c_prompt_contradiction": {
      "count": 0,
      "instances": []
    },
    "2a_concept_fabrication": {
      "count": 0,
      "instances": []
    },
    "2b_spurious_numeric": {
      "count": 0,
      "instances": []
    },
    "2c_false_citation": {
      "count": 0,
      "instances": []
    },
    "3a_unsupported_leap": {
      "count": 6,
      "instances": [
        {
          "snippet": "The constraint ('Reserve Items', 'Pick Items') contradicts 'activ_freq' definition...",
          "why": "The model incorrectly concludes equivalence between 'Reserve Items' and 'Pick Items' counts despite mismatched occurrence sets, an unjustified logical leap.",
          "severity": "critical"
        },
        {
          "snippet": "The student misinterprets always_before: provides ('Check Availability', 'Reserve Items') which reverses intended order.",
          "why": "The conclusion that the provided tuple is correct conflicts with the constraint's definition, showing a critical unsupported inference.",
          "severity": "critical"
        },
        {
          "snippet": "Every entry in always_before is backwards, showing a complete failure to grasp constraint.",
          "why": "Generalizing this fundamental misunderstanding without correction or justification is an unsupported leap invalidating the logic.",
          "severity": "critical"
        },
        {
          "snippet": "The always_after constraint is reversed: ('Reserve Items', 'Check Availability') given instead of correct inverse.",
          "why": "Assigning the reversed tuple as valid contradicts the defined semantics and is logically unsupported by the given facts.",
          "severity": "critical"
        },
        {
          "snippet": "Every single entry in always_after set is backwards, the model fails to properly separate these constraints.",
          "why": "Misclassification and inversion without rationale constitute unsupported logical conclusions invalidating the model.",
          "severity": "critical"
        },
        {
          "snippet": "never_together is used for pairs like ('Pick Items', 'Check Availability'), implying mutual exclusion incorrectly.",
          "why": "This contradicts the known process flow where these activities co-occur, an unsupported leap that misapplies the constraint.",
          "severity": "critical"
        }
      ]
    },
    "3b_self_contradiction": {
      "count": 1,
      "instances": [
        {
          "snippet": "('Reserve Items', 'Pick Items') in equivalence conflicts with activ_freq definitions {1} vs {1, 2, 3}.",
          "why": "The model contradicts itself within the constraint, claiming equivalence in occurrences but listing incompatible activity frequencies.",
          "severity": "critical"
        }
      ]
    },
    "3c_circular_reasoning": {
      "count": 0,
      "instances": []
    },
    "4a_syntax_error": {
      "count": 0,
      "instances": []
    },
    "4b_model_semantics_breach": {
      "count": 0,
      "instances": []
    },
    "4c_visual_descr_mismatch": {
      "count": 0,
      "instances": []
    }
  },
  "totals": {
    "hallucinations_overall": 7
  }
}