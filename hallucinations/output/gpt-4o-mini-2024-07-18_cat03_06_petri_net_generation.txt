{
  "categories": {
    "1a_instruction_override": { "count": 0, "instances": [] },
    "1b_context_omission":    { "count": 0, "instances": [] },
    "1c_prompt_contradiction":{ "count": 0, "instances": [] },
    "2a_concept_fabrication": { "count": 0, "instances": [] },
    "2b_spurious_numeric":    { "count": 0, "instances": [] },
    "2c_false_citation":      { "count": 0, "instances": [] },
    "3a_unsupported_leap":    { 
      "count": 4, 
      "instances": [
        {
          "snippet": "DV firing simultaneously produces tokens in both document_verified and document_re_submission",
          "why": "This treats DV as producing both outcomes simultaneously instead of modeling an exclusive choice, an unsupported leap in reasoning.",
          "severity": "high"
        },
        {
          "snippet": "FC leads to fraud_check_passed and in_depth_investigation simultaneously",
          "why": "Implies FC transition always branches both ways simultaneously without modeling exclusive decision, an unsupported leap.",
          "severity": "high"
        },
        {
          "snippet": "Approval (AP) connected unconditionally from CA ignoring conditional threshold",
          "why": "Fails to model the conditional nature of approval, forcing AP step always, which is logically incorrect.",
          "severity": "high"
        },
        {
          "snippet": "Loops from document_re_submission to DV and in_depth_investigation to FC bypass activities",
          "why": "Directly connects places to transitions without modeling intervening activities, skipping essential process elements.",
          "severity": "high"
        }
      ] 
    },
    "3b_self_contradiction":  { "count": 0, "instances": [] },
    "3c_circular_reasoning":  { "count": 0, "instances": [] },
    "4a_syntax_error":        { 
      "count": 2, 
      "instances": [
        {
          "snippet": "petri_utils.add_arc_from_to(claim_assessment, approval, net): connects T to T",
          "why": "Arcs between transitions are invalid in Petri nets; must connect Place->Transition or Transition->Place only.",
          "severity": "critical"
        },
        {
          "snippet": "petri_utils.add_arc_from_to(notification, closure, net): connects T to T",
          "why": "Same invalid arc between transitions, violating Petri net standard syntax.",
          "severity": "critical"
        }
      ] 
    },
    "4b_model_semantics_breach": { 
      "count": 1, 
      "instances": [
        {
          "snippet": "Redundant arc: duplicate petri_utils.add_arc_from_to(document_verified, fraud_check, net)",
          "why": "Adding the same arc twice is a semantic modeling breach; sloppy and potentially causes confusion.",
          "severity": "low"
        }
      ] 
    },
    "4c_visual_descr_mismatch": { 
      "count": 1, 
      "instances": [
        {
          "snippet": "payment -> notified (T->P) then notified -> closure (P->T) but ignores notification transition",
          "why": "Incorrectly models the sequence by skipping the Notification transition, causing a mismatch between description and net elements.",
          "severity": "medium"
        }
      ] 
    }
  },
  "totals": { "hallucinations_overall": 9 }
}