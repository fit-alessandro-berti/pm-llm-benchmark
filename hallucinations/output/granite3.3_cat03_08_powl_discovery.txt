{
  "categories": {
    "1a_instruction_override": {
      "count": 0,
      "instances": []
    },
    "1b_context_omission": {
      "count": 0,
      "instances": []
    },
    "1c_prompt_contradiction": {
      "count": 0,
      "instances": []
    },
    "2a_concept_fabrication": {
      "count": 0,
      "instances": []
    },
    "2b_spurious_numeric": {
      "count": 0,
      "instances": []
    },
    "2c_false_citation": {
      "count": 0,
      "instances": []
    },
    "3a_unsupported_leap": {
      "count": 6,
      "instances": [
        {
          "snippet": "'X' -> ['RT', 'TST'] and '*' -> ['IQC', 'LB', 'RT'] in order definition",
          "why": "Uses syntax not supported by POWL; deviates from the rule that operators must be OperatorPOWL nodes in nodes dictionary, making the model invalid.",
          "severity": "high"
        },
        {
          "snippet": "'TST' --> 'RT' if RT is chosen else 'PK'",
          "why": "Uses pseudo-code conditional in ordering where POWL requires modeling through OperatorPOWL nodes, making the logic unsupported by the formalism.",
          "severity": "high"
        },
        {
          "snippet": "Defines 'LB': SilentTransition(), treating an observed activity as silent",
          "why": "Misrepresents LB as a silent transition rather than optional activity via choice, an unjustified conceptual leap.",
          "severity": "high"
        },
        {
          "snippet": "'OR' --> ('X' -> ['RT', 'TST']) placing choice early after OR concurrent with MS",
          "why": "Ordering contradicts observed event log where TST/RT occur after AS and IQC, an unsupported leap in process flow modeling.",
          "severity": "high"
        },
        {
          "snippet": "'AS' --> ('*' -> ['IQC', 'LB', 'RT']) loop including IQC, LB, RT",
          "why": "Misplaces loop structure and incorrectly includes LB and RT right after AS without support from data; conceptually flawed loop modeling.",
          "severity": "high"
        },
        {
          "snippet": "'IQC' --> 'AS' modeling simple edge ignoring loop structure",
          "why": "Simplifies loop into a simple edge missing actual loop semantics visible in logs; unsupported simplification.",
          "severity": "medium"
        }
      ]
    },
    "3b_self_contradiction": {
      "count": 1,
      "instances": [
        {
          "snippet": "Explanation claims optional LB after PK but model places LB as SilentTransition in early loop",
          "why": "Contradiction between textual explanation and concrete model statement regarding LB positioning and nature.",
          "severity": "medium"
        }
      ]
    },
    "3c_circular_reasoning": {
      "count": 0,
      "instances": []
    },
    "4a_syntax_error": {
      "count": 2,
      "instances": [
        {
          "snippet": "Using 'X' -> ['RT', 'TST'] inline in order instead of OperatorPOWL nodes",
          "why": "Violates syntax rules for defining order; edges must connect nodes and operator nodes, not inline lists.",
          "severity": "critical"
        },
        {
          "snippet": "'TST' --> 'RT' if RT is chosen else 'PK' pseudo-code in ordering",
          "why": "Ordering syntax includes unsupported conditional logic text, invalid in POWL.",
          "severity": "critical"
        }
      ]
    },
    "4b_model_semantics_breach": {
      "count": 3,
      "instances": [
        {
          "snippet": "LB defined as SilentTransition() although it is an observed activity",
          "why": "Semantic breach treating visible event as silent, violating conceptual model semantics of POWL.",
          "severity": "high"
        },
        {
          "snippet": "Including LB and RT in loop after AS despite evidence LB occurs after PK and RT after TST",
          "why": "Misplaces activities and loops violating correct control-flow semantics expected from event data.",
          "severity": "high"
        },
        {
          "snippet": "'IQC' --> 'AS' edge not modeling loop back properly",
          "why": "Fails to model loop control semantics accurately, using invalid simplistic edge violating expected loop semantics.",
          "severity": "medium"
        }
      ]
    },
    "4c_visual_descr_mismatch": {
      "count": 0,
      "instances": []
    }
  },
  "totals": {
    "hallucinations_overall": 14
  }
}