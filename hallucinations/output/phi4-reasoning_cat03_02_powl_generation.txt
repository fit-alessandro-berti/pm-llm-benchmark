{
  "categories": {
    "1a_instruction_override": { "count": 0, "instances": [] },
    "1b_context_omission": { "count": 0, "instances": [] },
    "1c_prompt_contradiction": { "count": 0, "instances": [] },
    "2a_concept_fabrication": { "count": 0, "instances": [] },
    "2b_spurious_numeric": { "count": 0, "instances": [] },
    "2c_false_citation": { "count": 0, "instances": [] },
    "3a_unsupported_leap": {
      "count": 1,
      "instances": [
        {
          "snippet": "`root.order.add_edge(cs, da)`: cs and da are grandchildren, not direct children of root",
          "why": "The code adds edges between non-direct children of root, violating the prompt's definition that edges should be between its direct children, leading to an unsupported leap in reasoning of model correctness.",
          "severity": "high"
        }
      ]
    },
    "3b_self_contradiction": { "count": 0, "instances": [] },
    "3c_circular_reasoning": { "count": 0, "instances": [] },
    "4a_syntax_error": { "count": 0, "instances": [] },
    "4b_model_semantics_breach": {
      "count": 8,
      "instances": [
        {
          "snippet": "`root.order.add_edge(cs, da)` usage",
          "why": "Edges are added between grandchildren instead of direct children, breaching the model semantics defined in the prompt.",
          "severity": "critical"
        },
        {
          "snippet": "`root.order.add_edge(da, config_loop)` usage",
          "why": "Adds edge between a grandchild and a direct child, violating strict partial order-node membership rules.",
          "severity": "critical"
        },
        {
          "snippet": "`root.order.add_edge(aci, config_loop)` usage",
          "why": "Edges incorrectly connect grandchildren to direct children, which breaks the model semantics required for root's order edges.",
          "severity": "critical"
        },
        {
          "snippet": "`root.order.add_edge(deploy_choice, qa)` usage",
          "why": "Adding an edge from a direct child to a grandchild is against semantics that edges can only be between root's direct children.",
          "severity": "critical"
        },
        {
          "snippet": "`root.order.add_edge(deploy_choice, sa)` usage",
          "why": "Similar breach by adding edge between direct child and grandchild violating model semantics.",
          "severity": "critical"
        },
        {
          "snippet": "`root.order.add_edge(qa, gla)` usage",
          "why": "Edge from grandchild to direct child not allowed according to prompt rules, breaching model semantics.",
          "severity": "critical"
        },
        {
          "snippet": "`root.order.add_edge(sa, gla)` usage",
          "why": "Edge between grandchild and direct child breaks the definition of root order over direct children only.",
          "severity": "critical"
        },
        {
          "snippet": "`root.order.add_edge(config_loop, deploy_choice)` usage",
          "why": "Only this edge is correct between direct children; implicit contrast highlights the others are invalid, causing model breach.",
          "severity": "low"
        }
      ]
    },
    "4c_visual_descr_mismatch": { "count": 0, "instances": [] }
  },
  "totals": { "hallucinations_overall": 9 }
}