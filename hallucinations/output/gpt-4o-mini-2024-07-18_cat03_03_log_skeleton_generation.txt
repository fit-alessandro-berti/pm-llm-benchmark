{
  "categories": {
    "1a_instruction_override": { "count": 0, "instances": [] },
    "1b_context_omission": { "count": 0, "instances": [] },
    "1c_prompt_contradiction": { "count": 0, "instances": [] },
    "2a_concept_fabrication": { "count": 0, "instances": [] },
    "2b_spurious_numeric": { "count": 0, "instances": [] },
    "2c_false_citation": { "count": 0, "instances": [] },
    "3a_unsupported_leap": {
      "count": 6,
      "instances": [
        {
          "snippet": "`equivalence`: {(‘Reserve Items’, ‘Pick Items’), (‘Generate Shipping Label’, ‘Dispatch’)} assumes strict equivalence",
          "why": "The model assumes strict equivalence in occurrences for these activity pairs despite potential for exceptions, making an unsupported leap in the logical definition of equivalence.",
          "severity": "high"
        },
        {
          "snippet": "`always_before`: (RO, CA), (RI, CA), implying CA must happen before RO",
          "why": "Misinterprets `always_before` by stating the opposite order, contradicting the intended process flow, hence an unsupported reasoning leap.",
          "severity": "critical"
        },
        {
          "snippet": "`always_after`: assumes if 'Dispatch' occurs, 'Invoice Customer' must occur afterward",
          "why": "The assumption ignores real-world cases where invoicing may occur earlier or differently, making this a speculative and unsupported logic leap.",
          "severity": "medium"
        },
        {
          "snippet": "`always_after`: assumes if 'Invoice Customer' occurs, 'Record Payment' must follow",
          "why": "Fails to consider that payment might never occur, thus unjustifiably concluding a necessary sequence in all cases.",
          "severity": "high"
        },
        {
          "snippet": "`never_together`: forbids 'Quality Check' and 'Pack Order' co-occurrence",
          "why": "Misunderstands this constraint, excluding typical successful process cases where both occur, reflecting an invalid logical conclusion.",
          "severity": "critical"
        },
        {
          "snippet": "`never_together`: forbids 'Dispatch' and 'Invoice Customer' co-occurrence within same case",
          "why": "Incorrectly assumes these cannot co-exist, conflicting with normal process flows, indicating unsupported reasoning.",
          "severity": "critical"
        }
      ]
    },
    "3b_self_contradiction": {
      "count": 1,
      "instances": [
        {
          "snippet": "`directly_follows`: ('Pick Items', 'Quality Check'); `activ_freq`: QC frequency {0,1}",
          "why": "Directly follows implies QC always immediately follows Pick Items, but frequency says QC can be zero, a direct self-contradiction.",
          "severity": "critical"
        }
      ]
    },
    "3c_circular_reasoning": { "count": 0, "instances": [] },
    "4a_syntax_error": { "count": 0, "instances": [] },
    "4b_model_semantics_breach": { "count": 0, "instances": [] },
    "4c_visual_descr_mismatch": { "count": 0, "instances": [] }
  },
  "totals": { "hallucinations_overall": 7 }
}