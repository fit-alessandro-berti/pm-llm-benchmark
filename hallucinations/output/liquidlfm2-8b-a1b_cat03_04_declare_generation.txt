{
  "categories": {
    "1a_instruction_override": {
      "count": 1,
      "instances": [
        {
          "snippet": "'activity' key in value dicts not allowed by prompt",
          "why": "The prompt explicitly specifies values must contain only support and confidence; inclusion of 'activity' overrides prompt constraints.",
          "severity": "medium"
        }
      ]
    },
    "1b_context_omission": {
      "count": 1,
      "instances": [
        {
          "snippet": "missing 'nonchainsuccession' key entirely",
          "why": "Prompt requires presence of all specified top-level keys; omitting 'nonchainsuccession' silently drops necessary context for a complete answer.",
          "severity": "high"
        }
      ]
    },
    "1c_prompt_contradiction": {
      "count": 0,
      "instances": []
    },
    "2a_concept_fabrication": {
      "count": 3,
      "instances": [
        {
          "snippet": "'coexistence' using keys like 'DD_TFC' instead of activity tuples",
          "why": "Invented composite keys for binary constraints deviate from prompt and established representations, fabricating unsupported concepts.",
          "severity": "high"
        },
        {
          "snippet": "'activity' fields added within each value dict",
          "why": "Inventing extra 'activity' fields that re-describe keys is not defined by prompt or standard methods, constituting concept fabrication.",
          "severity": "medium"
        },
        {
          "snippet": "Alternative relation types like 'altresponse', 'altsuccession'",
          "why": "Alternatives and chain variants invented without scenario basis, adding unsupported constraint types not present or specified in prompt.",
          "severity": "medium"
        }
      ]
    },
    "2b_spurious_numeric": {
      "count": 2,
      "instances": [
        {
          "snippet": "support values below 1.0 (e.g., 0.85, 0.95) without scenario justification",
          "why": "Support and confidence scores are arbitrarily assigned, unsupported by prompt or scenario, thus spurious numeric usage.",
          "severity": "medium"
        },
        {
          "snippet": "support at 0.0 for core activity absence constraint 'No Approval Gate Passed'",
          "why": "Assigning zero-support to absence of mandatory activities is illogical and unsupported by prompt scenario.",
          "severity": "high"
        }
      ]
    },
    "2c_false_citation": {
      "count": 0,
      "instances": []
    },
    "3a_unsupported_leap": {
      "count": 5,
      "instances": [
        {
          "snippet": "'Cost Evaluation Precedes Feasibility' reverses expected sequence",
          "why": "Claims conflicting with scenario linear process sequence show unjustified leap in logic.",
          "severity": "high"
        },
        {
          "snippet": "'coexistence' implies simultaneous activities where scenario implies sequence",
          "why": "Assuming coexistence between activities is unsupported by scenario description, constituting reasoning error.",
          "severity": "high"
        },
        {
          "snippet": "'altresponse' and 'altsuccession' implying branching where scenario lacks branches",
          "why": "Invented alternatives are not justified by scenario, showing unsupported logical assumptions.",
          "severity": "medium"
        },
        {
          "snippet": "'responded_existence' and 'response' use single activities ignoring binary relations",
          "why": "Single activity usage contradicts required binary relations, unsupported by prompt and scenario.",
          "severity": "medium"
        },
        {
          "snippet": "Empty negative constraints ignoring logical negatives like 'noncoexistence' of IG and FL",
          "why": "Omission of reasonable negative constraints in conflict with scenario indicates unjustified reasoning omission.",
          "severity": "medium"
        }
      ]
    },
    "3b_self_contradiction": {
      "count": 1,
      "instances": [
        {
          "snippet": "'init' appears nested under 'existence' and also as a malformed top-level dict",
          "why": "Contradictory structuring of the same key breaks consistency within the answer.",
          "severity": "critical"
        }
      ]
    },
    "3c_circular_reasoning": {
      "count": 0,
      "instances": []
    },
    "4a_syntax_error": {
      "count": 1,
      "instances": [
        {
          "snippet": "inline comments (hashtags) inside dictionary causing invalid Python syntax",
          "why": "In-line comments within dicts invalidate the code format, making the model unloadable and unusable.",
          "severity": "critical"
        }
      ]
    },
    "4b_model_semantics_breach": {
      "count": 2,
      "instances": [
        {
          "snippet": "'existence' used as both top-level key and sub-key within relation keys",
          "why": "Reusing 'existence' key at multiple nesting levels breaks modelling notation and expected semantics.",
          "severity": "high"
        },
        {
          "snippet": "binary keys are inconsistent and unclear, e.g., 'DD_TFC' without tuple representation",
          "why": "Modeling notation rules are breached by ambiguous and invented composite keys for relations.",
          "severity": "high"
        }
      ]
    },
    "4c_visual_descr_mismatch": {
      "count": 0,
      "instances": []
    }
  },
  "totals": { "hallucinations_overall": 18 }
}