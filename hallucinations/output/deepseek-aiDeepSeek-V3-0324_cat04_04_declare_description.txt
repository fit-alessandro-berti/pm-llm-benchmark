{
  "categories": {
    "1a_instruction_override": {
      "count": 0,
      "instances": []
    },
    "1b_context_omission": {
      "count": 1,
      "instances": [
        {
          "snippet": "The `nonchainsuccession: {'Authorize_Contract_Terms': {'target': 'Notify_Customer'}}` constraint is entirely absent",
          "why": "This constraint was completely omitted from the LLM's analysis despite being present and relevant, constituting a context omission.",
          "severity": "high"
        }
      ]
    },
    "1c_prompt_contradiction": {
      "count": 0,
      "instances": []
    },
    "2a_concept_fabrication": {
      "count": 0,
      "instances": []
    },
    "2b_spurious_numeric": {
      "count": 0,
      "instances": []
    },
    "2c_false_citation": {
      "count": 0,
      "instances": []
    },
    "3a_unsupported_leap": {
      "count": 9,
      "instances": [
        {
          "snippet": "LLM's interpretation: Cannot occur if `Receive_Application` is still pending",
          "why": "Misinterprets `noncoexistence`, downplaying the fact that with `Receive_Application` mandatory, `Transfer_Funds` can never occur.",
          "severity": "critical"
        },
        {
          "snippet": "LLM's explanation: `Preliminary_Credit_Check` must have occurred before this [Authorize_Contract_Terms]",
          "why": "Misrepresents `chainprecedence` semantics by confusing which activity must immediately precede the other, reversing roles.",
          "severity": "critical"
        },
        {
          "snippet": "LLM states 'If needed, the lender requests supplementary documents.'",
          "why": "Contradicts the mandatory nature of the `existence` constraint requiring `Gather_Additional_Documents` to always occur.",
          "severity": "high"
        },
        {
          "snippet": "LLM only explains one direction of `coexistence` constraint",
          "why": "Fails to represent the bidirectional nature that both must occur if one occurs, causing misleading partial explanation.",
          "severity": "medium"
        },
        {
          "snippet": "LLM states `Quality_Assurance_Review` must be immediately followed by step",
          "why": "Omits the requirement that the following step must also be immediately preceded by `Quality_Assurance_Review`; incomplete semantics.",
          "severity": "medium"
        },
        {
          "snippet": "LLM's explanation 'Either Gather_Additional_Documents or another path must lead here'",
          "why": "Vague and incorrect interpretation of `altsuccession` missing the formal logic of response or precedence conditions.",
          "severity": "medium"
        },
        {
          "snippet": "LLM explains `nonsuccession` as ‘Notify_Customer does not follow Preliminary_Credit_Check’",
          "why": "Reverses the direction of the constraint, misrepresenting roles of activities A and B in `nonsuccession`.",
          "severity": "high"
        },
        {
          "snippet": "LLM focuses only on `precedence` part of `succession` constraint",
          "why": "Ignores that `succession` implies both response and precedence must hold; explanation is incomplete and misleading.",
          "severity": "medium"
        },
        {
          "snippet": "LLM narrates fund transfer as part of process despite noncoexistence forbidding it",
          "why": "Fund transfer's inclusion contradicts the constraint making it impossible, showing a logical unsupported leap.",
          "severity": "critical"
        }
      ]
    },
    "3b_self_contradiction": {
      "count": 1,
      "instances": [
        {
          "snippet": "LLM says 'Cannot occur if Receive_Application is still pending' but includes Transfer_Funds occurring",
          "why": "Conflicting claims within the same answer about the possibility of `Transfer_Funds` coexisting with `Receive_Application`.",
          "severity": "critical"
        }
      ]
    },
    "3c_circular_reasoning": {
      "count": 0,
      "instances": []
    },
    "4a_syntax_error": {
      "count": 0,
      "instances": []
    },
    "4b_model_semantics_breach": {
      "count": 0,
      "instances": []
    },
    "4c_visual_descr_mismatch": {
      "count": 0,
      "instances": []
    }
  },
  "totals": {
    "hallucinations_overall": 12
  }
}