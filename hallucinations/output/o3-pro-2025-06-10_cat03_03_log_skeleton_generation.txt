{
  "categories": {
    "1a_instruction_override": { "count": 0, "instances": [] },
    "1b_context_omission":    { "count": 0, "instances": [] },
    "1c_prompt_contradiction":{ "count": 0, "instances": [] },
    "2a_concept_fabrication": { "count": 0, "instances": [] },
    "2b_spurious_numeric":    { "count": 0, "instances": [] },
    "2c_false_citation":      { "count": 0, "instances": [] },
    "3a_unsupported_leap":    { 
      "count": 4, 
      "instances": [
        {
          "snippet": "`('CA', 'RI')` means `Check Availability` must be followed by `Reserve Items`, but availability check can fail.",
          "why": "The model assumes all activities occur in sequence, ignoring that some cases could terminate early, leading to unjustified enforcement of process steps.",
          "severity": "high"
        },
        {
          "snippet": "`('RI', 'PI')`, `('PI', 'QC')`, `('QC', 'PO')` constraints enforce a 'golden path' ignoring exceptions or failures.",
          "why": "This literal interpretation of always_after constraints fails to consider alternative process paths, making the model unrealistic.",
          "severity": "high"
        },
        {
          "snippet": "Setting `activ_freq` for `RI`, `PI`, `QC`, `PO`, `D`, `IC` to `{1}` meaning always executed.",
          "why": "This frequency setup assumes these activities are mandatory, contradicting realistic process exceptions where these may be skipped.",
          "severity": "high"
        },
        {
          "snippet": "Mismatch between optional `RP` and mandatory previous steps frequencies indicates inconsistent modeling assumptions.",
          "why": "Acknowledging failure possibility for `RP` but ignoring it for other steps creates logical incoherence and unsupported conclusions.",
          "severity": "medium"
        }
      ] 
    },
    "3b_self_contradiction":  { "count": 0, "instances": [] },
    "3c_circular_reasoning":  { "count": 0, "instances": [] },
    "4a_syntax_error":        { "count": 0, "instances": [] },
    "4b_model_semantics_breach": { "count": 0, "instances": [] },
    "4c_visual_descr_mismatch": { "count": 0, "instances": [] }
  },
  "totals": { "hallucinations_overall": 4 }
}