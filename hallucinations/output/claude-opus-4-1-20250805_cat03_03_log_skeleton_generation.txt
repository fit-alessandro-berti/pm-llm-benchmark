{
  "categories": {
    "1a_instruction_override": { "count": 0, "instances": [] },
    "1b_context_omission": { "count": 0, "instances": [] },
    "1c_prompt_contradiction": { "count": 0, "instances": [] },
    "2a_concept_fabrication": {
      "count": 2,
      "instances": [
        {
          "snippet": "answer populates `always_before` and `always_after` with pairs already implied by `directly_follows`",
          "why": "Inventing incorrect use of `always_before` and `always_after` constraints as simple direct pairs rather than non-local dependencies is a fabricated misunderstanding of declarative modeling concepts.",
          "severity": "high"
        },
        {
          "snippet": "choice of `('RO', 'D')` and `('PI', 'PO')` as `equivalence` is plausible but arbitrary and incomplete",
          "why": "The answer fabricates an incomplete and arbitrary equivalence set without proper justification or coverage of valid equivalences, reflecting a conceptual fabrication.",
          "severity": "medium"
        }
      ]
    },
    "2b_spurious_numeric": { "count": 0, "instances": [] },
    "2c_false_citation": { "count": 0, "instances": [] },
    "3a_unsupported_leap": {
      "count": 1,
      "instances": [
        {
          "snippet": "Pairs in `always_before` only cover adjacent activities, missing broader global precedences",
          "why": "Draws a conclusion that the model is correct by pairwise redundancy but ignores the fundamental intended global semantics of these constraints, an unjustified leap in reasoning.",
          "severity": "high"
        }
      ]
    },
    "3b_self_contradiction": {
      "count": 1,
      "instances": [
        {
          "snippet": "`('CA', 'RO')` valid but commented as \"must come after receive order\"; comment contradicts logic",
          "why": "The code states CA before RO, but the comment says CA comes after RO, showing internal conflict within the same explanation.",
          "severity": "medium"
        }
      ]
    },
    "3c_circular_reasoning": { "count": 0, "instances": [] },
    "4a_syntax_error": { "count": 0, "instances": [] },
    "4b_model_semantics_breach": { "count": 0, "instances": [] },
    "4c_visual_descr_mismatch": { "count": 0, "instances": [] }
  },
  "totals": { "hallucinations_overall": 5 }
}