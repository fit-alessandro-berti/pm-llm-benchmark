{
  "categories": {
    "1a_instruction_override": {
      "count": 0,
      "instances": []
    },
    "1b_context_omission": {
      "count": 0,
      "instances": []
    },
    "1c_prompt_contradiction": {
      "count": 0,
      "instances": []
    },
    "2a_concept_fabrication": {
      "count": 3,
      "instances": [
        {
          "snippet": "The answer claims noncoexistence(Transfer_Funds, Receive_Application) enforces traceability...",
          "why": "The answer invents a meaning ('precedence') that reverses the actual negative constraint meaning.",
          "severity": "critical"
        },
        {
          "snippet": "The answer claims nonsuccession(Notify_Customer, Preliminary_Credit_Check) means 'You cannot notify before a credit check.'",
          "why": "The answer fabricates a positive precedence meaning for a negative succession constraint, which is incorrect.",
          "severity": "high"
        },
        {
          "snippet": "The answer interprets nonchainsuccession(Authorize_Contract_Terms, Notify_Customer) as precedence requiring authorization before notification.",
          "why": "This invents a positive ordering meaning contrary to the real meaning that no immediate succession occurs.",
          "severity": "high"
        }
      ]
    },
    "2b_spurious_numeric": {
      "count": 0,
      "instances": []
    },
    "2c_false_citation": {
      "count": 0,
      "instances": []
    },
    "3a_unsupported_leap": {
      "count": 3,
      "instances": [
        {
          "snippet": "chainresponse(Assemble_Loan_Offer_Package, Transfer_Funds) means must eventually result in funding.",
          "why": "The answer ignores the immediate succession 'chain' semantics, missing a key technical aspect.",
          "severity": "high"
        },
        {
          "snippet": "chainprecedence(Authorize_Contract_Terms, Preliminary_Credit_Check) interpreted as authorization cannot occur unless credit check happened.",
          "why": "The answer reverses and simplifies the chainprecedence logic incorrectly, making an unjustified conclusion.",
          "severity": "critical"
        },
        {
          "snippet": "altresponse/altprecedence pair interpreted as allowing funds-first-then-notify or notify-first-then-fund.",
          "why": "The answer invents a plausible business interpretation ignoring the logical contradiction in the constraints.",
          "severity": "critical"
        }
      ]
    },
    "3b_self_contradiction": {
      "count": 0,
      "instances": []
    },
    "3c_circular_reasoning": {
      "count": 0,
      "instances": []
    },
    "4a_syntax_error": {
      "count": 0,
      "instances": []
    },
    "4b_model_semantics_breach": {
      "count": 0,
      "instances": []
    },
    "4c_visual_descr_mismatch": {
      "count": 0,
      "instances": []
    }
  },
  "totals": {
    "hallucinations_overall": 6
  }
}