{
  "categories": {
    "1a_instruction_override": {
      "count": 0,
      "instances": []
    },
    "1b_context_omission": {
      "count": 0,
      "instances": []
    },
    "1c_prompt_contradiction": {
      "count": 0,
      "instances": []
    },
    "2a_concept_fabrication": {
      "count": 0,
      "instances": []
    },
    "2b_spurious_numeric": {
      "count": 0,
      "instances": []
    },
    "2c_false_citation": {
      "count": 0,
      "instances": []
    },
    "3a_unsupported_leap": {
      "count": 1,
      "instances": [
        {
          "snippet": "The model states `precedence('Prototype Creation (PC)', 'Technical Feasibility Check (TFC)')`, which means \"TFC is preceded by PC\", opposite of the requirement.",
          "why": "The conclusion that the reversed precedence constraint fundamentally misrepresents the process flow is not justified by any correction or alternative reasoning within the answer, constituting an unsupported leap.",
          "severity": "critical"
        }
      ]
    },
    "3b_self_contradiction": {
      "count": 1,
      "instances": [
        {
          "snippet": "Explanation states `PC` requires `TFC` and `CE` to have occurred, but model constraint states reversed precedence.",
          "why": "The explanation acknowledges the correct logic but the model contradicts it by reversing the order, creating an internal conflict within the same answer.",
          "severity": "critical"
        }
      ]
    },
    "3c_circular_reasoning": {
      "count": 0,
      "instances": []
    },
    "4a_syntax_error": {
      "count": 0,
      "instances": []
    },
    "4b_model_semantics_breach": {
      "count": 2,
      "instances": [
        {
          "snippet": "The reversed `precedence` constraints violate the intended process ordering semantics.",
          "why": "Using `precedence('PC', 'TFC')` when TFC should precede PC breaches the semantics of `precedence` constraints in DECLARE models.",
          "severity": "critical"
        },
        {
          "snippet": "`succession(DD, PC)` and `succession(PC, AG)` bypass intermediate mandatory steps TFC/CE and LT/UT, misrepresenting process flow.",
          "why": "This distorts the model semantics by implying direct succession that contradicts the required intermediate activities, misrepresenting proper process semantics.",
          "severity": "high"
        }
      ]
    },
    "4c_visual_descr_mismatch": {
      "count": 0,
      "instances": []
    }
  },
  "totals": {
    "hallucinations_overall": 4
  }
}