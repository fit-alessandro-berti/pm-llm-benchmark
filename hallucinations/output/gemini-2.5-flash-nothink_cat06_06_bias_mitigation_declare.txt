{
  "categories": {
    "1a_instruction_override": { "count": 0, "instances": [] },
    "1b_context_omission": { "count": 0, "instances": [] },
    "1c_prompt_contradiction": { "count": 0, "instances": [] },
    "2a_concept_fabrication": { "count": 0, "instances": [] },
    "2b_spurious_numeric": { "count": 0, "instances": [] },
    "2c_false_citation": { "count": 0, "instances": [] },
    "3a_unsupported_leap": {
      "count": 3,
      "instances": [
        {
          "snippet": "\"response(A, B) means A must be followed by B, but student models 'BiasMitigationCheck' -> 'Approve' incorrectly",
          "why": "This misinterprets 'response' as requiring approval after check, contradicting the intended precedence where 'Approve' must follow 'BiasMitigationCheck'.",
          "severity": "critical"
        },
        {
          "snippet": "Model has 'Approve' and 'Reject' plus 'FinalDecision' with 'Approve' succession to 'FinalDecision'",
          "why": "This creates a contradictory and illogical process flow since 'Approve' is itself a final decision activity.",
          "severity": "high"
        },
        {
          "snippet": "\"coexistence' constraints added redundantly between 'Approve'/'Reject' and 'ManualReview'",
          "why": "This redundantly duplicates dependencies already implied by other constraints, showing flawed reasoning about constraint interaction.",
          "severity": "medium"
        }
      ]
    },
    "3b_self_contradiction": {
      "count": 1,
      "instances": [
        {
          "snippet": "Keeps 'FinalDecision' along with 'Approve' and 'Reject', then requires 'Approve' to precede 'FinalDecision'",
          "why": "This conflicts within the model, as 'Approve' and 'Reject' are decompositions of 'FinalDecision', but are constrained as if 'FinalDecision' follows them.",
          "severity": "high"
        }
      ]
    },
    "3c_circular_reasoning": { "count": 0, "instances": [] },
    "4a_syntax_error": {
      "count": 1,
      "instances": [
        {
          "snippet": "Duplicate keys like \"BiasMitigationCheck\" and \"Approve\" appear multiple times in Python dicts",
          "why": "Python dictionaries cannot have duplicate keys, so this is syntactically invalid and would cause runtime errors.",
          "severity": "critical"
        }
      ]
    },
    "4b_model_semantics_breach": { "count": 0, "instances": [] },
    "4c_visual_descr_mismatch": { "count": 0, "instances": [] }
  },
  "totals": { "hallucinations_overall": 6 }
}