{
  "categories": {
    "1a_instruction_override": {
      "count": 0,
      "instances": []
    },
    "1b_context_omission": {
      "count": 8,
      "instances": [
        {
          "snippet": "`chainprecedence` constraint is missing from the `Preliminary_Credit_Check` description",
          "why": "The answer omits mentioning this explicit constraint associated with Preliminary_Credit_Check, failing to include required prompt context.",
          "severity": "high"
        },
        {
          "snippet": "`responded_existence` constraint is missing from the `Quality_Assurance_Review` description",
          "why": "A key constraint pertaining to Quality_Assurance_Review is completely omitted, causing incomplete coverage of prompt context.",
          "severity": "high"
        },
        {
          "snippet": "`chainsuccession` (QA -> Assemble) is missing from the `Assemble_Loan_Offer_Package` description",
          "why": "Though alluded under QA, the direct constraint for Assemble_Loan_Offer_Package is dropped, omitting crucial context.",
          "severity": "high"
        },
        {
          "snippet": "`precedence` (QA -> Authorize) is missing from the `Authorize_Contract_Terms` description",
          "why": "A relevant constraint is ignored, leading to incomplete constraint representation for the step.",
          "severity": "high"
        },
        {
          "snippet": "`nonchainsuccession` (Authorize -> Notify) is missing from `Authorize_Contract_Terms`",
          "why": "Skipping this constraint fails to model the relationship accurately as required by the prompt.",
          "severity": "high"
        },
        {
          "snippet": "`altprecedence` (Notify -> Transfer) is missing from the `Transfer_Funds` description",
          "why": "The description omits this constraint, resulting in incomplete information on Transfer_Funds activity.",
          "severity": "high"
        },
        {
          "snippet": "`altresponse` (Transfer -> Notify) is missing from the `Notify_Customer` description",
          "why": "The answer leaves out this constraint, omitting a key relational detail for Notify_Customer.",
          "severity": "high"
        },
        {
          "snippet": "`nonchainsuccession` (Authorize -> Notify) is missing from the `Notify_Customer` description",
          "why": "Missing this constraint leads to incomplete portrayal of Notify_Customer constraints per the prompt model.",
          "severity": "high"
        }
      ]
    },
    "1c_prompt_contradiction": {
      "count": 0,
      "instances": []
    },
    "2a_concept_fabrication": {
      "count": 0,
      "instances": []
    },
    "2b_spurious_numeric": {
      "count": 0,
      "instances": []
    },
    "2c_false_citation": {
      "count": 0,
      "instances": []
    },
    "3a_unsupported_leap": {
      "count": 6,
      "instances": [
        {
          "snippet": "`chainsuccession` (Step 2) incorrectly attributed to `Preliminary_Credit_Check`",
          "why": "The attribution contradicts the actual model, leading to a reasoning leap without justification from provided facts.",
          "severity": "high"
        },
        {
          "snippet": "`noncoexistence` misinterpreted as precedence instead of mutual exclusion",
          "why": "Concluding it as a simple precedence rule ignores the severe implication that Transfer_Funds can never occur, lacking logical support.",
          "severity": "critical"
        },
        {
          "snippet": "Attributing `noncoexistence` effect to `Preliminary_Credit_Check` step is illogical",
          "why": "Assigning constraint impact incorrectly lacks evidence and misrepresents the model relationships.",
          "severity": "high"
        },
        {
          "snippet": "`chainprecedence` (Step 6) misunderstood; reversing dependency order",
          "why": "Misreading key/target structure causes an unsupported leap in explaining sequencing incorrectly.",
          "severity": "high"
        },
        {
          "snippet": "`responded_existence` interpreted loosely as temporal completion requirement",
          "why": "The condition actually implies co-occurrence triggered by A, not strict temporal ordering, an unsupported reasoning extension.",
          "severity": "medium"
        },
        {
          "snippet": "Conflation of `altsuccession` and `chainsuccession` in Step 4 explanation",
          "why": "Failing to distinguish immediacy requirements implies unsupported reasoning about sequencing constraints.",
          "severity": "medium"
        }
      ]
    },
    "3b_self_contradiction": {
      "count": 0,
      "instances": []
    },
    "3c_circular_reasoning": {
      "count": 0,
      "instances": []
    },
    "4a_syntax_error": {
      "count": 0,
      "instances": []
    },
    "4b_model_semantics_breach": {
      "count": 0,
      "instances": []
    },
    "4c_visual_descr_mismatch": {
      "count": 0,
      "instances": []
    }
  },
  "totals": {
    "hallucinations_overall": 14
  }
}