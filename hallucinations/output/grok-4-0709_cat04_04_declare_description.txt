{
  "categories": {
    "1a_instruction_override": {
      "count": 1,
      "instances": [
        {
          "snippet": "The LLM reversed the rule to fit its desired narrative, ignoring that the actual rule is bizarre and counter-intuitive",
          "why": "This shows the LLM ignored the explicit constraint from the prompt to provide a precise interpretation, instead overriding it to fit a preferred explanation.",
          "severity": "high"
        }
      ]
    },
    "1b_context_omission": {
      "count": 2,
      "instances": [
        {
          "snippet": "The LLM misses that If Receive_Application must occur, then Transfer_Funds can never occur",
          "why": "Critical context about the mutual exclusivity of activities is omitted, leading to an inaccurate understanding of the process logic.",
          "severity": "critical"
        },
        {
          "snippet": "Omission of the response part in Succession('Preliminary_Credit_Check', 'Gather_Additional_Documents') interpretation",
          "why": "The LLM ignores the full semantic of the succession template, dropping essential context about mandatory next steps.",
          "severity": "medium"
        }
      ]
    },
    "1c_prompt_contradiction": {
      "count": 0,
      "instances": []
    },
    "2a_concept_fabrication": {
      "count": 1,
      "instances": [
        {
          "snippet": "The LLM treats negative constraints as forbidding sequences rather than forbidding mandatory rules",
          "why": "This reflects a fabricated interpretation of DECLARE semantics that conflicts with established definitions of negative constraints.",
          "severity": "high"
        }
      ]
    },
    "2b_spurious_numeric": {
      "count": 0,
      "instances": []
    },
    "2c_false_citation": {
      "count": 0,
      "instances": []
    },
    "3a_unsupported_leap": {
      "count": 2,
      "instances": [
        {
          "snippet": "The LLM speculates about 're-application loops' instead of concluding impossibility regarding Receive_Application and Transfer_Funds",
          "why": "The conclusion about loops is not supported by the constraints and incorrectly ignores the clear contradiction indicated by the model.",
          "severity": "critical"
        },
        {
          "snippet": "Misinterpretation of altprecedence as equal to altresponse papering over logical paradox",
          "why": "The leap to equate two distinct constraints without justification leads to ignoring a paradox present in the model.",
          "severity": "high"
        }
      ]
    },
    "3b_self_contradiction": {
      "count": 2,
      "instances": [
        {
          "snippet": "The model demands Transfer_Funds both followed by and preceded by Notify_Customer, creating a logical paradox",
          "why": "This directly exposes a contradiction that the LLM fails to acknowledge, undermining internal consistency of the answer.",
          "severity": "critical"
        },
        {
          "snippet": "The LLM incorrectly states the directionality of Chain_Precedence constraint, conflicting with its own explanation",
          "why": "The conflicting interpretations of chainprecedence within the same answer reveal self-contradictory claims.",
          "severity": "high"
        }
      ]
    },
    "3c_circular_reasoning": {
      "count": 0,
      "instances": []
    },
    "4a_syntax_error": {
      "count": 0,
      "instances": []
    },
    "4b_model_semantics_breach": {
      "count": 1,
      "instances": [
        {
          "snippet": "Interpreting nonsuccession('Notify_Customer', 'Preliminary_Credit_Check') as forbidding the sequence in traces",
          "why": "This violates the formal semantics of the DECLARE notation where negative constraints do not prohibit event sequences outright.",
          "severity": "high"
        }
      ]
    },
    "4c_visual_descr_mismatch": {
      "count": 0,
      "instances": []
    }
  },
  "totals": { "hallucinations_overall": 11 }
}