{
  "categories": {
    "1a_instruction_override": { "count": 0, "instances": [] },
    "1b_context_omission":    { "count": 0, "instances": [] },
    "1c_prompt_contradiction":{ "count": 0, "instances": [] },
    "2a_concept_fabrication": { "count": 0, "instances": [] },
    "2b_spurious_numeric":    { "count": 0, "instances": [] },
    "2c_false_citation":      { "count": 0, "instances": [] },
    "3a_unsupported_leap":    { 
      "count": 2, 
      "instances": [
        {
          "snippet": "The purpose \"violating the `RespondedExistence` rule\" is inaccurate...",
          "why": "The claim that 'C' without 'E' violates RespondedExistence is unsupported; it only violates the rule if 'A' event is also present, which is not considered here.",
          "severity": "high"
        },
        {
          "snippet": "Query D: JOIN ... AND ce.activity = 'A' means eval_count will always be 0, but HAVING clause uses eval_count, causing incorrect conclusions.",
          "why": "The logic leap that this join can produce a correct evaluation count is invalid because the conditions exclude 'E' events, invalidating the query's purpose.",
          "severity": "critical"
        }
      ]
    },
    "3b_self_contradiction":  { "count": 0, "instances": [] },
    "3c_circular_reasoning":  { "count": 0, "instances": [] },
    "4a_syntax_error":        { 
      "count": 1, 
      "instances": [
        {
          "snippet": "Join condition ON a.adjuster_id = ce.resource leads to type mismatch in PostgreSQL (INTEGER vs VARCHAR).",
          "why": "The join likely fails without explicit type casting, causing a syntax or runtime error, rendering Query D unusable as is.",
          "severity": "critical"
        }
      ]
    },
    "4b_model_semantics_breach": { "count": 0, "instances": [] },
    "4c_visual_descr_mismatch": { "count": 0, "instances": [] }
  },
  "totals": { "hallucinations_overall": 3 }
}