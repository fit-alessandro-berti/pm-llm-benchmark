{
  "categories": {
    "1a_instruction_override": {
      "count": 1,
      "instances": [
        {
          "snippet": "\"By allowing Receive Invoice -> Receive Goods\", the model permits behavior not explicitly defined in the sequential standard logic list",
          "why": "The candidate's model overrides the prompt's explicit constraint requiring a strict sequential order where Receive Goods must precede Receive Invoice.",
          "severity": "high"
        }
      ]
    },
    "1b_context_omission": {
      "count": 0,
      "instances": []
    },
    "1c_prompt_contradiction": {
      "count": 0,
      "instances": []
    },
    "2a_concept_fabrication": {
      "count": 0,
      "instances": []
    },
    "2b_spurious_numeric": {
      "count": 0,
      "instances": []
    },
    "2c_false_citation": {
      "count": 0,
      "instances": []
    },
    "3a_unsupported_leap": {
      "count": 1,
      "instances": [
        {
          "snippet": "\"Appropriate Flexibility\" states the parallel operator is justified as legitimate in real-world procurement",
          "why": "The explanation justifies allowing parallel receipt based on real-world plausibility, which is unsupported by the prompt's strict sequence requirement, making this an unjustified reasoning leap.",
          "severity": "medium"
        }
      ]
    },
    "3b_self_contradiction": {
      "count": 0,
      "instances": []
    },
    "3c_circular_reasoning": {
      "count": 0,
      "instances": []
    },
    "4a_syntax_error": {
      "count": 0,
      "instances": []
    },
    "4b_model_semantics_breach": {
      "count": 0,
      "instances": []
    },
    "4c_visual_descr_mismatch": {
      "count": 0,
      "instances": []
    }
  },
  "totals": { "hallucinations_overall": 2 }
}