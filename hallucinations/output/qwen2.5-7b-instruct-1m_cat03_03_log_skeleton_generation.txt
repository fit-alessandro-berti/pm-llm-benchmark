{
  "categories": {
    "1a_instruction_override": { "count": 0, "instances": [] },
    "1b_context_omission": { "count": 0, "instances": [] },
    "1c_prompt_contradiction": { "count": 0, "instances": [] },
    "2a_concept_fabrication": { "count": 0, "instances": [] },
    "2b_spurious_numeric": { "count": 0, "instances": [] },
    "2c_false_citation": { "count": 0, "instances": [] },
    "3a_unsupported_leap": {
      "count": 7,
      "instances": [
        {
          "snippet": "1. equivalence (set()): Assuming no activities are equivalent might be overly simplistic",
          "why": "Assuming no equivalences in a complex process without justification is an invalid leap unsupported by given data.",
          "severity": "medium"
        },
        {
          "snippet": "2. always_before ... the set {('RO', 'CA'), ...} implies if RO occurs, CA must have happened before, which is impossible",
          "why": "Misinterpretation of the relation means the conclusion about ordering factors is invalid and contradicts the definition.",
          "severity": "high"
        },
        {
          "snippet": "2. always_before ... omits transitive relationships (e.g., 'RO', 'PI' missing) which belong to the constraint",
          "why": "Failure to include required transitive edges in the 'always_before' set is a reasoning leap missing critical logical elements.",
          "severity": "medium"
        },
        {
          "snippet": "3. always_after (set()): absence of inevitable follow-up activities like ('RO', 'D'), suggests incorrect assumptions",
          "why": "Concluding no 'always_after' relations exist in a complex scenario is an unsupported leap ignoring domain knowledge.",
          "severity": "high"
        },
        {
          "snippet": "4. never_together {('RO', 'D'), ('RO', 'RP'), ...} contradicts real co-occurrence in orders",
          "why": "Incorrect conclusion that certain activities never co-occur in same case, contradicting typical process behavior.",
          "severity": "high"
        },
        {
          "snippet": "5. activ_freq assumes each activity occurs exactly once, contradicting known complexities and loops",
          "why": "Assuming fixed frequency for all activities ignores possibility of repeats/loops in a complex process.",
          "severity": "medium"
        },
        {
          "snippet": "6. directly_follows enforces linear strict ordering ignoring concurrency, optional paths, or delays",
          "why": "Asserting a rigid linear directly-follows chain overlooks documented process complexity and alternatives.",
          "severity": "medium"
        }
      ]
    },
    "3b_self_contradiction": { "count": 0, "instances": [] },
    "3c_circular_reasoning": { "count": 0, "instances": [] },
    "4a_syntax_error": { "count": 0, "instances": [] },
    "4b_model_semantics_breach": { "count": 0, "instances": [] },
    "4c_visual_descr_mismatch": { "count": 0, "instances": [] }
  },
  "totals": { "hallucinations_overall": 7 }
}