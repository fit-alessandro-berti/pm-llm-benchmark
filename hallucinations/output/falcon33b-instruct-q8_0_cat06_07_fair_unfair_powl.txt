{
  "categories": {
    "1a_instruction_override": {
      "count": 0,
      "instances": []
    },
    "1b_context_omission": {
      "count": 2,
      "instances": [
        {
          "snippet": "complete absence of the initial \"Resume Parsing & Initial Data Check\" phase, including the loop described in step 1",
          "why": "The initial data completeness loop is explicitly described in the prompt but omitted in both models, causing key context omission.",
          "severity": "critical"
        },
        {
          "snippet": "\"ReceiveApplication\", \"DataCompletenessCheck\", \"RequestMoreInfo\" are not modeled, despite being necessary",
          "why": "Key activities required to represent the process accurately are missing, indicating omission of critical contextual elements.",
          "severity": "high"
        }
      ]
    },
    "1c_prompt_contradiction": {
      "count": 0,
      "instances": []
    },
    "2a_concept_fabrication": {
      "count": 0,
      "instances": []
    },
    "2b_spurious_numeric": {
      "count": 0,
      "instances": []
    },
    "2c_false_citation": {
      "count": 0,
      "instances": []
    },
    "3a_unsupported_leap": {
      "count": 1,
      "instances": [
        {
          "snippet": "code defines a loop LoopSkillAndFit = OperatorPOWL(operator=Operator.LOOP, children=[SkillAssessment, CulturalFitCheck])",
          "why": "The loop defined incorrectly includes repeating assessments contrary to the prompt, an unsupported inference about loop construction.",
          "severity": "high"
        }
      ]
    },
    "3b_self_contradiction": {
      "count": 1,
      "instances": [
        {
          "snippet": "PO1 includes SkillAssessment and CulturalFitCheck as top-level nodes and also within LoopSkillAndFit and XORCommunityAdvantage",
          "why": "Nodes appear redundantly at multiple hierarchy levels within the same model, causing self-conflicting structure.",
          "severity": "high"
        }
      ]
    },
    "3c_circular_reasoning": {
      "count": 0,
      "instances": []
    },
    "4a_syntax_error": {
      "count": 0,
      "instances": []
    },
    "4b_model_semantics_breach": {
      "count": 1,
      "instances": [
        {
          "snippet": "edge PO1.order.add_edge(CulturalFitCheck, ManagerialReview) goes from an internal operator's child to outside node",
          "why": "Control flow edges violate process tree semantics by linking internal operator children directly to external nodes.",
          "severity": "high"
        }
      ]
    },
    "4c_visual_descr_mismatch": {
      "count": 0,
      "instances": []
    }
  },
  "totals": {
    "hallucinations_overall": 6
  }
}