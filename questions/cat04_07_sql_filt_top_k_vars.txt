**Prompt for the Benchmark:**

"Consider an event log stored in a DuckDB table named `event_log`, with the following columns:

- `case_id`: Identifies a single process instance.
- `activity`: Names the executed activity.
- `timestamp`: The datetime of when the activity took place.

A **process variant** is defined as the ordered sequence of activities that occur in a single case, determined by sorting events within that case by their `timestamp`.

Your task:  
1. Construct a DuckDB SQL query that determines the sequence of activities for each `case_id`, maintaining the order imposed by `timestamp`.
2. Group cases by their complete activity sequence to identify unique process variants.
3. Count how many cases correspond to each variant and determine the top K variants by their frequency (i.e., the number of cases that follow that variant).
4. Return all events from the original event log that belong only to cases which are part of these top K variants. Cases not matching the top K variants should be excluded from the final result.

In your query, ensure that you:  
- Correctly extract the ordered sequence of activities per case.  
- Aggregate and count cases per variant.  
- Filter down to the cases belonging to the top K variants.  
- Return the corresponding events from those filtered cases."