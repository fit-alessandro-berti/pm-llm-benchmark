-- Top-K process variants and their events from event_log
-- Set K (number of variants to keep) here:
WITH params AS (
  SELECT 5 AS K
),
-- 1) Order events within each case to define the sequence
ordered AS (
  SELECT
    case_id,
    activity,
    "timestamp",
    ROW_NUMBER() OVER (PARTITION BY case_id ORDER BY "timestamp", activity) AS step
  FROM event_log
),
-- 2) Build the complete activity sequence (process variant) per case
case_variants AS (
  SELECT
    case_id,
    string_agg(activity, ' -> ' ORDER BY step) AS variant
  FROM ordered
  GROUP BY case_id
),
-- 3) Count cases per variant
variant_counts AS (
  SELECT
    variant,
    COUNT(*) AS case_count
  FROM case_variants
  GROUP BY variant
),
-- Pick the top K variants by frequency (ties broken lexicographically by variant)
topk_variants AS (
  SELECT variant, case_count, variant_rank
  FROM (
    SELECT
      variant,
      case_count,
      ROW_NUMBER() OVER (ORDER BY case_count DESC, variant) AS variant_rank
    FROM variant_counts
  )
  WHERE variant_rank <= (SELECT K FROM params)
),
-- 4) Keep only cases whose variant is in the Top-K
topk_cases AS (
  SELECT
    cv.case_id,
    tv.variant,
    tv.case_count,
    tv.variant_rank
  FROM case_variants cv
  JOIN topk_variants tv USING (variant)
)
-- Return all original events for those cases (only Top-K variants)
SELECT
  e.*
  -- If you also want variant info, select: e.*, c.variant, c.case_count AS variant_case_count, c.variant_rank
FROM event_log e
JOIN topk_cases c USING (case_id)
ORDER BY c.variant_rank, c.variant, e.case_id, e."timestamp", e.activity;