Here is the DuckDB SQL query to achieve the desired filtering:

```sql
WITH case_event_counts AS (
    SELECT 
        case_id, 
        COUNT(*) AS event_count
    FROM 
        event_log
    GROUP BY 
        case_id
    HAVING 
        COUNT(*) <= 6
)
SELECT 
    e.*
FROM 
    event_log e
JOIN 
    case_event_counts c
ON 
    e.case_id = c.case_id;
```

### Explanation of the Query:
1. **Step 1: Count Events per Case**  
   The `WITH` block (`case_event_counts`) calculates the number of events per `case_id`:
   - Groups the rows in the `event_log` table by `case_id`.
   - Counts how many events are associated with each `case_id`.
   - Filters (`HAVING COUNT(*) <= 6`) to include only `case_id`s with 6 or fewer events.

2. **Step 2: Select Events for Valid Cases**  
   - The main query uses the results of `case_event_counts` to identify `case_id`s that met the criteria.
   - Performs an inner `JOIN` with the original `event_log` table on `case_id` to retrieve the full details of all events belonging to those filtered cases.

### Result:
This query returns all rows in `event_log` for `case_id`s with six or fewer events, while excluding rows for cases containing more than six events.