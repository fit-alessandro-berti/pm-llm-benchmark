--------------------------------------------------------------------
1. PROCESS DISCOVERY & CONFORMANCE CHECKING  
--------------------------------------------------------------------
a. Data-integration & preprocessing  
• Create a unified case notion.  For fleet-level optimisation the natural “process instance” (Case ID) is a Vehicle-Day (e.g., V12-2024-12-05).  Keep a secondary key Package ID so that package-level variants can be mined later.  
• Harmonise timestamps to a single time-zone and format; resolve clock-skews by aligning the first daily scanner event with the corresponding GPS ignition-on.  
• Normalise activity names and add a source attribute (GPS / Scanner / Dispatch / Maintenance) to retain provenance.  
• Enrich GPS points with external GIS layers (road network, speed limits, traffic zones) so that later analyses can aggregate by street, zone, or congestion level.  
• Key challenges  
  – Different sampling rates (GPS every 5 s, scanner event-based)  resample GPS to meaningful states (Moving / Idle / Parked).  
  – Possible missing values (e.g., lost GPS signal in tunnels).  Use interpolation only for distance calculation, not for event creation.  
  – Many-to-many relations (one scanner “Delivery Success” applies to one package but belongs to the same vehicle-day case).  Store Package ID in an attribute, not as a separate case, unless doing package-level mining.  
  – Privacy: strip personal data before analysis.

b. Process discovery  
• Apply an algorithm that copes with noise and frequencies, e.g., the Inductive Miner-Infrequent or the Fuzzy Miner, to the Vehicle-Day log.  
• Expected high-level model:  
  Start Shift  (loop of [Drive  Arrive Customer  Service  Depart Customer] *)  (optional Unscheduled Stop / Maintenance)  Return Depot  End Shift.  
• Overlay performance metrics (mean duration, waiting time) on the model to gain an “animation” of how long each activity actually takes.

c. Conformance checking against planned routes  
• Import planned sequences from the dispatch system as a BPMN or Petri-net model where each “Planned Stop n” activity is ordered.  
• Replay each event log trace on the planned model (token-based replay or alignments).  Deviations of interest:  
  – Sequence deviations: stops served out of planned order.  
  – Unplanned activities: unscheduled fuel refills, lunch breaks, side trips.  
  – Missing activities: planned stop skipped or delivered by another truck.  
  – Time-rule violations: arrival outside the customer time window; excessive idle time vs. planned service time.  
  – Resource rule violations: a driver servicing a package assigned to a different driver/vehicle.  

--------------------------------------------------------------------
2. PERFORMANCE ANALYSIS & BOTTLENECK IDENTIFICATION  
--------------------------------------------------------------------
Key KPIs derivable from the event log (examples show formulas):  

1. On-Time Delivery Rate (%)  
  = (# Deliveries with Delivery Success timestamp  customer window) / (# deliveries attempted).  

2. Average Time per Delivery Stop (min)  
  = mean(Depart Customer – Arrive Customer).  

3. Travel-vs-Service ratio  
  =  travel time (Vehicle Moving) /  service time at customers.  

4. Fuel Consumption per km & per package  
  =  fuel drawn (link telemetry or odometer) /  km, & same / # delivered packages.  

5. Vehicle Utilisation Rate  
  =  engine-on time / driver shift length.  

6. Traffic Delay Frequency / Duration  
  = events labelled “Low Speed Detected” where speed < threshold & not at customer.  

7. Failed Delivery Rate  
  = (# Delivery Failed) / (# total delivery scans).  

Process-mining techniques for bottlenecks  
• Performance spectrum overlay: colour the process map by mean or 95 % percentile durations to highlight slow edges (e.g., Drive  Arrive Customer in city centre red).  
• Attribute filtering: slice the log by weekday, rush-hour vs. off-peak, driver groups, vehicle class, or depot region, and compare models side-by-side.  
• Cluster/variant analysis: discover typical daily trace variants; correlate variant frequencies with KPI values to find “bad” variants.  
• Transition-system heat-map on geographic grid: identify GPS segments repeatedly associated with long “Moving” durations => recurring traffic hotspots.  
• Waiting time analysis: generate “idle blocks” where Speed  0 but not at customer; calculate cumulative idle cost.  

--------------------------------------------------------------------
3. ROOT-CAUSE ANALYSIS OF INEFFICIENCIES  
--------------------------------------------------------------------
Likely contributors and how process mining validates them:

1. Sub-optimal static routing  
  • Compare actual vs. planned stop sequences; high frequency of re-ordering indicates plan not executable in real traffic.  
  • Correlate detour distance with late deliveries; compute excess km per route.

2. Inaccurate travel-time estimates  
  • Compute mean & variance of “Drive” duration between each consecutive stop pair; contrast with planning system’s lookup table.  
  • If systematic under-estimation in certain suburbs  update distance/time matrices.

3. Traffic congestion patterns  
  • Tag each GPS point with third-party historic congestion index; run regression of delay minutes ~ congestion level.  
  • Generate heat-maps of daytime vs. delay contribution.

4. High service-time variability  
  • Box-plot Service Time by customer segment or delivery type (B2C vs. B2B, parcel size).  
  • Long right-tail suggests unrealistic scheduling granularity.

5. Vehicle breakdowns mid-shift  
  • Cross-link maintenance log “Unscheduled repair” events with delivery traces where a sudden long idle precedes depot return.  
  • Calculate failure probability vs. vehicle age or mileage.

6. Driver behaviour differences  
  • Compute KPIs per driver; run ANOVA controlling for route difficulty; identify outliers needing coaching.

7. Failed delivery attempts  
  • Sequence pattern mining: [Arrive Customer  Delivery Failed] followed later by [Re-Route Package] increases total km & time.  
  • Predictive model: probability of failure ~ time-of-day, building type, customer notification lead-time.

--------------------------------------------------------------------
4. DATA-DRIVEN OPTIMISATION STRATEGIES  
--------------------------------------------------------------------
Strategy 1 – Dynamic, traffic-aware re-sequencing  
• Targeted inefficiency: Late deliveries & excess travel time on congested roads.  
• Root cause: static morning route fixed before live traffic unfolds.  
• Process-mining evidence: tokens replay show average 12 min extra per city-centre leg during 07:30-09:00 rush; high conformance “move-out-of-order” deviations.  
• Action: integrate real-time traffic API + optimisation engine to periodically re-order remaining stops if ETA slips > x minutes.  
• Expected impact:  On-Time Delivery Rate +8 pp;  travel-vs-service ratio 0.850.75;  fuel per km 5 %.  

Strategy 2 – Territory & time-window re-design  
• Target: Repeated route overruns & driver overtime.  
• Root cause: customer windows too narrow and geographically scattered.  
• Evidence: model variant where suburban + downtown stops mixed shows 40 % overtime vs. cluster-based variants 5 %.  
• Action: Use six-month data to K-means cluster stops into contiguous zones with balanced avg. service time; renegotiate delivery windows for low-urgency customers into off-peak slots.  
• Impact:  average shift length by 45 min;  vehicle utilisation (less empty driving);  failed delivery rate (customers receive narrower & realistic ETA messages).  

Strategy 3 – Predictive maintenance scheduling  
• Target: Unscheduled breakdowns causing route abandonment and rescue vehicle dispatch.  
• Root cause: maintenance based on calendar time rather than usage intensity.  
• Evidence: process mining correlation: vehicles exceeding 300 engine-hours since last service have 3× higher probability of “Unscheduled Stop – Engine Warning”.  
• Action: build survival model using engine-hours, harsh-braking count, and historical faults to predict failure risk; schedule maintenance in evening before risk breaches 5 %.  
• Impact:  breakdown incidents by 60 %;  On-Time Delivery Rate 2 pp;  maintenance cost (fewer expensive roadside repairs).  

Strategy 4 – Targeted driver coaching & incentive program  
• Target: high variability in stop dwell times and speeding/harsh braking (fuel burn).  
• Root cause: differing driver practices.  
• Evidence: driver performance dashboard ranks D105 & peers; top quartile average service 2.8 min, bottom quartile 4.3 min; fuel per 100 km differs 12 %.  
• Action: share best-practice videos, ride-along mentoring, and eco-driving incentive (bonus = fuel saved vs. baseline).  
• Impact:  average service time 15 %;  fuel per package 7 %;  customer satisfaction (more consistent delivery experience).

--------------------------------------------------------------------
5. OPERATIONAL CONSTRAINTS & CONTINUOUS MONITORING  
--------------------------------------------------------------------
Accounting for constraints  
• Driver hours of service: optimisation models must respect legal daily/weekly limits; the process log already contains Start/End Shift events—use them as hard constraints.  
• Vehicle capacities: ensure re-sequencing retains total weight/volume  capacity; include capacity attributes in the route optimisation algorithm.  
• Customer time windows: treat windows as soft (penalty) or hard (must-meet) according to SLA type; process mining identifies windows frequently violated so the business can renegotiate or tighten planning buffers.  

Continuous Monitoring Plan  
Dashboards (updated daily from event stream):  
1. Real-time conformance view: map showing vehicles, planned vs. actual ETA deviation colour-coded.  
2. KPI trend charts: On-Time Delivery, average shift length, fuel/km, maintenance incidents—7-day and 30-day rolling averages with control limits.  
3. Bottleneck watch-list: top 10 street segments by cumulative delay this week.  
4. Driver scorecard: delivery efficiency, eco-score, number of customer complaints.  
5. Alert panel: predicted vehicle failures in next 3 days > threshold; routes expected to miss > 10 % windows given current traffic.  

Governance  
• Weekly ops meeting reviews dashboard exceptions; monthly process-mining re-discovery compares “as-is” after changes to previous baseline to verify that undesired loop-backs do not reappear.  
• Automated triggers if any KPI breaches agreed SLA for three consecutive days, prompting root-cause drill-down in the interactive process-analysis tool.  

By coupling high-granularity event logs with modern process-mining techniques, Speedy Parcels can move from reactive firefighting to proactive, data-driven optimisation—boosting punctuality, trimming fuel and maintenance spend, and ultimately delivering a more reliable customer experience.