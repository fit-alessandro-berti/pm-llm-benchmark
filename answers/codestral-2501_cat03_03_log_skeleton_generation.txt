To construct the Log Skeleton for the order fulfillment process in the distribution center, we need to define the constraints based on the activities involved. Here is a Python dictionary representing the Log Skeleton for the given scenario:

```python
log_skeleton = {
    'equivalence': {
        # No equivalence constraints specified
    },
    'always_before': {
        ('RO', 'CA'),  # Receive Order must occur before Check Availability
        ('CA', 'RI'),  # Check Availability must occur before Reserve Items
        ('RI', 'PI'),  # Reserve Items must occur before Pick Items
        ('PI', 'QC'),  # Pick Items must occur before Quality Check
        ('QC', 'PO'),  # Quality Check must occur before Pack Order
        ('PO', 'GSL'),  # Pack Order must occur before Generate Shipping Label
        ('GSL', 'D'),   # Generate Shipping Label must occur before Dispatch
        ('D', 'IC'),    # Dispatch must occur before Invoice Customer
        ('IC', 'RP')     # Invoice Customer must occur before Record Payment
    },
    'always_after': {
        # No always after constraints specified
    },
    'never_together': {
        ('RO', 'RP'),  # Receive Order and Record Payment cannot occur together
        ('CA', 'RP'),  # Check Availability and Record Payment cannot occur together
        ('RI', 'RP'),  # Reserve Items and Record Payment cannot occur together
        ('PI', 'RP'),  # Pick Items and Record Payment cannot occur together
        ('QC', 'RP'),  # Quality Check and Record Payment cannot occur together
        ('PO', 'RP'),  # Pack Order and Record Payment cannot occur together
        ('GSL', 'RP'),  # Generate Shipping Label and Record Payment cannot occur together
        ('D', 'RP'),    # Dispatch and Record Payment cannot occur together
        ('IC', 'RP')     # Invoice Customer and Record Payment cannot occur together
    },
    'activ_freq': {
        'RO': {1},       # Receive Order occurs exactly once
        'CA': {1},       # Check Availability occurs exactly once
        'RI': {1},       # Reserve Items occurs exactly once
        'PI': {1},       # Pick Items occurs exactly once
        'QC': {1},       # Quality Check occurs exactly once
        'PO': {1},       # Pack Order occurs exactly once
        'GSL': {1},      # Generate Shipping Label occurs exactly once
        'D': {1},        # Dispatch occurs exactly once
        'IC': {1},       # Invoice Customer occurs exactly once
        'RP': {1}        # Record Payment occurs exactly once
    },
    'directly_follows': {
        ('RO', 'CA'),    # Receive Order must be directly followed by Check Availability
        ('CA', 'RI'),    # Check Availability must be directly followed by Reserve Items
        ('RI', 'PI'),    # Reserve Items must be directly followed by Pick Items
        ('PI', 'QC'),    # Pick Items must be directly followed by Quality Check
        ('QC', 'PO'),    # Quality Check must be directly followed by Pack Order
        ('PO', 'GSL'),   # Pack Order must be directly followed by Generate Shipping Label
        ('GSL', 'D'),    # Generate Shipping Label must be directly followed by Dispatch
        ('D', 'IC'),     # Dispatch must be directly followed by Invoice Customer
        ('IC', 'RP')     # Invoice Customer must be directly followed by Record Payment
    }
}

# Print the log skeleton for verification
print(log_skeleton)
```

### Explanation:
- **Equivalence:** No equivalence constraints are specified.
- **Always Before:** Each activity must occur before the next activity in the sequence.
- **Always After:** No always after constraints are specified.
- **Never Together:** Certain activities cannot occur together, especially with the final activity `RP` (Record Payment).
- **Activity Occurrences:** Each activity occurs exactly once.
- **Directly-Follows Constraints:** Each activity must be directly followed by the next activity in the sequence.

This dictionary captures the constraints and relationships between the activities in the order fulfillment process.