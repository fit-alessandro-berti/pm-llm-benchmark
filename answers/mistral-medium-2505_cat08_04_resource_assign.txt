# **Process Mining-Driven Optimization of Resource Assignment in TechSolve Solutions' IT Service Desk**

## **1. Analyzing Resource Behavior and Assignment Patterns**

### **1.1 Performance and Behavior Analysis of Agents and Tiers**
To assess agent and tier performance, we would analyze the event log using the following metrics:

- **Workload Distribution:**
  - Number of tickets assigned per agent/tier.
  - Average time spent per ticket (handling time).
  - Queue lengths and wait times before assignment.

- **Activity Processing Times:**
  - Time taken for L1 to resolve vs. escalate.
  - Time spent by L2/L3 agents on tickets requiring their skills vs. lower-tier tasks.

- **First-Call Resolution (FCR) Rate for L1:**
  - Percentage of tickets resolved by L1 without escalation.
  - Comparison of FCR across different ticket categories (e.g., Hardware vs. Software-App).

- **Frequency of Handling Specific Ticket Types/Skills:**
  - Which agents handle which skills most frequently?
  - Are L2/L3 agents frequently assigned tickets that could be resolved by L1?

### **1.2 Process Mining Techniques for Assignment Patterns**
- **Resource Interaction Analysis:**
  - Social network graphs to visualize handover patterns (e.g., which L1 agents frequently escalate to which L2 agents).
  - Identify frequent reassignment paths (e.g., L1  L2  L3 vs. direct L1  L3).

- **Role Discovery:**
  - Cluster agents based on their actual behavior (e.g., some L1 agents may act like L2 due to skill overlap).
  - Compare with documented roles to identify mismatches.

- **Skill Utilization Analysis:**
  - Track how often specialized skills (e.g., "Networking-Firewall") are used vs. underutilized.
  - Identify cases where L2/L3 agents handle tasks that could be resolved by L1 (skill mismatch).

### **1.3 Comparing Actual vs. Intended Assignment Logic**
- **Intended Logic:** Round-robin within tiers + manual escalation.
- **Actual Behavior:**
  - Some agents may be overloaded while others are underutilized.
  - Frequent reassignments suggest poor initial matching.
  - L2/L3 agents may be handling lower-tier tasks due to misclassification.

---

## **2. Identifying Resource-Related Bottlenecks and Issues**

### **2.1 Key Bottlenecks and Their Impact**
- **Skill Shortages:**
  - If certain skills (e.g., "Database-SQL") have long wait times, this indicates a bottleneck.
  - **Impact:** Delays in resolution, SLA breaches.

- **Frequent Reassignments:**
  - Tickets reassigned multiple times (e.g., INC-1001 reassigned from B12 to B15).
  - **Impact:** Increased resolution time, agent frustration.

- **Incorrect Initial Assignments:**
  - L1 agents may misclassify tickets, leading to unnecessary escalations.
  - **Impact:** Wasted L2/L3 time on low-complexity tasks.

- **Underperforming/Overloaded Agents:**
  - Some agents may have high handling times or low FCR.
  - **Impact:** Uneven workload distribution.

- **SLA Breach Correlation:**
  - Tickets with skill mismatches or reassignments are more likely to breach SLAs.

### **2.2 Quantifying the Impact**
- **Average delay per reassignment:** ~15-30 minutes (from event log timestamps).
- **Percentage of SLA breaches linked to skill mismatch:** ~40% (hypothetical, based on log analysis).

---

## **3. Root Cause Analysis for Assignment Inefficiencies**

### **3.1 Potential Root Causes**
- **Deficient Assignment Rules:**
  - Round-robin ignores skills, workload, and agent availability.
- **Inaccurate Agent Skill Profiles:**
  - Some agents may have undocumented skills (e.g., an L1 agent who can handle "Networking-Firewall").
- **Poor Initial Ticket Categorization:**
  - L1 agents may mislabel tickets, leading to wrong escalations.
- **Lack of Real-Time Workload Visibility:**
  - Dispatchers may not see which agents are overloaded.
- **Insufficient L1 Training:**
  - Excessive escalations due to lack of confidence in resolving certain issues.

### **3.2 Using Variant Analysis and Decision Mining**
- **Variant Analysis:**
  - Compare cases with smooth assignments vs. those with reassignments.
  - Identify common patterns (e.g., tickets with vague descriptions lead to more reassignments).
- **Decision Mining:**
  - Analyze why certain agents escalate more than others (e.g., lack of training vs. genuine complexity).

---

## **4. Data-Driven Resource Assignment Strategies**

### **4.1 Strategy 1: Skill-Based Routing with Proficiency Weighting**
- **Issue Addressed:** Skill mismatches leading to reassignments.
- **Implementation:**
  - Assign tickets based on required skills and agent proficiency (e.g., an agent with "App-CRM" and high FCR gets priority).
- **Data Required:**
  - Agent skill profiles, historical resolution success rates.
- **Expected Benefits:**
  - Fewer reassignments, faster resolution, better SLA compliance.

### **4.2 Strategy 2: Workload-Aware Assignment Algorithm**
- **Issue Addressed:** Uneven workload distribution.
- **Implementation:**
  - Consider current queue lengths and agent availability before assignment.
- **Data Required:**
  - Real-time agent workload, ticket priority.
- **Expected Benefits:**
  - Balanced workload, reduced agent burnout.

### **4.3 Strategy 3: Predictive Assignment Based on Ticket Characteristics**
- **Issue Addressed:** Poor initial categorization.
- **Implementation:**
  - Use NLP on ticket descriptions to predict required skills.
- **Data Required:**
  - Historical ticket descriptions and resolutions.
- **Expected Benefits:**
  - Fewer escalations, better first-time assignments.

---

## **5. Simulation, Implementation, and Monitoring**

### **5.1 Business Process Simulation**
- **Purpose:** Test new assignment strategies before full deployment.
- **Approach:**
  - Simulate ticket flow with new rules (e.g., skill-based routing).
  - Measure impact on resolution time, SLA compliance, and reassignment rates.

### **5.2 Post-Implementation Monitoring**
- **Key KPIs to Track:**
  - **First-Call Resolution Rate (L1).**
  - **Average Handling Time per Tier.**
  - **Reassignment Rate (should decrease).**
  - **SLA Compliance Rate (should improve).**
- **Process Mining Dashboards:**
  - Real-time visualization of assignment patterns.
  - Alerts for bottlenecks (e.g., skill shortages).

---

### **Conclusion**
By leveraging process mining, TechSolve can transition from a reactive, rule-based assignment system to a **data-driven, adaptive resource allocation model**. This will reduce inefficiencies, improve SLA compliance, and optimize agent utilization.