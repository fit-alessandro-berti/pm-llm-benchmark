# Integrated Event Log: Order#1234

## Merged Event Log (Chronological Order)

| Timestamp (Primary) | Unified Event Type | Order ID | Source Systems | Additional Attributes |
|---------------------|-------------------|----------|----------------|------------------------|
| 2023-10-10T10:00:00Z | Order Received | Order#1234 | A, B | user_id: u45, resource_id: r10, notes: "Event captured at warehouse system" |
| 2023-10-10T10:01:30Z | Order Validated | Order#1234 | A, B | user_id: u12, resource_id: r10, notes: "Cross-check inventory" |
| 2023-10-10T10:02:00Z | Payment Processed | Order#1234 | A, B | user_id: u12, resource_id: r99, notes: "Payment gateway delay" |
| 2023-10-10T10:03:00Z | Quality Check | Order#1234 | B only | user_id: u45, resource_id: r11, notes: "Random inspection" |
| 2023-10-10T10:05:00Z | Item Shipped | Order#1234 | A, B | user_id: u45, resource_id: r10, notes: "Package handed to courier" |
| 2023-10-10T10:20:00Z | Item Delivered | Order#1234 | A only | — |

---

## Matching & Merging Reasoning

### **1. Event Matching Strategy**
- **Key identifiers**: Used `order_id` (common to both logs) and **timestamp proximity** (2 seconds tolerance) as primary matching criteria.
- **Event name normalization**: Mapped semantically equivalent event names between systems:
  - `Order Received` (A)  `OrderReceived` (B)
  - `Order Validated` (A)  `OrderValidation` (B)
  - `Payment Processed` (A)  `PaymentCheck` (B)
  - `Item Shipped` (A)  `Shipping` (B)

### **2. Individual Event Analysis**

#### **a. Order Received / OrderReceived**
- **Log A**: `10:00:00Z`
- **Log B**: `09:59:58Z` (2 seconds earlier)
- **Decision**: **Merged** – within 2-second tolerance. System B likely recorded the actual receipt time, while System A logged when it received the notification. Used Log A’s timestamp as primary (per requirement that Log A is the “primary” timeline).

#### **b. Order Validated / OrderValidation**
- **Log A**: `10:01:30Z`
- **Log B**: `10:01:29Z` (1 second earlier)
- **Decision**: **Merged** – within tolerance. Semantic equivalence confirmed by context.

#### **c. Payment Processed / PaymentCheck**
- **Log A**: `10:02:00Z`
- **Log B**: `10:02:05Z` (5 seconds later)
- **Decision**: **Merged** – despite being 5 seconds apart (slightly beyond 2-second tolerance), the semantic match is strong, and the note in Log B (“Payment gateway delay”) explains the discrepancy. Chose Log A’s timestamp as primary.

#### **d. Quality Check**
- **Log A**: No corresponding event
- **Log B**: `10:03:00Z`
- **Decision**: **Included as-is from Log B** – this appears to be an additional step recorded only in System B (e.g., a warehouse-specific quality control step not tracked in the primary order system).

#### **e. Item Shipped / Shipping**
- **Log A**: `10:05:00Z`
- **Log B**: `10:05:02Z` (2 seconds later)
- **Decision**: **Merged** – within tolerance. Semantic equivalence is clear.

#### **f. Item Delivered**
- **Log A**: `10:20:00Z`
- **Log B**: No corresponding event
- **Decision**: **Included as-is from Log A** – delivery confirmation may only be tracked in System A (e.g., customer-facing system), while System B (warehouse-focused) stops tracking after shipping.

### **3. Attribute Integration**
- For merged events: Combined all attributes from both logs.
- Used **Log A’s event type naming** as the unified event type (since Log A is designated as primary).
- Retained **Log B’s richer metadata** (`user_id`, `resource_id`, `notes`) in all applicable records.
- For non-merged events, preserved original attributes and noted the source system.

### **4. Timestamp Handling**
- Primary timestamp selected from **Log A** for all merged events to maintain consistency with the “primary timeline” requirement.
- Log B timestamps were considered for matching but not used in the final output unless the event was Log B–only (e.g., Quality Check).

---

## Summary of Integration Outcomes
- **Merged events**: 4 (Order Received, Order Validated, Payment Processed, Item Shipped)
- **Log B–only events**: 1 (Quality Check)
- **Log A–only events**: 1 (Item Delivered)
- **Total events in integrated log**: 6

This integrated log provides a richer, more complete view of the order fulfillment process by combining the structural timeline of System A with the operational detail of System B, while transparently handling discrepancies in timing, naming, and event coverage.