# DuckDB SQL Query to Filter Cases with Specific Activity Sequence and Time Condition

Here's a SQL query that accomplishes the task:

```sql
WITH cases_to_exclude AS (
    -- Step 1: Identify cases with the exact sequence of three activities
    SELECT DISTINCT e1.case_id
    FROM event_log e1
    JOIN event_log e2 ON e1.case_id = e2.case_id
    JOIN event_log e3 ON e1.case_id = e3.case_id
    WHERE e1.activity = 'Approve Purchase Requisition'
      AND e2.activity = 'Create Order'
      AND e3.activity = 'Confirm Order'
      -- Ensure the activities are in direct succession (no other events between them)
      AND e1.timestamp < e2.timestamp
      AND e2.timestamp < e3.timestamp
      -- Check that there are no other events between these three
      AND NOT EXISTS (
          SELECT 1
          FROM event_log e_other
          WHERE e_other.case_id = e1.case_id
            AND e_other.timestamp > e1.timestamp
            AND e_other.timestamp < e2.timestamp
      )
      AND NOT EXISTS (
          SELECT 1
          FROM event_log e_other
          WHERE e_other.case_id = e1.case_id
            AND e_other.timestamp > e2.timestamp
            AND e_other.timestamp < e3.timestamp
      )
      -- Step 2: Check the time condition (more than 5 days between Create and Confirm)
      AND (julianday(e3.timestamp) - julianday(e2.timestamp)) > 5
)

-- Final result: all events that don't belong to excluded cases
SELECT e.*
FROM event_log e
WHERE e.case_id NOT IN (SELECT case_id FROM cases_to_exclude)
ORDER BY e.case_id, e.timestamp;
```

## Explanation:

1. **First CTE (`cases_to_exclude`)**:
   - Identifies cases with the exact sequence of three activities in order
   - Uses self-joins to find the three events in sequence
   - Uses NOT EXISTS to ensure there are no other events between them
   - Checks the time difference between 'Create Order' and 'Confirm Order' is > 5 days

2. **Main Query**:
   - Returns all events from the original table except those belonging to cases identified in the CTE
   - Orders results by case_id and timestamp for readability

Note: The query assumes that within a case, timestamps are unique and increasing. If there could be multiple events with the same timestamp, additional conditions would be needed to handle those cases.

For DuckDB, we use `julianday()` to calculate date differences, but you could also use `date_diff` or other date functions depending on your DuckDB version.