```sql
WITH OrderedEvents AS (
    SELECT
        case_id,
        activity,
        timestamp,
        LAG(activity, 1) OVER (PARTITION BY case_id ORDER BY timestamp) AS prev_activity,
        LAG(activity, 2) OVER (PARTITION BY case_id ORDER BY timestamp) AS prev_prev_activity,
        LAG(timestamp, 1) OVER (PARTITION BY case_id ORDER BY timestamp) AS prev_timestamp,
        LAG(timestamp, 2) OVER (PARTITION BY case_id ORDER BY timestamp) AS prev_prev_timestamp
    FROM event_log
),
CasesWithSequence AS (
    SELECT DISTINCT case_id
    FROM OrderedEvents
    WHERE
        activity = 'Confirm Order'
        AND prev_activity = 'Create Order'
        AND prev_prev_activity = 'Approve Purchase Requisition'
),
CasesWithSequenceAndTiming AS (
    SELECT DISTINCT O.case_id
    FROM OrderedEvents O
    JOIN CasesWithSequence C ON O.case_id = C.case_id
    WHERE
        O.activity = 'Confirm Order'
        AND O.prev_activity = 'Create Order'
        AND O.prev_prev_activity = 'Approve Purchase Requisition'
        AND O.timestamp - O.prev_timestamp > INTERVAL '5 days'
)
SELECT
    e.*
FROM event_log e
LEFT JOIN CasesWithSequenceAndTiming cst ON e.case_id = cst.case_id
WHERE cst.case_id IS NULL;
```