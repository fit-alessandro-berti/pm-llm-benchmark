----------------------------------------------------------------
SECTION 1 – PROCESS DISCOVERY AND CONFORMANCE CHECKING
----------------------------------------------------------------
1.1Data integration & preprocessing  
• Log unification.Create a canonical schema (Case ID, Timestamp, Activity, Resource(s), Attributes).  
– Granularity: two case levels are useful:  
a) Vehicle-Day (e.g., “V12-2024-12-05”) for end-to-end routing performance.  
b) Package (e.g., “P9876”) for parcel-level service analysis.  
– Source alignment:  
• GPS tracker  high-frequency “Vehicle” events (Depart Depot, In-Transit, Traffic-Idle, Arrive Depot).  
• Scanner  discrete “Delivery” events (Arrive Customer, Success, Fail, Depart Customer).  
• Dispatch system  “Planned Route Assigned”, “Planned Stop n”, customer time-window attributes, capacity, etc.  
• Maintenance logs  “Scheduled Maintenance Start/End”, “Unscheduled Stop”.  
• Timestamp synchronization.Convert all logs to UTC, correct for clock drift, and order events strictly.  
• Event abstraction.Roll up thousands of raw GPS pings into business-meaningful states (e.g., “Driving”, “Stopped<5 min”, “Traffic Idle>5 min”).  
• Key challenges:  
– Event correlation: linking scanner Package IDs to the right Vehicle-Day (use vehicle, driver and time proximity).  
– Noise/outliers: GPS spikes, missing scans, duplicate records. Need cleansing rules and “repair” techniques (interpolating short gaps).  
– Heterogeneous frequencies: GPS (seconds) vs scanner (minutes) vs dispatch (once per route); aggregation windows are required.  

1.2Process discovery  
• Apply discovery algorithms on the cleansed Vehicle-Day log:  
– Inductive Miner (IMf) or Heuristic Miner to generate a sound, comprehensible model that includes parallelism (driving vs scanning), loops (multiple traffic-idle events), and optional paths (unscheduled maintenance).  
• Create hierarchical views:  
– Level 1 “Route lifecycle”: Depot Depart  n×{Drive  Stop  Deliver/Fail  Drive}  Depot Arrive.  
– Level 2 details: break the “Stop” composite into Arrive, Service, Depart, include causal sub-patterns (e.g., maintenance loop).  
• Overlay performance: average duration, waiting times, distance between activities, heatmaps.

1.3Conformance checking against the plan  
• Convert each planned route into a BPMN or Petri-net model: Planned_Depart  Planned_Stop_1  …  Planned_Stop_n  Return.  
• Alignment-based conformance: token replay or cost-based alignments to detect:  
– Sequence deviations (customer serviced out of planned order).  
– Missing/extra activities (unplanned break, fuel stop, repair).  
– Timing violations: service outside promised window, excessive dwell, early/late start or finish.  
• Generate deviation heatmaps per driver, vehicle, weekday, postal code.  

----------------------------------------------------------------
SECTION 2 – PERFORMANCE ANALYSIS & BOTTLENECK IDENTIFICATION
----------------------------------------------------------------
2.1Key KPIs & calculation from the log  
• On-Time Delivery Rate = (# packages delivered within customer window)/(total delivered).  
• Average Service Time per Stop = mean(“Depart Customer” – “Arrive Customer”).  
• Average Travel Time between Stops = mean(next “Arrive Customer” – previous “Depart Customer”).  
• Travel vs Service Ratio = Travel / Service per route.  
• Fuel per km or per package = (telemetry liters or $)/(GPS distance).  
• Vehicle Utilization = (shift duration – depot idle)/legal max working hours.  
• Traffic Delay Frequency = # “Traffic-Idle>5 min” occurrences per 100 km.  
• Failed Delivery Rate = (# “Delivery Failed”)/(total attempts).  
• Unscheduled Maintenance Incidence = # unscheduled stops per 1 000 km.  

2.2Techniques to locate bottlenecks  
• Performance spectrum / dotted chart: visualize idle and driving periods over time & routes to spot recurrent slow zones.  
• Process graph with performance overlay: color arcs by average travel time; thick red arcs pinpoint slow segments.  
• Trace clustering: group Vehicle-Day traces by performance; outlier clusters reveal problematic patterns.  
• Case-level attribute correlation: regression or decision trees linking high-duration traces to factors (driver, weekday, zone, weather).  
• Spatial hotspot analysis: join GPS events to road segments; identify segments with lowest average speed or highest stop density.  
• Queue mining at depot: waiting time for loading/return.  

----------------------------------------------------------------
SECTION 3 – ROOT-CAUSE ANALYSIS FOR INEFFICIENCIES
----------------------------------------------------------------
Potential root causes & supporting analyses:  
A. Route-planning deficiencies  
• Compare actual sequence vs dispatch sequence; high deviation cost  static plans ignore real-time congestion.  
B. Travel time under-estimation  
• KPI: % of segments where actual > planned + tolerance; correlate with day-of-week/time-of-day to reveal systematic bias.  
C. Traffic congestion patterns  
• Overlay “Traffic-Idle” events on external traffic datasets; peak-hour effect or specific corridors.  
D. High variability in service time  
• Box-plot service times by customer type or parcel size; high IQR suggests parking problems or complex hand-offs.  
E. Vehicle reliability  
• Sequence “Unscheduled Stop”  “Depot Return” loops; frequent repeats in certain Vans implies aging fleet or maintenance gaps.  
F. Driver behavior  
• Variant analysis: compare fastest 25 % routes to slowest 25 % after controlling for distance; attributes like harsh acceleration (from telematics), long personal breaks, etc.  
G. Failed deliveries  
• Analyze “Delivery Failed” traces; correlate to time-window compliance, property type, or lack of pre-arrival SMS.  

----------------------------------------------------------------
SECTION 4 – DATA-DRIVEN OPTIMIZATION STRATEGIES
----------------------------------------------------------------
Strategy 1 – Dynamic Traffic-Aware Routing  
• Targets: sequence deviations, traffic-idle bottlenecks, travel-time overruns.  
• Root cause: static daily route plans unaware of real-time congestion.  
• Process-mining support: conformance heatmap shows 30 % of stops executed in alternative order where doing so cut 12 % travel time; traffic hotspot map pinpoints 07:30-09:30 corridor delays.  
• Implementation: integrate live traffic API and ETA predictions into dispatch; allow algorithmic resequencing if customer window still respected.  
• Expected impact: –10 % average travel time; +6 pp on-time delivery; –8 % fuel / km.

Strategy 2 – Predictive Vehicle Maintenance & Fleet Rotation  
• Targets: unscheduled breakdowns, high maintenance cost.  
• Root cause: reactive maintenance after faults.  
• Process-mining support: pattern “Low-Speed  Unscheduled Stop  Return Depot” occurs 1.8 times per week, average 110 min lost; correlated with mileage > 120 000 km.  
• Implementation: use survival analysis on maintenance logs, mileage and engine diagnostic codes to schedule interventions before predicted failure; rotate high-risk vans to shorter urban routes.  
• Expected impact: –60 % road-side failures; +2 pp on-time; –15 % corrective maintenance cost.

Strategy 3 – Customer Time-Window & Communication Optimization  
• Targets: failed attempts, overtime, extended service times.  
• Root cause: customer absent or unprepared.  
• Process-mining support: 14 % of failed deliveries are first attempts between 11:00-14:00 in suburban zones; dwell-time variance doubles for “signature required” parcels without pre-call.  
• Implementation:  
a) allow customers to narrow delivery windows morning-of via app/SMS;  
b) send predictive ETA messages based on live driver progress;  
c) reroute parcels flagged “high absence risk” to parcel lockers.  
• Expected impact: –50 % failed attempts; –7 % total distance (fewer re-attempts); +5 pp on-time KPI.

(optional Strategy 4 – Driver Performance Coaching)  
• Variant comparison shows 18 % speed-of-service gap between top and bottom quartile drivers. Tailored coaching plus gamified dashboard could raise average performance; fuel-efficient driving scores also improve MPG.

----------------------------------------------------------------
SECTION 5 – OPERATIONAL CONSTRAINTS & CONTINUOUS MONITORING
----------------------------------------------------------------
5.1Respecting constraints  
• Driver hours: incorporate legal duty limits in the routing engine; process model can include compliance checks (“Drive > 4.5 h without 30 min break” deviation).  
• Vehicle capacity: optimization algorithm must maintain weight/volume limits while resequencing.  
• Customer windows: conformance checker continues to flag any window breaches; dynamic routing only allowed within slack.  
• Union or contractual rules: e.g., drivers paid overtime after 8 h; cost model must weigh overtime vs rerouting.

5.2Continuous process-mining dashboards  
• Real-time KPIs: On-Time %, Active Traffic-Idle events, Fleet availability.  
• Daily heatmaps: Travel-time per segment, Service-time per customer cluster.  
• Deviation tracker: top 10 drivers/vehicles with most alignment penalties.  
• Predictive alerts: van predicted to fail in next 300 km; route trending late by >15 min.  
• A/B monitoring: compare pilot group (dynamic routing) vs control on fuel, OT, punctuality.  
• Feedback loop: every week, re-mine traces to detect new patterns (e.g., seasonal traffic shifts) and update optimization parameters.

By fusing the six-month event data into a coherent process view, running discovery, conformance, and performance analyses, and linking insights to targeted interventions, Speedy Parcels can systematically raise punctuality, trim costs, and establish a data-driven culture of continuous improvement.