Use window functions to detect the exact adjacent triple per case (using a deterministic ordering), compute the time between the 'Create Order' and 'Confirm Order' events, collect case_ids that match both the adjacency and >5 days condition, and then exclude those cases from the final result.

Example DuckDB SQL:

WITH ordered AS (
  SELECT *,
         ROW_NUMBER() OVER (PARTITION BY case_id ORDER BY timestamp, activity) AS seq
  FROM event_log
),
seq_matches AS (
  SELECT DISTINCT case_id
  FROM (
    SELECT case_id,
           activity,
           LEAD(activity)  OVER (PARTITION BY case_id ORDER BY seq) AS next_act,
           LEAD(activity,2) OVER (PARTITION BY case_id ORDER BY seq) AS next2_act,
           LEAD(timestamp)  OVER (PARTITION BY case_id ORDER BY seq) AS next_ts,
           LEAD(timestamp,2) OVER (PARTITION BY case_id ORDER BY seq) AS next2_ts
    FROM ordered
  ) t
  WHERE activity = 'Approve Purchase Requisition'
    AND next_act = 'Create Order'
    AND next2_act = 'Confirm Order'
    -- time difference strictly greater than 5 days
    AND (next2_ts - next_ts) > INTERVAL '5 days'
)
SELECT e.*
FROM event_log e
WHERE e.case_id NOT IN (SELECT case_id FROM seq_matches)
ORDER BY e.case_id, e.timestamp;