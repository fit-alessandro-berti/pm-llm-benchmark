```sql
-- Step 1: Identify cases with the exact sequence of 'Approve Purchase Requisition', 'Create Order', 'Confirm Order' with no events in between,
-- then exclude those where the time from 'Create Order' to 'Confirm Order' exceeds 5 days.
-- The result excludes any such cases.

SELECT *
FROM event_log AS e
WHERE EXISTS (
    SELECT 1
    FROM event_log AS e1
    WHERE
        e1.case_id = e.case_id
        AND e1.activity = 'Approve Purchase Requisition'
        AND e1.timestamp < e2.timestamp
        AND e2.activity = 'Create Order'
        AND e2.timestamp < e3.timestamp
        AND e3.activity = 'Confirm Order'
    -- Arrange events in time order and ensure strict succession
    AND e.timestamp > e1.timestamp
    AND e1.timestamp < e2.timestamp
    AND e2.timestamp < e3.timestamp
)
-- After matching the sequence, watermark that 'Create Order' comes more than 5 days before 'Confirm Order'
WHERE NOT EXISTS (
    SELECT 1
    FROM event_log AS e
    WHERE
        e.case_id = e1.case_id
        AND e2.activity = 'Create Order'
        AND e3.activity = 'Confirm Order'
        AND e.timestamp > e2.timestamp
        AND e3.timestamp < e.timestamp
    AND e2.timestamp - e2.timestamp > 5 * 86400  -- more than 5 days in seconds
);
```

**Explanation:**

- The first `EXISTS` subquery ensures we only consider records where the exact sequence occurs in order, with `timestamp` strictly increasing between the three events.  
- The main filter uses `NOT EXISTS` to exclude any case where `e.timestamp` exceeds `e2.timestamp` by more than 5 days.  
- This effectively removes all cases that meet both the activity sequence and the time gap condition.  
- The result is all events from `event_log` that come from cases which either don’t contain the full sequence, or contain it but with the confirm at more than 5 days after create — i.e., the exception set.