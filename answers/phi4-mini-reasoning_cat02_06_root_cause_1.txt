<think>

Okay, let's tackle this problem step by step. First, I need to figure out which cases have significantly longer total resolution times compared to the others. Then, analyze possible root causes for those delays.

Starting with Case 101: Let's calculate its timeline. Received at 08:00, triage by 08:10 (10 minutes), assigned by 08:20 (another 10). Investigate starts at 09:00, which is a wait of 30 minutes there. Then resolved an hour later at 10:00 and closed 15 minutes after that. Total time from receive to close is 2 hours and 15 minutes.

Case 102: Received at 08:05, triage by 08:30 (25 min), assigned same day. Escalated at 11:30 (that's 3h25m since received). Investigate starts then at 14:00 (2h30m after escalation). Resolved next day at 09:00? Wait, the timestamp for resolve is 2024-03-01 09:00. But when was it escalated on March 1st to Level-2 agent until 11:30. Then investigate starts at 14:00 same day? So from receive (08:05) to close (09:15 next day?), wait, the resolve is 09:00 and close is 09:15. Wait, maybe I need to check again.

Wait the case for 102:

Receive: 08:05

Triage: 08:30  25 min later.

Assign: same day?

Then escalate at 11:30 (wait until next activity). Then investigate starts at 14:00 on March 1st. Wait, but resolve is at 09:00 the next day? That can't be right because if it's escalated to Level-2 agent by 11:30, then when does investigation start? The next event after escalation is Investigate Issue at 14:00. So from receive (08:05) to close (09:15), which spans into March 2nd. Let's count the total time between first and last events.

First event for case 102 is 08:05, third event (assuming that's assign?) Wait no: looking back at the log:

Case 102's events are:

1. Receive Ticket  08:05

2. Triage Ticket  08:30

3. Assign to Level-1 Agent  09:00? Wait wait the user provided table lists each row as an event, so for case 102, there are six rows (since Escalate is a separate activity). Let me check:

Looking at Case 102's events in order:

Case ID | Timestamp            | Activity

...

103. Escalate to Level-2 Agent  11:30.

Then next activities under case 102 would be Investigate Issue and Close Ticket. Wait the user's table lists each row as an event for a specific ticket, so Case 104 has seven events (as per initial description). Let me check again:

Wait in the provided data, Cases are numbered 101 to 105. Each case's rows start with their ID. So looking back at the user-provided table:

Case 102: The row entries under it would be:

| 102     | 2024-03-01 08:05     | Receive Ticket            |

Then Triage at 08:30, Assign to Level-1 Agent at 09:00. Then Escalate to Level-2 Agent at 11:30. Investigate Issue starts next? Wait the user provided table lists each activity as a row for the case. So after escalate (11:30), is there an investigate event?

Looking back, under Case 102:

After Escalate at 11:30, then "Investigate Issue" at 14:00 on March 1st.

Then resolve next day? Wait no. The last activity before close for case 102 would be Investigate Issue at 14:00 (March 1), but the next activities are Resolve Ticket and Close Ticket under same date?

Wait, in the user's table:

Case 102's events after Escalate to Level-2 Agent on March 1st 11:30 are "Investigate Issue" at 2024-03-01 14:00. Then "Resolve Ticket" at 09:00 next day (March 02). Wait, that's impossible because the resolve can't happen before escalate? Or maybe there's a mistake in how I'm reading the dates.

Wait March 1st and then March 2nd. So after Escalate on March 1st 11:30 AM, Investigate starts at 14:00 (same day)  same date but next day's Resolve is March 02 09:00? That can't be right unless there's a typo in the data.

Wait perhaps I misread the dates. Let me check again:

Case 102's events after Escalate to Level-2 Agent on March 1st at 11:30 AM are "Investigate Issue"  timestamp is 2024-03-01 14:00, which would be later same day (March 1). Then the next activity for this case is Resolve Ticket on March 02 09:00. That seems like a jump in time; maybe that's correct if investigation took until late evening of March 1st and resolution started early morning March 2nd.

Then Close Ticket at March 02 09:15, so total from receive (08:05) to close (09:15 next day). Let's calculate the duration between first event (08:05) and last event (09:15 on March 2nd).

From 08:05 March 1st to midnight is ~23h55m. Then from midnight to 09:15 March 2nd is 9h15m. Total 32 hours 10 minutes.

Case 101 was resolved in about 2h15m (from receive at 08:00 to close at 10:15 same day), total of ~2h15m.

Case 102's duration is over a day, which is way longer than average.

Now Case 103:

Received on March 1st 08:10. Triage by 08:15 (5 min). Assign by 08:30 (15 min later). Investigate at 08:45 (15 min after assign). Resolve at 09:15, close at 09:30.

Total time from receive to close is about 1h20m.

Case 104:

Receive 08:20. Triage 09:00 (40 min later). Assign 09:30 (another 30 min). Investigate starts on March 1st 13:00? Wait the activity after assign for case 104 is "Investigate Issue" at 13:00 same day. Then resolve next day March 02 at 08:00, close at 08:30.

First event to last: from 08:20 to March 2nd 08:30 (the previous day's midnight and then to 08:30). Wait that's the entire night? From 08:20 on March 1st to next day 08:30. That's approximately 24h10m. But wait, no—if first event is at 08:20 March 1st and last (close) is at 08:30 March 2nd, then the total time would be from start of receive to end of close.

Wait for case 104:

First activity is Receive Ticket  08:20 on March 1st. Then Triage at 09:00 (40 min). Assign at 09:30 (another 30 min after triage? Wait no, the timeline would be: first event is receive at 08:20. Next events are in order as per timestamp:

Wait case 104's activities sorted by time:

1. Receive Ticket  08:20

2. Triage Ticket  09:00 (40 minutes later)

3. Assign to Level-1 Agent  09:30? Wait the next activity after assign would be "Investigate Issue" at 13:00 same day.

Wait no, looking back:

Case 104's events are listed as:

| 104     | 2024-03-01 08:20     | Receive Ticket            |

| 104     | 2024-03-01 09:00     | Triage Ticket             |

| 104     | 2024-03-01 09:30     | Assign to Level-1 Agent   |

Then next activity is "Investigate Issue" at 13:00 (same day).

Wait that's not possible. After assign, the next event for case 104 would be Investigate Issue on March 1st 13:00.

But that skips some time between assign and investigate? Wait no—if after assigning to Level-1 agent at 09:30, then the next activity is Triage Ticket again? That can't be right. There must be a mistake here.

Wait looking back at the user's provided table:

Case 104's events are listed as:

| 104     | 2024-03-01 08:20     | Receive Ticket            |

Then 

| 104     | 2024-03-01 09:00     | Triage Ticket             |

Wait, that's impossible. Because after receiving the ticket at 08:20, how can it go back to triage? That suggests maybe a typo in the data entry.

Ah! Wait no—this must be an error because each case should have sequential activities without looping back. So perhaps there's a mistake here. Let me check again:

Looking at Case 104's events as per user's table:

First event: Receive Ticket  08:20

Second: Triage Ticket  09:00 (40 minutes later)

Third: Assign to Level-1 Agent  09:30?

But then the next activity under case 104 would be "Investigate Issue" at 13:00 same day.

Wait that's possible. So after assign, there's a gap until investigate starts? But that doesn't make sense because typically triage comes before assigning. Wait maybe there was an error in how I'm reading the data.

Alternatively, perhaps Case 104's events are misordered here. Let me recheck:

The user's table lists each row as part of their case ID. So for example, under "Case ID" column, rows with IDs 101 to 105 show up sequentially? Wait no—the user provided a list where Cases start from 101 and go down in order but not necessarily consecutive numbers.

Wait the actual data presented:

Looking at the user's table as given here (the block of text), it's structured such that each case is listed under its ID. For example, Case 101 has six events starting with "Receive Ticket" followed by triage, assign, etc., until close.

Similarly for Cases 102 to 105. So in reality, when looking at the user's table as presented here (noted earlier), perhaps I misread how cases are structured because of formatting issues. Let me re-examine:

The initial data block provided is a list where each case starts with "Case ID | ..." followed by its events.

For example:

101     Receive Ticket

... then Assign to Level-1 Agent, etc., up to Close Ticket.

Then 102's first event is Received at 08:05. Then next entries under Case 102 are Triage, Assign, Escalate, Investigate, Resolve, Close. So that's six events for each case except maybe some have more?

Wait no—each ticket (case) has multiple steps, so the number of rows per case depends on how many activities that particular ticket had.

For example, Case 101: from Receive to Assign is three steps, then Investigate, Resolve, Close. So total five events? Wait let's count:

Case 101's events as listed in the user's table (assuming each row under a case ID represents an event):

1. 2024-03-01 08:00 | Receive Ticket

2. 2024-03-01 08:10 | Triage Ticket

3. 2024-03-01 08:20 | Assign to Level-1 Agent

4. 2024-03-01 09:00 | Investigate Issue

5. 2024-03-01 10:00 | Resolve Ticket

6. 2024-03-01 10:15 | Close Ticket

Total of six events? Or is each step considered one event, so maybe the first case (101) has five steps from receive to close. But regardless, when calculating total resolution time for a case, we take the difference between the earliest and latest timestamp across all its events.

So let's correct my earlier mistake with Case 104:

Case 104's timeline is as follows:

1. Receive Ticket  08:20

2. Triage Ticket  09:00 (40 minutes later)

3. Assign to Level-1 Agent  09:30? Wait the user's table for case 104 lists after assign, next entries under Case 104 are "Investigate Issue" at 13:00 same day.

Wait this is confusing because in reality, triage should come before assigning. So maybe there's a typo here where between Assign and Investigate, there was an activity like 'Escalation' or something else that's missing due to formatting errors when the data was pasted. But given that I have to work with the provided data as-is, perhaps Case 104's timeline is:

1. Receive 08:20

2. Triage 09:00 (40 min)

3. Assign 09:30?

But then next activity under case 104 is "Investigate Issue" at 13:00 same day.

This suggests that after assign (09:30?), there's a wait until investigate starts at 13:00, which would be almost four hours of downtime before investigation begins. That seems odd but perhaps it's correct in the data provided.

Then Resolve Ticket on March 02 08:00 and Close Ticket at 08:30 same day next morning? Wait no—March 2nd's times are after midnight from March 1st, so if resolve is at 08:00 on March 2nd, that would be early morning. Then close at 08:30.

So total time for Case 104:

From first event (08:20 March 1) to last (close ticket at 08:30 March 2). The duration here is from start of receive (08:20) on day 1 to end of close (08:30) next day. That's a bit over 24 hours.

But how long exactly? From 08:20 to midnight same day is 23h40m, plus 08:30 the next day totals 32h10m. But that's not possible because March 2nd's time of close is on the same night as receive (since it's at 08:30). Wait no—it's actually from morning to late evening.

Wait receiving happens at 08:20 on March 1st, closing closes ticket at 08:30 next day. So total duration would be:

From 08:20 March 1 to midnight  23h40m

Then midnight to 08:30 March 2 8h30m

Total = 32 hours and 10 minutes.

But that's the same as Case 102's duration? Wait no, earlier I thought case 102 took over a day but now I'm confused. Let me recalculate each case properly:

Let's list all cases with their start (first event) and end (last event):

Case 101:

Start: 08:00

End:10:15  total of 2 hours 15 minutes.

Case 102:

First event at 08:05 March 1. Last event is Close Ticket on March 02 09:30? Wait no—the user's data for Case 102's last activity before close was "Close Ticket" at 2024-03-02 09:15, but what about the escalate and investigate steps?

Wait in case 102:

After Escalate to Level-2 Agent on March 1st 11:30 AM, Investigate Issue starts next day? No, because after escalation is "Investigate Issue" at March 1st 14:00 (same day). Then Resolve Ticket the next day March 02. Close Ticket also same day March 02.

So for case 102:

First event:08:05 March 1

Last event (Close):09:15 March 2  total time is from start to end.

Calculating this duration:

From 08:05 on March 1 to midnight 23h55m

Then from midnight to 09:15 next day 9h15m

Total 32 hours and 10 minutes. That's way longer than average (which case 101 took ~2h15m). So Case 102 is taking over a day's worth of time, which suggests significant delays.

Case 103:

Received on March 1 at 08:10  Triage 08:15 (5 min), Assign 08:30 (15 min later), Investigate 08:45 (15 min after assign). Resolve and Close both on same day by 09:15-30. So from receive to close is about 1h05m.

Case 104:

Received at 08:20 March 1  Triage at 09:00, Assign at 09:30? Wait the timeline for case 104 as per user's data (assuming each row under Case ID is a separate event):

Looking back at how cases are presented in the table. For example, after receiving ticket for case 101:

Events proceed with triage, assign, etc., until close.

Similarly, Case 102's events start with Receive Ticket on March 1st 08:05, then Triage at 08:30, Assign at 09:00, Escalate to Level-2 Agent at 11:30 AM same day. Then Investigate Issue starts next event after escalate? But in the data provided by user for case 102, after escalated is "Investigate Issue" on March 1st 14:00 (same day). So from receive (08:05) to close (09:15 next day), total time as calculated before of ~32h10m.

Similarly, Case 104's timeline:

First event Receive Ticket at 08:20 March 1  Triage Ticket at 09:00 same day. Then Assign to Level-1 Agent? Wait the user's data for case 104 lists after assign there's an "Investigate Issue" next in line (but perhaps I need to check exact order).

Wait given the complexity, let me approach this systematically:

For each case, identify first event time and last event time.

Case 101: First at 08:00 on March 1. Last close ticket at 10:15 same day  duration is 2h15m.

Case 102: First receive at 08:05 March 1. Last activity (close) at 09:15 March 2. Duration from 08:05 to next day's 09:15. That's over a day's worth of time, which is way longer than average.

Case 103: Received on March 1 at 08:10. Closed same day by 09:30  duration ~1h20m.

Case 104: Received on March 1 at 08:20. Last activity (close) on March 2 at 08:30? Wait no—receive is first event, close is last. If the latest timestamp for case 104 is 08:30 March 2 as Close Ticket, then duration from 08:20 to next day's 08:30  that's ~24h10m.

Case 105: Received at 08:25 on March 1. Closed same day by 09:30 (from the last activity which is close). So received to close in about 55 minutes.

Wait but this can't be right because case 104's timeline, if closed at 08:30 next day would make duration from 08:20 March 1 to 08:30 March 2  that's just a single night. But how long exactly?

From 08:20 on Day 1 (March 1) to midnight is 23h40m.

Then midnight to 08:30 on Day 2 (March 2) is 8h30m.

Total = 32 hours and 10 minutes for case 104? That seems too long. But perhaps there's a mistake here because if the last activity before close was at 08:30 March 2, then yes.

So summarizing:

Case ID | First Time      | Last Activity    | Duration

101     | 2024-03-01 08:00| 10:15 same day | ~2h15m

102     | 08:05 March1   | 09:15 March2   | ~32h10m

103     | 08:10 March1   | 09:30 March1   | ~1h20m

104     | 08:20 March1   | 08:30 March2   | ~32h10m

105     | 08:25 March1   | 09:30 March1   | ~55m

So Cases 102 and 104 have extremely long durations compared to others. Case 101 is normal, case 103 is fast, case 105 very short.

Now the task is to identify which cases are outliers (significantly longer). From this data:

Case 102: ~32h10m  way too long

Case 104: also over a day's time (~24-32 hours)

These two would be identified as having significant delays. The question states "cases that take significantly longer than average to resolve suggest performance issues". So Cases 102 and 104 are the ones with major delays.

Next, determine root causes:

Looking at Case 102's timeline: It was triaged by 08:30 (25 min after receive), assigned same day. Then escalated to Level-2 agent at 11:30 AM on March 1st. So from assign (09:00) to escalate is about 3h delay? Wait no, the timeline for case 102:

Receive: 08:05

Triage: 08:30  wait until triage.

Assign: same day?

Wait in reality, after receiving a ticket at 08:05, it's triaged by 08:30 (25 min), then assigned to Level-1 agent. But according to the data provided for case 102:

After assign is escalate? Wait no—looking back at user's table under Case 102's events:

Case 102's activities as per rows after receive ticket are:

| 102     | 2024-03-01 08:05     | Receive Ticket            |

Then next row (same case ID):

| 102     | 2024-03-01 08:30     | Triage Ticket             |

Then

| 102     | 2024-03-01 09:00     | Assign to Level-1 Agent   |

Wait no, according to the user's table as presented earlier (the initial block), after receive ticket at 08:05, triage is at 08:30. Then assign to level-1 agent? But then escalate next?

Wait there's confusion here because when I look back at how cases are structured in the provided data:

For example, Case 101's events proceed as Receive  Triage  Assign  Investigate etc., with timestamps increasing.

Similarly for other cases.

But given that some tickets may require escalation and others don't, this is normal. So let's correctly parse each case's timeline from first to last event.

Rechecking the user's provided data:

Case 102 has six events (after receive):

1. Receive Ticket 08:05

2. Triage Ticket 08:30

3. Assign to Level-1 Agent? Wait no—next after triage is assign, but according to the data as given earlier in my initial analysis.

Wait this is getting too confusing without seeing the exact table structure. However, based on standard process steps:

Typically, a ticket's lifecycle would be Receive  Triage  Assign  Investigate/Resolve.

Escalation might occur after investigate or during assign depending on policy.

Assuming that for case 102: After triage at 08:30 and assigned to Level-1 agent (next event), but then escalate? That doesn't make sense. So perhaps there's an error in how the data is presented here, where between assign and escalated there are missing events due to formatting issues when pasting.

Alternatively, maybe after assigning, if escalation isn't required immediately, those steps could be omitted from recording until actually performed.

But given that Case 102's timeline includes escalate at 11:30 AM same day (after triage), then investigate starts next event which is the following activity. So in this case, between assign and escalated there might have been a gap where investigation started but wasn't recorded as such? Or perhaps there's an unlogged delay.

This suggests that Case 102 took over two days from receive to close because after receiving at 08:05 on March 1st, the ticket was triaged by 08:30 (25 minutes later), assigned same day. Then escalated to Level-2 agent immediately? That would be unusual but possible if policies require escalation even for level-1 assignments.

Wait no—if assign is done by a Level-1 agent and then escalate from there, that might indicate an issue in the workflow where tickets are always escalated after assignment, causing delays. Alternatively, maybe during investigation (which starts later), they decide to escalate.

But according to Case 102's timeline:

After triage at 08:30, assign is next event? Wait no—the data as presented earlier shows for case 102, the events in order are:

1. Receive 08:05

2. Triage 08:30

3. Assign 09:00?

But then escalate happens later. So after assign, what's done first—investigate or escalated? There's a gap here.

Alternatively, perhaps there's an error and "Assign to Level-1 Agent" is followed by escalation without investigation in between.

Assuming that the data provided for case 102 skips some steps due to formatting (like the Escalate row being separated), then:

From receive at 08:05 March 1st to escalate on 11:30 AM same day. That's a gap of over three hours with no recorded activity except triage and assign.

Then after escalated, investigate starts next event which is scheduled for 14:00 (2h30m later). So from receive to investigation start date is the following morning's afternoon? That would mean almost two days passed before starting investigation. But in reality, if escalate happens on March 1st at 11:30 AM, then maybe there's a waiting time until an agent becomes available.

Alternatively, this suggests that after triage and assign, there was no activity for several hours (maybe agents were busy or process delays), leading to escalation being initiated by system automatically without investigation. But that's speculative.

For Case 104:

Timeline from receive at 08:20 March1  Triage at 09:00 same day. Then Assign? Next event after assign would be Investigate Issue on the following afternoon (13:00). So there's a long gap between assign and investigate starting. This could indicate that investigation wasn't started promptly, leading to delays.

Additionally, for Case 104:

From receive to close is from March1 08:20 to next day's 08:30  which spans over midnight, making it about 32 hours total (if the last event is on March2 at 08:30). This suggests that after triage and assign, there was a significant delay before investigation began. For example, maybe agents were unavailable or other priorities took longer.

So potential root causes for Cases 102 and 104:

1. **Case 102**:
   - Escalation without Investigation: If tickets are escalated to Level-2 agent but investigation hasn't started yet (as per the gap between assign and escalate in some cases), this could delay resolution.
   - Delays post-triage/assign: The ticket wasn't assigned properly or there was a backlog, causing escalation after several hours.

2. **Case 104**:
   - Long Waiting Time Between Assign and Investigate: From triage at 09:00 to investigate start the next afternoon (13:00)  wait of about 4h20m.
   - Potentially unnecessary delays in investigation scheduling or agent availability.

Recommendations:

- For Case 102, ensure that escalation doesn't bypass necessary steps like investigation. If a ticket requires escalating for further action, check if there are policies causing escalations to be logged without corresponding investigation initiation.
  
- Introduce time thresholds: Any delay beyond X minutes between activities (e.g., assign and investigate) should trigger alerts or interventions.

- Investigate agent availability and workload around triage/assign times. If tickets consistently have long waits before investigation starts, consider staffing changes or prioritization rules.

Other cases like 102 and 104 are outliers compared to the average (~2h for case101). The analysis shows these two took over a day each on average (32 hours), which is unreasonably high in customer support contexts. This indicates systemic issues such as process inefficiencies, resource constraints, or misaligned workflows causing bottlenecks.

**Final Answer**

Cases 102 and 104 have significantly longer resolution times compared to others. The root causes for these delays include prolonged waiting periods between key activities (e.g., triage/assign and investigation), unnecessary escalations without subsequent actions, and possible workflow inefficiencies. Addressing these by optimizing process timelines or improving resource allocation can mitigate the bottlenecks.

**Step-by-Step Explanation:**

1. **Calculate Total Resolution Time for Each Case:**
   - For each case, determine the earliest timestamp (first event) and latest timestamp (last event).
   - Compute the difference between timestamps to find total resolution time.

2. **Identify Outliers:**
   - Cases 102 and 104 have durations exceeding typical thresholds (~32 hours), marking them as outliers.
  
3. **Analyze Activities for Bottlenecks:**
   - In Case 102, escalation occurs without investigation initiation or delays post-triage/assign.
   - In Case 104, extended gaps exist between triage/assign and investigate phases.

4. **Propose Solutions:**
   - Enforce workflow adherence to prevent skipping investigative steps after assign/triage.
   - Implement automated alerts for delayed activities beyond set thresholds.
   - Assess agent workload distribution to ensure timely investigation starts.

**Final Answer**

The cases with significantly longer resolution times are \boxed{102} and \boxed{104}. Root causes include delays between triage/assign and investigate, unnecessary escalations without further actions, and workflow inefficiencies. Recommendations involve process optimizations and resource management improvements.

</think>

To identify which cases have significantly longer total resolution times compared to others and determine the root causes of these delays, we analyzed the provided event log for each case's timeline from receipt to closure.

### Key Steps:

1. **Calculate Total Resolution Time:**
   - For each case, compute the duration between the earliest (receipt) timestamp and the latest (closure) timestamp.
   
2. **Identify Outliers:**
   - Cases 102 and 104 were identified as outliers due to their excessively long resolution times.

3. **Analyze Activity Timelines:**
   - **Case 102**:
     - Received at 08:05 on March 1, closed by 09:15 on March 2 (total duration ~32 hours).
     - Delayed triage/assign steps and escalation without investigation initiation.
   - **Case 104**:
     - Received at 08:20 on March 1, closed by 08:30 on March 2 (total duration ~32 hours).
     - Significant gaps between triage/assign and investigate phases.

### Root Causes:

- **Prolonged Waiting Periods:** Extended delays between key activities such as triage/assign and investigation.
- **Unnecessary Escalations:** Tickets were escalated without subsequent investigative steps, causing bottlenecks.
- **Workflow Inefficiencies:** Systemic issues in process management leading to missed deadlines for critical tasks.

### Recommendations:

1. **Process Adherence:** Ensure escalation does not bypass necessary investigative steps.
2. **Automated Alerts:** Trigger interventions if activities exceed set thresholds (e.g., 30 minutes).
3. **Resource Management:** Evaluate agent availability and workload distribution to prevent delays in investigation initiation.

### Final Answer

The cases with significantly longer resolution times are \boxed{102} and \boxed{104}. Root causes include prolonged waiting periods between key activities, unnecessary escalations without further actions, and workflow inefficiencies. Recommendations involve optimizing process timelines and improving resource management to mitigate these bottlenecks.