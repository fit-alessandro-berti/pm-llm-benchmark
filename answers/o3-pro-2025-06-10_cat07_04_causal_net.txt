The picture is a control-flow model of a “compensation-request” process drawn in extended EPC / Petri-net style.

1. What the shapes mean  
   • Rounded rectangles = activities (tasks or functions).  
     a  register request  
     b  examine thoroughly  
     c  examine casually  
     d  check ticket  
     e  decide  
     f  re-initiate request  
     g  pay compensation  
     h  reject request  
     z  end  
   • Small black circles = routing connectors.  
     The legend at the lower-right shows the six connectors that can occur:
        – XOR-split   (exactly one outgoing branch)  
        – AND-split   (all outgoing branches in parallel)  
        – OR-split    (any non-empty subset of the outgoing branches)  
        – XOR-join    (continues when the first incoming branch arrives)  
        – AND-join    (waits for all incoming branches)  
        – OR-join     (waits for the subset of branches that has actually been started)

2. Reading the main model  
   a  “register request” starts the case.  
   • OR-split: after registration the case can be sent to one, two or all three examination activities b, c and d; they may run concurrently.  
   • OR-join: the chosen examinations synchronise before the decision step e.  

   e  “decide” evaluates the result.  
   • XOR-split: three mutually exclusive outcomes are possible:  
     – g “pay compensation”, or  
     – h “reject request”, or  
     – f “re-initiate request”.  

   f  “re-initiate request” forms a loop: an XOR-join merges the branch and sends the case back to the very first activity a for another round.  

   Either g or h is executed. Their results are recombined by an XOR-join and the process finishes in  

   z  “end”.

3. Essence of the behaviour  
   • Optional/parallel examination of the request (OR-split/OR-join).  
   • A rework loop that may send the case back to the beginning.  
   • A final exclusive choice between paying or rejecting the request, then termination.

Thus the diagram shows a versatile request-handling process that allows several types of checks, optional repetition, and an exclusive compensation/rejection outcome, with the bottom-right panel explaining the connector symbols that realise these routing constructs.