Here's a DuckDB SQL query that fulfills the requirements you've outlined:

```sql
-- First, count the number of events for each case
WITH event_count AS (
    SELECT 
        case_id, 
        COUNT(*) AS event_count
    FROM 
        event_log
    GROUP BY 
        case_id
    HAVING 
        COUNT(*) <= 6
)

-- Then, select all events from cases that meet our criteria
SELECT 
    el.*
FROM 
    event_log el
JOIN 
    event_count ec ON el.case_id = ec.case_id
ORDER BY 
    el.case_id, el.timestamp;
```

### Explanation:

1. **CTE (Common Table Expression) - `event_count`:**
   - This CTE groups the `event_log` by `case_id` and counts the number of events for each case.
   - The `HAVING` clause filters out cases where the count is more than 6, leaving us with cases that have 6 or fewer events.

2. **Main Query:**
   - We join the `event_log` table with our `event_count` CTE to filter events based on the `case_id`.
   - This join ensures that we only select events from cases that have 6 or fewer events in total.
   - The `ORDER BY` clause is added to sort the output by `case_id` and then by `timestamp` for clarity, although this wasn't explicitly asked for in the prompt.

This query will return all events from cases where the total number of events does not exceed six, effectively filtering out cases with more than six events. Remember that the performance of this query might depend on the indexing of the `event_log` table, particularly on the `case_id` column.