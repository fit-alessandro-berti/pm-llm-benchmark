Here's a DuckDB SQL query that accomplishes the task:

```sql
WITH case_counts AS (
    SELECT
        case_id,
        COUNT(*) AS event_count
    FROM
        event_log
    GROUP BY
        case_id
    HAVING
        COUNT(*) <= 6
)

SELECT
    el.*
FROM
    event_log el
JOIN
    case_counts cc ON el.case_id = cc.case_id
ORDER BY
    el.case_id,
    el.timestamp;
```

### Explanation:
1. The `WITH` clause creates a temporary result set (`case_counts`) that:
   - Groups events by `case_id`
   - Counts the number of events per case
   - Filters to only keep cases with 6 or fewer events using `HAVING COUNT(*) <= 6`

2. The main query:
   - Joins the original `event_log` with the filtered case counts
   - Returns all columns from the original table (`el.*`)
   - Optionally includes an `ORDER BY` to sort results by case and timestamp (you can remove this if not needed)

This approach efficiently filters out cases with more than 6 events while preserving all original columns for the remaining events.