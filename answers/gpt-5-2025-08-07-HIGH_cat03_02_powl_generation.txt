from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Activities
SR = Transition(label="SR")     # Service Request verification
CS = Transition(label="CS")     # Contract Setup

DA = Transition(label="DA")     # Datacenter Allocation
ACI = Transition(label="ACI")   # Access Control Initialization

BNC = Transition(label="BNC")   # Base Network Configuration
DR = Transition(label="D&R")    # Debug & Reconfigure

CD = Transition(label="CD")     # Containerized Deployment
MD = Transition(label="MD")     # Monolithic Deployment

QA = Transition(label="QA")     # Quality Assurance
SA = Transition(label="SA")     # Security Audit

GLA = Transition(label="GLA")   # Go-Live Approval

# Loop: execute BNC, then optionally D&R and repeat until stable
config_loop = OperatorPOWL(operator=Operator.LOOP, children=[BNC, DR])

# Exclusive choice for deployment method: CD or MD
deployment_choice = OperatorPOWL(operator=Operator.XOR, children=[CD, MD])

# Build the root partial order with all nodes
root = StrictPartialOrder(nodes=[SR, CS, DA, ACI, config_loop, deployment_choice, QA, SA, GLA])

# Add precedence constraints (partial order edges)
root.order.add_edge(SR, CS)                    # SR -> CS

root.order.add_edge(CS, DA)                    # CS -> DA
root.order.add_edge(CS, ACI)                   # CS -> ACI

root.order.add_edge(DA, config_loop)           # DA -> configuration loop
root.order.add_edge(ACI, config_loop)          # ACI -> configuration loop

root.order.add_edge(config_loop, deployment_choice)  # loop -> deployment choice

root.order.add_edge(deployment_choice, QA)     # deployment -> QA
root.order.add_edge(deployment_choice, SA)     # deployment -> SA

root.order.add_edge(QA, GLA)                   # QA -> GLA
root.order.add_edge(SA, GLA)                   # SA -> GLA

# 'root' is the resulting POWL model representing the whole process