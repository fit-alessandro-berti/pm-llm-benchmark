```python
from pm4py.objects.petri_net.obj import PetriNet, Marking
from pm4py.objects.petri_net.utils import petri_utils

net = PetriNet('insurance_claim_process')

# Places
p_start = PetriNet.Place('start')
p_post_c = PetriNet.Place('post_c')
p_post_cr = PetriNet.Place('post_cr')
p_post_dv = PetriNet.Place('post_dv')
p_post_dv_ok = PetriNet.Place('post_dv_ok')
p_post_fc = PetriNet.Place('post_fc')
p_post_fc_ok = PetriNet.Place('post_fc_ok')
p_post_ca = PetriNet.Place('post_ca')
p_post_ap = PetriNet.Place('post_ap')
p_post_p = PetriNet.Place('post_p')
p_post_n = PetriNet.Place('post_n')
p_end = PetriNet.Place('end')

net.places.add(p_start)
net.places.add(p_post_c)
net.places.add(p_post_cr)
net.places.add(p_post_dv)
net.places.add(p_post_dv_ok)
net.places.add(p_post_fc)
net.places.add(p_post_fc_ok)
net.places.add(p_post_ca)
net.places.add(p_post_ap)
net.places.add(p_post_p)
net.places.add(p_post_n)
net.places.add(p_end)

# Transitions
t_c = PetriNet.Transition(name='C', label='C')
t_cr = PetriNet.Transition(name='CR', label='CR')
t_dv = PetriNet.Transition(name='DV', label='DV')
t_rds = PetriNet.Transition(name='RDS', label='RDS')
t_silent_dv = PetriNet.Transition(name='silent_dv', label=None)
t_fc = PetriNet.Transition(name='FC', label='FC')
t_ii = PetriNet.Transition(name='II', label='II')
t_silent_fc = PetriNet.Transition(name='silent_fc', label=None)
t_ca = PetriNet.Transition(name='CA', label='CA')
t_ap = PetriNet.Transition(name='AP', label='AP')
t_silent_ca = PetriNet.Transition(name='silent_ca', label=None)
t_p = PetriNet.Transition(name='P', label='P')
t_n = PetriNet.Transition(name='N', label='N')
t_cl = PetriNet.Transition(name='CL', label='CL')

net.transitions.add(t_c)
net.transitions.add(t_cr)
net.transitions.add(t_dv)
net.transitions.add(t_rds)
net.transitions.add(t_silent_dv)
net.transitions.add(t_fc)
net.transitions.add(t_ii)
net.transitions.add(t_silent_fc)
net.transitions.add(t_ca)
net.transitions.add(t_ap)
net.transitions.add(t_silent_ca)
net.transitions.add(t_p)
net.transitions.add(t_n)
net.transitions.add(t_cl)

# Arcs
petri_utils.add_arc_from_to(p_start, t_c, net)
petri_utils.add_arc_from_to(t_c, p_post_c, net)

petri_utils.add_arc_from_to(p_post_c, t_cr, net)
petri_utils.add_arc_from_to(t_cr, p_post_cr, net)

petri_utils.add_arc_from_to(p_post_cr, t_dv, net)
petri_utils.add_arc_from_to(t_dv, p_post_dv, net)

# RDS loop back to before DV
petri_utils.add_arc_from_to(p_post_dv, t_rds, net)
petri_utils.add_arc_from_to(t_rds, p_post_cr, net)

# Silent transition after DV to FC
petri_utils.add_arc_from_to(p_post_dv, t_silent_dv, net)
petri_utils.add_arc_from_to(t_silent_dv, p_post_dv_ok, net)

petri_utils.add_arc_from_to(p_post_dv_ok, t_fc, net)
petri_utils.add_arc_from_to(t_fc, p_post_fc, net)

# II loop back to before FC
petri_utils.add_arc_from_to(p_post_fc, t_ii, net)
petri_utils.add_arc_from_to(t_ii, p_post_dv_ok, net)

# Silent transition after FC to CA
petri_utils.add_arc_from_to(p_post_fc, t_silent_fc, net)
petri_utils.add_arc_from_to(t_silent_fc, p_post_fc_ok, net)

petri_utils.add_arc_from_to(p_post_fc_ok, t_ca, net)
petri_utils.add_arc_from_to(t_ca, p_post_ca, net)

# AP optional
petri_utils.add_arc_from_to(p_post_ca, t_ap, net)
petri_utils.add_arc_from_to(t_ap, p_post_ap, net)

# Silent transition after CA to P
petri_utils.add_arc_from_to(p_post_ca, t_silent_ca, net)
petri_utils.add_arc_from_to(t_silent_ca, p_post_ap, net)

petri_utils.add_arc_from_to(p_post_ap, t_p, net)
petri_utils.add_arc_from_to(t_p, p_post_p, net)

petri_utils.add_arc_from_to(p_post_p, t_n, net)
petri_utils.add_arc_from_to(t_n, p_post_n, net)

petri_utils.add_arc_from_to(p_post_n, t_cl, net)
petri_utils.add_arc_from_to(t_cl, p_end, net)

im = Marking()
im[p_start] = 1

fm = Marking()
fm[p_end] = 1
```