Sure, I can help you generate a Log Skeleton model for the given process variants. Here's an example of how you can do it in Python:

```python
process = {
    'equivalence': set(),
    'always_before': set(),
    'always_after': set(),
    'never_together': set(),
    'activ_freq': {},
    'directly_follows': set()
}

for variant in variants:
    activities = variant.split(' -> ')
    for i in range(len(activities) - 1):
        process['equivalence'].add((activities[i], activities[i + 1]))
        process['always_before'].add((activities[i], activities[i + 1]))
        process['always_after'].add((activities[i], activities[i + 1]))
        process['never_together'].add((activities[i], activities[i + 1]))
        process['activ_freq'][activities[i]] = variant.count(activities[i])
        process['directly_follows'].add((activities[i], activities[i + 1]))

print(process)
```

This code will generate a dictionary with the keys: 'equivalence', 'always_before', 'always_after', 'never_together', 'activ_freq', 'directly_follows'. The values associated to each key will be sets containing the couples of activities satisfying the constraints.
Note that this is just an example, and you may need to adjust the code to fit your specific needs.