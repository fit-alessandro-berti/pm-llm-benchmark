Below is a single, self-contained DuckDB statement that realises the four requested steps.  
Replace :K with the number of variants you want to keep (e.g. 3 for “top-3”):

```sql
-- ========= PARAMETERS =========
-- :K            -> number of most-frequent variants to retain
---------------------------------------------------------------

WITH

/* 1. Build the (time-) ordered activity sequence per case */
case_variants AS (
    SELECT
        case_id,
        /* string_agg keeps the activities in timestamp order */
        string_agg(activity, '' ORDER BY timestamp) AS variant_seq
    FROM event_log
    GROUP BY case_id
),

/* 2. Count how many cases follow each variant */
variant_counts AS (
    SELECT
        variant_seq,
        COUNT(*)                       AS case_cnt,
        dense_rank() OVER (
            ORDER BY COUNT(*) DESC     -- most frequent first
        )                              AS frq_rank
    FROM case_variants
    GROUP BY variant_seq
),

/* 3. Keep only the top :K most frequent variants */
top_variants AS (
    SELECT variant_seq
    FROM variant_counts
    WHERE frq_rank <= :K
),

/*  …and the cases that belong to those variants */
top_cases AS (
    SELECT cv.case_id
    FROM case_variants cv
    JOIN top_variants tv
      ON cv.variant_seq = tv.variant_seq
)

/* 4. Return every event that is in one of the kept cases */
SELECT  el.*
FROM    event_log AS el
JOIN    top_cases  AS tc
  ON    el.case_id = tc.case_id
ORDER BY el.case_id, el.timestamp;   -- optional, just for readability
```

What each CTE does:

1. case_variants  
   • For every `case_id` concatenates the activities in **timestamp order**  the complete process variant string.

2. variant_counts  
   • Groups the previous result by the variant string and counts how many cases follow it.  
   • `dense_rank` ranks variants by descending frequency.

3. top_variants / top_cases  
   • Selects the variants whose rank  K and then all cases that exhibit one of those variants.

4. Final SELECT  
   • Retrieves the original event rows, but only for cases that belong to the top-K variants; every other case is left out.

Run the query after setting :K (or replace `:K` with a literal integer) to obtain the event log restricted to the most frequent variants.