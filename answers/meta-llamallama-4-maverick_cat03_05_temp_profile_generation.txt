## Step 1: Understand the Problem and the Temporal Profile Concept
The problem requires constructing a Python dictionary representing the temporal profile of a complex global supply chain process. This involves estimating the average time and standard deviation between pairs of activities that follow each other in the process, not necessarily directly.

## Step 2: Identify the Activities and Their Possible Sequences
The given activities are: Supplier Selection (SS), Order Placement (OP), Receive Components (RC), Quality Inspection (QI), Component Assembly (CA), Product Testing (PT), Packaging (PK), Warehouse Storage (WS), Distribution (DT), and After-Sales Support (AS). We need to consider all possible pairs of these activities.

## Step 3: Estimate the Average Time and Standard Deviation for Each Pair of Activities
To estimate the average time and standard deviation, we must consider the typical flow and duration of activities in a supply chain. For example, the time between SS and OP might be relatively short (e.g., a few days), while the time between RC and PT could be longer due to inspection and assembly times.

## Step 4: Consider the Logical Flow of the Supply Chain Process
The logical flow is: SS -> OP -> RC -> QI -> CA -> PT -> PK -> WS -> DT -> AS. We will use this to estimate the time between activities.

## Step 5: Estimate Average Times and Standard Deviations
- For directly consecutive activities (e.g., SS and OP), the average time might be a few days with a small standard deviation.
- For activities separated by one or more steps, the average time will be longer and might have a larger standard deviation due to variability in processing times.

## Step 6: Constructing the Temporal Profile Dictionary
Let's consider a few examples of activity pairs and estimate their average times and standard deviations based on typical supply chain durations.

## Step 7: Example Estimations
1. Between SS and OP: Average = 3 days, STDEV = 1 day. Converting to seconds: Average = 259200, STDEV = 86400.
2. Between OP and RC: Average = 14 days, STDEV = 3 days. In seconds: Average = 1209600, STDEV = 259200.
3. Between RC and PT: This involves QI and CA, so Average = 7 days (for QI and CA), STDEV = 2 days. In seconds: Average = 604800, STDEV = 172800. Total from OP to PT = 14 + 7 = 21 days. Average = 1814400, STDEV = 432000 (rough estimation).
4. For activities like SS and RC, the average time would be the sum of OP and other preceding activities, so SS to RC: Average = 17 days (3+14), STDEV = sqrt(1^2 + 3^2) = 3.16 days. In seconds: Average = 1468800, STDEV = 273000 (approximating).

## Step 8: Creating the Dictionary
Let's create the dictionary with some representative pairs:
- ('SS', 'OP'): (259200, 86400)
- ('OP', 'RC'): (1209600, 259200)
- ('RC', 'PT'): (604800, 172800)
- ('SS', 'RC'): (1468800, 273000)
- ('PT', 'DT'): Assuming PT to PK to WS to DT takes around 5 days (PT to PK) + 1 day (PK) + 1 day (WS) + 3 days (DT) = 10 days. Average = 864000, STDEV = 172800 (for simplicity).

## Step 9: Writing the Python Dictionary
```python
temporal_profile = {
('SS', 'OP'): (259200, 86400),
('OP', 'RC'): (1209600, 259200),
('RC', 'PT'): (604800, 172800),
('SS', 'RC'): (1468800, 273000),
('PT', 'DT'): (864000, 172800),
('SS', 'PT'): (2116800, 432000),  # SS to OP to RC to PT
('OP', 'DT'): (1814400 + 864000, 432000 + 172800),  # OP to RC to PT to DT
('RC', 'DT'): (864000 + 604800, 172800 + 172800),  # RC to PT to DT
}
```

The final answer is: $\boxed{$\{('SS', 'OP'): (259200, 86400), ('OP', 'RC'): (1209600, 259200), ('RC', 'PT'): (604800, 172800), ('SS', 'RC'): (1468800, 273000), ('PT', 'DT'): (864000, 172800), ('SS', 'PT'): (2116800, 432000), ('OP', 'DT'): (2678400, 604800), ('RC', 'DT'): (1468800, 345600)\}$}$