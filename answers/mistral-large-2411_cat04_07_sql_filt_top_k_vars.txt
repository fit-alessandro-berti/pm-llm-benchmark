Below is a step-by-step DuckDB SQL query to accomplish the specified tasks:

1. **Extract the ordered sequence of activities per case**:
2. **Aggregate and count cases per variant**:
3. **Filter down to the cases belonging to the top K variants**:
4. **Return the corresponding events from those filtered cases**:

Assuming `K` is the number of top variants you want to retrieve, replace `K` with the actual number in the query.

```sql
WITH ordered_activities AS (
    SELECT
        case_id,
        STRING_AGG(activity, ', ') WITHIN GROUP (ORDER BY timestamp) AS activity_sequence
    FROM
        event_log
    GROUP BY
        case_id
),
variant_counts AS (
    SELECT
        activity_sequence,
        COUNT(case_id) AS case_count
    FROM
        ordered_activities
    GROUP BY
        activity_sequence
),
top_k_variants AS (
    SELECT
        activity_sequence
    FROM
        variant_counts
    ORDER BY
        case_count DESC
    LIMIT K
),
top_k_cases AS (
    SELECT
        oa.case_id
    FROM
        ordered_activities oa
    JOIN
        top_k_variants tkv
    ON
        oa.activity_sequence = tkv.activity_sequence
)
SELECT
    el.*
FROM
    event_log el
JOIN
    top_k_cases tkc
ON
    el.case_id = tkc.case_id
ORDER BY
    el.case_id, el.timestamp;
```

### Explanation:

1. **ordered_activities**:
   - This Common Table Expression (CTE) constructs the ordered sequence of activities for each `case_id` using `STRING_AGG` function, which aggregates activities ordered by `timestamp`.

2. **variant_counts**:
   - This CTE counts the number of cases for each unique activity sequence, effectively identifying unique process variants and their frequencies.

3. **top_k_variants**:
   - This CTE selects the top K variants based on their frequency (`case_count`), ordered in descending order.

4. **top_k_cases**:
   - This CTE retrieves the `case_id`s that belong to the top K variants identified in the previous step.

5. **Final SELECT**:
   - The main query joins the original `event_log` with the `top_k_cases` to return all events that belong to the cases corresponding to the top K variants. The results are ordered by `case_id` and `timestamp` to maintain the sequence of activities.

Replace `K` with the actual number of top variants you want to retrieve. For example, if you want the top 5 variants, replace `K` with `5`.

This query ensures that you correctly extract, aggregate, filter, and return the required events from the top K process variants.