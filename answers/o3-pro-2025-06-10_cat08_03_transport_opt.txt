============================================================
1.  PROCESS DISCOVERY   &   CONFORMANCE CHECKING
============================================================

1.1 Data integration & preprocessing
•  Unify clocks – all data sources must be on the same time-zone and NTP-synchronised.  
•  Keys for correlation  
  – Case ID = VehicleID + Calendar-Date (shift) for the “trip-level” log.  
  – Secondary case = PackageID to study the parcel journey.  
  – Merge keys: VehicleID + Timestamp windows to join GPS pings with scanner events; VehicleID + Work-orderID for dispatch data; VehicleID for maintenance records.  
•  Normalize attributes  
  – Location: convert latitude/longitude to a common projection or geo-hash to allow spatial joins with traffic layers.  
  – Speed in km/h, distances in km (haversine from consecutive GPS points).  
•  Event abstraction  
  – Raw 5-sec GPS pings  aggregate into higher-level events (“Depart depot”, “Arrive customer”, “Traffic-stop”, “Idle>5 min”…) using rule-based mining or machine-learning segmentation.  
•  Noise handling  
  – Remove duplicate scanner scans, impossible GPS jumps (>150 km/h), missing end-events (infer from next begin-event).  
•  Challenges  
  – Clock drift between devices, differing granularity (per-second GPS vs. per-event scanner), incomplete package IDs inside GPS stream, privacy (driver IDs), volume (>100 M rows) requiring incremental ETL.

1.2 Process discovery
•  Use Inductive Miner or Disco/Fuzzy Miner on the Vehicle-Day case to obtain an end-to-end process map:  
  Shift-Start  (Route Assigned)  loop { Drive  Arrive_Customer  Deliver/Fail  Depart_Customer }*  (Unscheduled_Stop | Maintenance)  Return_Depot  Shift-End.  
•  Overlay performance on arcs (mean/95-percentile duration, distance) and frequency shading.  
•  For the PackageID log, discover micro-flow (Scan_at_Depot  Loaded  In-Transit  Arrive  Deliver/Fail).

1.3 Conformance with plan
•  Generate “reference model” from dispatch data: ordered list of planned stops with scheduled ETAs and planned mileage.  
•  Replay actual traces on the reference model (alignment algorithm). Deviations of interest:  
  a. Missing activity – stop skipped or package left on board.  
  b. Inserted activity – unplanned fuel break / coffee / detour.  
  c. Order deviation – customer 12 served before 9.  
  d. Timing deviation – SLA breach (ETA ± time window), excessive dwell, speed restriction violation.  
  e. Resource deviation – different driver or vehicle.  
•  Quantify deviation cost: extra km, extra minutes, % late deliveries, fuel delta (using vehicle MPG curve).

============================================================
2.  PERFORMANCE ANALYSIS & BOTTLENECK DETECTION
============================================================

2.1 Core KPIs (computable from log)  
•  On-Time Delivery Rate = (# packages delivered inside customer window) / (# delivered).  
•  Average Stop Service Time = mean(Depart_Customer – Arrive_Customer).  
•  Travel-vs-Service Ratio = TravelTime / ServiceTime per route.  
•  Fuel per km & per package = FuelDrawn (from CAN bus) / distance or packages delivered.  
•  Vehicle Utilisation = (ShiftDuration – DepotIdle – Maintenance) / ShiftDuration.  
•  Delay due to Traffic = Idle>2 min with Speed<5 km/h during driving segments.  
•  Failed Delivery Rate = #Fail / (#attempts).  
•  Unscheduled Maintenance Rate = #breakdowns / 1000 km.

2.2 Bottleneck identification techniques  
•  Process map with performance overlay to highlight thick, slow arcs.  
•  Dotted chart (timestamp on x-axis, case on y) coloured by activity type to see temporal congestion peaks.  
•  Attribute filters: slice by weekday, driver, depot area to spot recurring slow patterns.  
•  Cluster cases (k-means on KPIs) into “fast”, “average”, “slow” groups; inspect slow cluster variants.  
•  Social network / hand-off analysis: long queues at depot hand-over windows.  
•  Geo-heatmap of long Idle segments  traffic hotspots or parking scarcity.  
•  Combine with external datasets (TomTom traffic index, weather) to quantify their contribution via regression: Delay ~ TrafficLevel + Rain + RouteLength + DriverExperience.

============================================================
3.  ROOT-CAUSE ANALYSIS
============================================================

Potential root causes and supporting analyses:

1. Sub-optimal static routing  
   • Variant analysis shows 23 % of routes executed in a different order than planned, saving time when they deviate – a sign the optimiser is outdated.  

2. Incorrect travel-time estimates  
   • Alignment shows systematic positive time deviation on urban routes between 08:00-10:00 vs. planned; overlay with traffic data confirms congestion peaks not modelled.  

3. High service-time variability  
   • Boxplot of ServiceTime by customer type => apartments > offices (+4 min median)  parking/search time.  

4. Vehicle breakdowns  
   • Cases with “Unscheduled_Stop (engine)” add +45 min average and 0.8 l extra fuel; predictive pattern: mileage since last oil change > 18 000 km.  

5. Driver behaviour  
   • Drivers D021 & D105 have 30 % higher idle-with-engine-on time (+5 l/day).  

6. Failed deliveries  
   • 11 % of late routes correlate with high failed-delivery ratio; 60 % of these occur in 17:00-20:00 slots – customers not home.

============================================================
4.  DATA-DRIVEN OPTIMISATION STRATEGIES
============================================================

STRATEGY 1 – Dynamic traffic-aware routing
•  Targets: Late deliveries, extra fuel, long idle.  
•  Root cause: Static planning ignores real-time congestion.  
•  Process-mining evidence: 32 min median “Traffic Idle” per route concentrated on arterial roads 8–10 AM & 4–6 PM.  
•  Solution: Integrate live traffic API; re-optimise route sequence mid-shift (mobile app).  
•  KPI impact (expected):  
  – On-Time Delivery +6 pp  
  – Fuel per km –4 %  
  – Travel-vs-Service ratio –0.12.

STRATEGY 2 – Territory & stop-sequence re-design
•  Targets: Excess mileage and overtime.  
•  Root cause: Historical territory boundaries yield zig-zag patterns; process map shows frequent cross-overs.  
•  Evidence: Variant with “West->East zigzag” has +7 km and +28 min compared with best variant covering same 35 stops.  
•  Action: Run clustering on geo-coordinates and delivery density to create compact micro-territories; feed to planner.  
•  KPI impact: Distance –8 %, Overtime hours –15 %.

STRATEGY 3 – Predictive maintenance scheduling
•  Targets: Unscheduled breakdown delays and repair cost.  
•  Root cause: Maintenance triggered only by calendar, ignoring actual usage patterns.  
•  Evidence: 78 % of mid-shift breakdowns occur >1 500 km beyond last service or after prolonged idling episodes.  
•  Action: Build survival model on log (Weibull) to predict failure probability; schedule service in low-demand windows.  
•  KPI impact: Unscheduled maintenance rate –50 %, On-Time Delivery +2 pp.

STRATEGY 4 – Smart customer communication & time-window negotiation
•  Targets: Failed deliveries, re-delivery mileage.  
•  Root cause: Broad 8-hour windows cause missed customers.  
•  Evidence: 65 % of failures in residential area during office hours.  
•  Action: Send ETA SMS 30 min before arrival (derived from live trace); allow customer to reschedule same-day within driver’s remaining route.  
•  KPI impact: Failed Delivery rate –40 %, Extra kms for re-delivery –25 %.

STRATEGY 5 – Driver eco-efficiency coaching
•  Targets: Excess fuel burn and idle time.  
•  Root cause: Behavioural variance.  
•  Evidence: Idle-with-engine-on time varies 3-to-1 across drivers.  
•  Action: Gamified dashboard; monthly coaching for bottom quartile; threshold alerts in cab.  
•  KPI impact: Fuel per package –6 %, CO –5 %.

============================================================
5.  OPERATIONAL CONSTRAINTS & CONTINUOUS MONITORING
============================================================

5.1 Constraint compliance  
•  Routing optimiser embeds EU working-time rules: Max 9 h driving, 45 min break per 4.5 h.  
•  Vehicle capacity & weight limits encoded as hard constraints in new territory design.  
•  Dynamic rerouting engine checks that modified sequence still respects promised customer windows and does not overflow cargo space with reverse-logistics pickups.

5.2 Continuous process-mining monitoring
Dashboards (updated hourly / daily):  
1. Live conformance heat-map – % stops already served on time vs. plan per route.  
2. KPI cockpit – last 7 days trend lines for all KPIs, red-flag thresholds.  
3. Drift detector – statistical control chart on service-time distribution to spot emerging problems (e.g., seasonal traffic).  
4. Root-cause widgets – e.g., top 10 congestion links by cumulative delay; driver idle leaderboard.  
5. Maintenance predictor – probability-of-failure table per vehicle.

Governance: weekly ops meeting to review dashboard, monthly re-training of predictive models, quarterly territory re-balancing using newest six-month log.

With this closed-loop process-mining approach, Speedy Parcels can move from reactive firefighting to proactive, data-driven operational excellence, simultaneously improving punctuality and lowering fuel, overtime, and maintenance costs.