To achieve your task, you can use a subquery combined with the `IN` clause to filter out the cases that have more than six events. Here's the DuckDB SQL query that accomplishes this:

```sql
SELECT *
FROM event_log
WHERE case_id IN (
    SELECT case_id
    FROM event_log
    GROUP BY case_id
    HAVING COUNT(*) <= 6
);
```

**Explanation:**

1. **Subquery (`SELECT case_id FROM event_log GROUP BY case_id HAVING COUNT(*) <= 6`):**
   - This subquery selects all `case_id`s that have six or fewer events.
   - It groups the rows by `case_id` and uses the `HAVING` clause to filter groups where the count of events is less than or equal to six.

2. **Main Query (`SELECT * FROM event_log WHERE case_id IN (...)`):**
   - The main query selects all columns (`*`) from the `event_log` table.
   - The `WHERE` clause filters the events to include only those where the `case_id` is in the list obtained from the subquery.
   - This effectively excludes any events from cases that have more than six events.

**Result:**
- The query returns all events belonging to cases with six or fewer events, effectively filtering out any cases with more than six events.

**Note:** This query assumes that the `event_log` table contains the columns `case_id`, `activity`, and `timestamp`, as specified.