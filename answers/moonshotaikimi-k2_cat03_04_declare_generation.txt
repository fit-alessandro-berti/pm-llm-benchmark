```python
# Core single-activity constraints
existence = {
    "Idea Generation (IG)":            {"support": 1.0, "confidence": 1.0},
    "Design Draft (DD)":               {"support": 1.0, "confidence": 1.0},
    "Technical Feasibility Check (TFC)":{"support": 1.0, "confidence": 1.0},
    "Cost Evaluation (CE)":            {"support": 1.0, "confidence": 1.0},
    "Prototype Creation (PC)":         {"support": 1.0, "confidence": 1.0},
    "Laboratory Testing (LT)":         {"support": 1.0, "confidence": 1.0},
    "User Testing (UT)":               {"support": 1.0, "confidence": 1.0},
    "Approval Gate (AG)":              {"support": 1.0, "confidence": 1.0},
    "Marketing Plan (MP)":             {"support": 1.0, "confidence": 1.0},
    "Final Launch (FL)":               {"support": 1.0, "confidence": 1.0}
}

# No upper-bound restrictions
absence = {}
exactly_one = {}

# Process always starts with a new idea
init = {
    "Idea Generation (IG)": {"support": 1.0, "confidence": 1.0}
}

###############################################################################

# Responded-existence: whenever a triggering activity happens, the other occurs at least once somewhere in the case.
responded_existence = {
    "Design Draft (DD)":                {"Technical Feasibility Check (TFC)": {"support": 1.0, "confidence": 1.0}},
    "Design Draft (DD)":                {"Cost Evaluation (CE)":             {"support": 1.0, "confidence": 1.0}},
    "Prototype Creation (PC)":          {"Laboratory Testing (LT)":          {"support": 1.0, "confidence": 1.0}},
    "Prototype Creation (PC)":          {"User Testing (UT)":                {"support": 1.0, "confidence": 1.0}},
    "User Testing (UT)":                {"Approval Gate (AG)":               {"support": 1.0, "confidence": 1.0}},
    "Laboratory Testing (LT)":          {"Approval Gate (AG)":               {"support": 1.0, "confidence": 1.0}},
    "Approval Gate (AG)":               {"Marketing Plan (MP)":              {"support": 1.0, "confidence": 1.0}},
    "Marketing Plan (MP)":              {"Final Launch (FL)":                {"support": 1.0, "confidence": 1.0}}
}

# Coexistence: activities must either both occur or both _never_ occur (support 1 because organisations launch all vetted ideas).
coexistence = {
    ("Laboratory Testing (LT)", "User Testing (UT)"):   {"support": 1.0, "confidence": 1.0}
}

###############################################################################

# Directed response / precedence / succession pairs that define the strict sequence.
response = {
    "Idea Generation (IG)":             {"Design Draft (DD)":               {"support": 1.0, "confidence": 1.0}},
    "Design Draft (DD)":                {"Technical Feasibility Check (TFC)":{"support": 1.0, "confidence": 1.0}},
    "Design Draft (DD)":                {"Cost Evaluation (CE)":            {"support": 1.0, "confidence": 1.0}},
    "Technical Feasibility Check (TFC)":{"Cost Evaluation (CE)":            {"support": 1.0, "confidence": 1.0}},
    "Cost Evaluation (CE)":             {"Prototype Creation (PC)":         {"support": 1.0, "confidence": 1.0}},
    "Prototype Creation (PC)":          {"Laboratory Testing (LT)":         {"support": 1.0, "confidence": 1.0}},
    "Laboratory Testing (LT)":          {"User Testing (UT)":               {"support": 1.0, "confidence": 1.0}},
    "User Testing (UT)":                {"Approval Gate (AG)":              {"support": 1.0, "confidence": 1.0}},
    "Approval Gate (AG)":               {"Marketing Plan (MP)":             {"support": 1.0, "confidence": 1.0}},
    "Marketing Plan (MP)":              {"Final Launch (FL)":               {"support": 1.0, "confidence": 1.0}}
}

# Precedence: an activity can only happen if the predecessor has already happened at least once.
precedence = {
    "Design Draft (DD)":                {"Idea Generation (IG)":             {"support": 1.0, "confidence": 1.0}},
    "Technical Feasibility Check (TFC)":{"Design Draft (DD)":               {"support": 1.0, "confidence": 1.0}},
    "Cost Evaluation (CE)":             {"Design Draft (DD)":               {"support": 1.0, "confidence": 1.0}},
    "Prototype Creation (PC)":          {"Cost Evaluation (CE)":            {"support": 1.0, "confidence": 1.0}},
    "Laboratory Testing (LT)":          {"Prototype Creation (PC)":         {"support": 1.0, "confidence": 1.0}},
    "User Testing (UT)":                {"Laboratory Testing (LT)":         {"support": 1.0, "confidence": 1.0}},
    "Approval Gate (AG)":               {"User Testing (UT)":               {"support": 1.0, "confidence": 1.0}},
    "Marketing Plan (MP)":              {"Approval Gate (AG)":              {"support": 1.0, "confidence": 1.0}},
    "Final Launch (FL)":                {"Marketing Plan (MP)":             {"support": 1.0, "confidence": 1.0}}
}

# Succession: equivalent to the combined response & precedence; declared once per pair to avoid duplication
succession = {
    ("Cost Evaluation (CE)", "Prototype Creation (PC)"): {"support": 1.0, "confidence": 1.0},
    ("User Testing (UT)", "Approval Gate (AG)"):         {"support": 1.0, "confidence": 1.0},
    ("Marketing Plan (MP)", "Final Launch (FL)"):        {"support": 1.0, "confidence": 1.0}
}

###############################################################################

# Alternate variants: prevent activities from appearing again until target occurs
altresponse = {
    "Laboratory Testing (LT)": {"User Testing (UT)": {"support": 1.0, "confidence": 1.0}},
    "Marketing Plan (MP)":     {"Final Launch (FL)": {"support": 1.0, "confidence": 1.0}}
}

altprecedence = {
    "User Testing (UT)":  {"Laboratory Testing (LT)":  {"support": 1.0, "confidence": 1.0}},
    "Approval Gate (AG)": {"User Testing (UT)":        {"support": 1.0, "confidence": 1.0}},
    "Final Launch (FL)":  {"Marketing Plan (MP)":      {"support": 1.0, "confidence": 1.0}}
}

altsuccession = {
    ("Laboratory Testing (LT)", "User Testing (UT)"): {"support": 1.0, "confidence": 1.0},
    ("Marketing Plan (MP)", "Final Launch (FL)"):     {"support": 1.0, "confidence": 1.0}
}

###############################################################################

# Chain variants (next step must immediately follow)
chainresponse   = {}
chainprecedence = {}
chainsuccession = {}

###############################################################################

# Mutual exclusion / forbidden successors
noncoexistence     = {("Design Draft (DD)", "Final Launch (FL)"): {"support": 1.0, "confidence": 1.0}}
nonsuccession      = {}
nonchainsuccession = {}


###############################################################################
# Final DECLARE model
###############################################################################
DECLARE_MODEL = {
    'existence':            existence,
    'absence':              absence,
    'exactly_one':          exactly_one,
    'init':                 init,
    'responded_existence':  responded_existence,
    'coexistence':          coexistence,
    'response':             response,
    'precedence':           precedence,
    'succession':           succession,
    'altresponse':          altresponse,
    'altprecedence':        altprecedence,
    'altsuccession':        altsuccession,
    'chainresponse':        chainresponse,
    'chainprecedence':      chainprecedence,
    'chainsuccession':      chainsuccession,
    'noncoexistence':       noncoexistence,
    'nonsuccession':        nonsuccession,
    'nonchainsuccession':   nonchainsuccession
}
```