Hereâ€™s the DuckDB SQL query for your task:

```sql
-- Step 1: Extract ordered sequences of activities for each case
WITH ordered_cases AS (
    SELECT
        case_id,
        STRING_AGG(activity, '->' ORDER BY timestamp) AS activity_sequence
    FROM
        event_log
    GROUP BY
        case_id
),

-- Step 2: Group by activity sequence and count cases per variant
variant_counts AS (
    SELECT
        activity_sequence,
        COUNT(*) AS case_count
    FROM
        ordered_cases
    GROUP BY
        activity_sequence
    ORDER BY
        case_count DESC
),

-- Step 3: Determine top K variants
top_k_variants AS (
    SELECT
        activity_sequence
    FROM
        variant_counts
    LIMIT K -- Replace K with the desired number of top variants
),

-- Step 4: Filter down to cases matching the top K variants
filtered_cases AS (
    SELECT
        oc.case_id
    FROM
        ordered_cases oc
    INNER JOIN
        top_k_variants tkv
    ON
        oc.activity_sequence = tkv.activity_sequence
),

-- Step 5: Return events from the original event log for the filtered cases
filtered_events AS (
    SELECT
        el.*
    FROM
        event_log el
    INNER JOIN
        filtered_cases fc
    ON
        el.case_id = fc.case_id
)
SELECT
    *
FROM
    filtered_events;
```

### Explanation of the Query:
1. **Extracting Activity Sequences:**  
   The `STRING_AGG` function is used to concatenate activities in timestamp order for each `case_id`, resulting in a unique sequence for each process instance.

2. **Counting and Sorting Variants:**  
   Group the results by the activity sequence and count how many cases belong to each variant. Sort by the frequency (`case_count`) in descending order.

3. **Identifying Top K Variants:**  
   Use `LIMIT K` to select only the top K most frequent activity sequences.

4. **Filtering Cases by Top Variants:**  
   Join the cases from `ordered_cases` with `top_k_variants` to keep only the cases that match the top K variants.

5. **Returning Relevant Events:**  
   Join the filtered cases back to the original event log to retrieve all events corresponding to those cases.

Replace `K` with the desired number of top variants to make this query functional.