**Solution:**

Below is a concise yet fully-featured DuckDB SQL block that carries out the requested work in **one self-contained query**.  
The two occurrences of **`?`** (lines 6 and 21) are convenience placeholders; when you run the query just replace them with the desired integer **K**.

```sql
-- ============================================================
-- 1)  Build one row per case that contains the ordered sequence
--     of its activities (the 'variant').
-- 2)  Rank those variants by their frequency.
-- 3)  Keep only the cases that belong to the TOP-K variants.
-- 4)  Return every event corresponding to the surviving cases.
-- ============================================================
WITH

/* Step 1: construct the activity sequence for every case */
ordered AS (
    SELECT case_id,
           string_agg(activity, '  ' ORDER BY timestamp)  AS variant
    FROM   event_log
    GROUP  BY case_id
),

/* Step 2: how frequent is each variant?                         */
/* DOLIST aggregate keeps the groups in the order they appeared. */
variant_counts AS (
    SELECT variant,
           count(*)                          AS cases_cnt
    FROM     ordered
    GROUP BY variant
),

/* Step 3: keep only the TOP-K variants (ties broken arbitrarily) */
top_variants AS (
    SELECT variant
    FROM   variant_counts
    ORDER  BY cases_cnt DESC
    LIMIT  ?  --  <-- supply the desired K here (e.g., 5)
),

/* Step 4: find the cases whose variants survived the cut */
filtered_cases AS (
    SELECT o.case_id
    FROM   ordered  o
    JOIN   top_variants  tv USING (variant)
)

/* Step 5: return the original events that belong to the filtered cases,
           keeping the original order  */
SELECT e.*
FROM   event_log e
JOIN   filtered_cases fc
       ON e.case_id = fc.case_id
ORDER  BY e.case_id,
          e.timestamp;
```

**Usage:**

Replace the two **`?`**
1. inside `LIMIT ?` (line 21) with the integer value of **K**, or
2. better, keep the question mark and supply the parameter through your driver / client (`... WHERE ? = 5`).