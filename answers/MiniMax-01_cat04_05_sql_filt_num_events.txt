To achieve the task of filtering out cases with more than six events and returning only the events from cases that have six or fewer events, you can use the following DuckDB SQL query:

```sql
SELECT *
FROM event_log
WHERE case_id IN (
    SELECT case_id
    FROM event_log
    GROUP BY case_id
    HAVING COUNT(*) <= 6
);
```

### Explanation:

1. **Subquery (`SELECT case_id FROM event_log GROUP BY case_id HAVING COUNT(*) <= 6`):**
   - This part of the query groups the `event_log` table by `case_id`.
   - The `HAVING COUNT(*) <= 6` clause filters the groups to include only those `case_id`s that have six or fewer events.
   - The result of this subquery is a list of `case_id`s that meet the criteria of having six or fewer events.

2. **Main Query (`SELECT * FROM event_log WHERE case_id IN (...)`):**
   - The main query selects all columns from the `event_log` table.
   - The `WHERE case_id IN (...)` clause ensures that only the events with `case_id`s that are returned by the subquery are included in the final result.
   - This effectively filters out any cases that have more than six events, as those `case_id`s are not present in the subquery's result.

### Alternative Approach:

Alternatively, you can use a `JOIN` to achieve the same result:

```sql
SELECT el.*
FROM event_log el
JOIN (
    SELECT case_id
    FROM event_log
    GROUP BY case_id
    HAVING COUNT(*) <= 6
) filtered_cases
ON el.case_id = filtered_cases.case_id;
```

### Explanation of the Alternative Approach:

1. **Subquery (`SELECT case_id FROM event_log GROUP BY case_id HAVING COUNT(*) <= 6`):**
   - This subquery is identical to the one in the first approach and retrieves the `case_id`s with six or fewer events.

2. **Main Query (`SELECT el.* FROM event_log el JOIN (...)`):**
   - The `JOIN` operation combines the `event_log` table with the results of the subquery based on the `case_id`.
   - This ensures that only the events belonging to the filtered `case_id`s are included in the final result.

Both approaches are valid and will yield the same result. You can choose the one that best fits your coding style or specific use case.