```python
from pm4py.objects.petri_net.obj import PetriNet, Marking
from pm4py.objects.petri_net.utils import petri_utils

# Initialize a new Petri net with the name 'InsuranceClaimManagement'
insurance_net = PetriNet(name="InsuranceClaimManagement")

# Define places (states) in the Petri net
start_place = insurance_net.places.add("Start")  # New claim arriving
cr_place = insurance_net.places.add("ClaimRegistration")
dv_place = insurance_net.places.add("DocumentVerification")
rds_place = insurance_net.places.add("ReDocumentSubmission")
fc_place = insurance_net.places.add("FraudCheck")
ii_place = insurance_net.places.add("InDepthInvestigation")
ca_place = insurance_net.places.add("ClaimAssessment")
ap_place = insurance_net.places.add("Approval")
p_place = insurance_net.places.add("Payment")
n_place = insurance_net.places.add("Notification")
cl_place = insurance_net.places.add("Closure")
end_place = insurance_net.places.add("End")

# Define transitions (activities) in the Petri net
cr_trans = insurance_net.transitions.add("ClaimRegistration", label="CR")
dv_trans = insurance_net.transitions.add("DocumentVerification", label="DV")
rds_trans = insurance_net.transitions.add("ReDocumentSubmission", label="RDS")
fc_trans = insurance_net.transitions.add("FraudCheck", label="FC")
ii_trans = insurance_net.transitions.add("InDepthInvestigation", label="II")
ca_trans = insurance_net.transitions.add("ClaimAssessment", label="CA")
ap_trans = insurance_net.transitions.add("Approval", label="AP")
p_trans = insurance_net.transitions.add("Payment", label="P")
n_trans = insurance_net.transitions.add("Notification", label="N")
cl_trans = insurance_net.transitions.add("Closure", label="CL")

# Add arcs connecting places and transitions
petri_utils.add_arc_from_to(start_place, cr_trans, insurance_net)
petri_utils.add_arc_from_to(cr_trans, dv_trans, insurance_net)
petri_utils.add_arc_from_to(dv_trans, rds_trans, insurance_net)
petri_utils.add_arc_from_to(rds_trans, fc_trans, insurance_net)
petri_utils.add_arc_from_to(fc_trans, ii_trans, insurance_net)
petri_utils.add_arc_from_to(ii_trans, ca_trans, insurance_net)
petri_utils.add_arc_from_to(ca_trans, ap_trans, insurance_net)
petri_utils.add_arc_from_to(ap_trans, p_trans, insurance_net)
petri_utils.add_arc_from_to(p_trans, n_trans, insurance_net)
petri_utils.add_arc_from_to(n_trans, cl_trans, insurance_net)
petri_utils.add_arc_from_to(cl_trans, end_place, insurance_net)

# Add loops between DV and RDS for re-submission cases
petri_utils.add_arc_from_to(dv_trans, dv_trans, insurance_net, inscription=1)
petri_utils.add_arc_from_to(rds_trans, rds_trans, insurance_net, inscription=1)

# Add loops between FC and II for repeated investigations
petri_utils.add_arc_from_to(fc_trans, ii_trans, insurance_net, inscription=1)
petri_utils.add_arc_from_to(ii_trans, fc_trans, insurance_net, inscription=1)

# Define initial marking (im): a token at 'Start' place
im = Marking()
im[start_place] = 1

# Define final marking (fm): a token at 'End' place
fm = Marking()
fm[end_place] = 1
```

This Petri net models the described insurance claim management process. It includes places for each major state in the process and transitions that represent the activities. The arc connections reflect the logical flow of the process, including loops for re-submission (DV to RDS) and repeated investigations (FC to II). The initial marking (`im`) places a token at the 'Start' place, signifying the arrival of a new claim. The final marking (`fm`) has a token in the 'End' place, representing a closed claim.