Here's a DuckDB SQL solution that addresses all the requirements:

```sql
WITH sequence_cases AS (
    SELECT 
        e1.case_id
    FROM 
        event_log e1
    JOIN 
        event_log e2 ON e1.case_id = e2.case_id 
        AND e2.timestamp > e1.timestamp
    JOIN 
        event_log e3 ON e2.case_id = e3.case_id 
        AND e3.timestamp > e2.timestamp
    WHERE 
        e1.activity = 'Approve Purchase Requisition'
        AND e2.activity = 'Create Order'
        AND e3.activity = 'Confirm Order'
        -- Ensure no other events between these in the sequence
        AND NOT EXISTS (
            SELECT 1 
            FROM event_log e4 
            WHERE e4.case_id = e1.case_id 
            AND e4.timestamp > e1.timestamp 
            AND e4.timestamp < e2.timestamp
        )
        AND NOT EXISTS (
            SELECT 1 
            FROM event_log e5 
            WHERE e5.case_id = e1.case_id 
            AND e5.timestamp > e2.timestamp 
            AND e5.timestamp < e3.timestamp
        )
        -- Check time between Create Order and Confirm Order
        AND TIMESTAMP_DIFF('day', e2.timestamp, e3.timestamp) > 5
)
SELECT 
    * 
FROM 
    event_log
WHERE 
    case_id NOT IN (SELECT case_id FROM sequence_cases);
```

Let's break down the solution:

1. **Sequence Detection**:
   - The CTE `sequence_cases` uses multiple self-joins on `event_log` to find cases with the specific sequence of activities.
   - `NOT EXISTS` subqueries ensure no other events exist between the specified activities.

2. **Time Condition**:
   - `TIMESTAMP_DIFF('day', e2.timestamp, e3.timestamp) > 5` checks if the time between 'Create Order' and 'Confirm Order' is more than 5 days.

3. **Filtering**:
   - The final `SELECT` filters out all events from cases that match both the sequence and time condition.

Key points:
- Uses DuckDB's `TIMESTAMP_DIFF` function for date calculation
- Employs a Common Table Expression (CTE) to identify problematic cases
- Ensures no intermediate events disrupt the exact sequence
- Returns events only from cases not meeting the specified criteria

This solution provides a robust way to filter out cases with the specific activity sequence and time condition while returning all other events.

Time Complexity: O(n²) due to the nested exists checks.
Space Complexity: O(n) for storing the sequence_cases CTE.