To construct the Log Skeleton for the given order fulfillment process, we need to define the constraints based on the activities involved. Here's the Python dictionary representing the Log Skeleton:

```python
log_skeleton = {
    'equivalence': set(),
    'always_before': {
        ('RO', 'CA'),
        ('CA', 'RI'),
        ('RI', 'PI'),
        ('PI', 'QC'),
        ('QC', 'PO'),
        ('PO', 'GSL'),
        ('GSL', 'D'),
        ('D', 'IC'),
        ('IC', 'RP')
    },
    'always_after': set(),
    'never_together': set(),
    'activ_freq': {
        'RO': {1},
        'CA': {1},
        'RI': {1},
        'PI': {1},
        'QC': {1},
        'PO': {1},
        'GSL': {1},
        'D': {1},
        'IC': {1},
        'RP': {1}
    },
    'directly_follows': {
        ('RO', 'CA'),
        ('CA', 'RI'),
        ('RI', 'PI'),
        ('PI', 'QC'),
        ('QC', 'PO'),
        ('PO', 'GSL'),
        ('GSL', 'D'),
        ('D', 'IC'),
        ('IC', 'RP')
    }
}
```

### Explanation:

1. **Equivalence:** There are no activities that must occur the same number of times, so this set is empty.
2. **Always Before:** This set contains pairs of activities where the first activity must occur before the second activity. For example, `('RO', 'CA')` means "Receive Order" must occur before "Check Availability".
3. **Always After:** There are no activities that must occur after another activity in a non-immediate sense, so this set is empty.
4. **Never Together:** There are no activities that cannot co-exist inside the same case, so this set is empty.
5. **Activity Occurrences:** Each activity occurs exactly once in a case, so the dictionary maps each activity to the set `{1}`.
6. **Directly-Follows Constraints:** This set contains pairs of activities where the first activity must be immediately followed by the second activity. For example, `('RO', 'CA')` means "Receive Order" must be immediately followed by "Check Availability".

This Log Skeleton ensures that the order fulfillment process follows a strict sequence of activities, with each activity occurring exactly once in the correct order.