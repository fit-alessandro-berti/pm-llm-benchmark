Use the following DuckDB SQL. Replace :K with the desired number of top variants (or set K directly, e.g. 5). This query:

- builds the ordered activity sequence per case,
- counts cases per sequence (variant) and picks the top K by frequency,
- returns all events belonging only to cases whose sequence is in those top K variants.

Query:

WITH case_seq AS (
  -- 1) build ordered activity sequence per case
  SELECT
    case_id,
    LISTAGG(activity, '->') WITHIN GROUP (ORDER BY timestamp, activity) AS variant
  FROM event_log
  GROUP BY case_id
),
top_variants AS (
  -- 2) count cases per variant and take top K
  SELECT
    variant,
    COUNT(*) AS case_count
  FROM case_seq
  GROUP BY variant
  ORDER BY case_count DESC
  LIMIT :K      -- replace :K (e.g. 5) with desired number
),
selected_cases AS (
  -- 3) select case_ids that belong to the top K variants
  SELECT cs.case_id
  FROM case_seq cs
  JOIN top_variants tv ON cs.variant = tv.variant
)
-- 4) return all events for the selected cases
SELECT el.*
FROM event_log el
JOIN selected_cases sc ON el.case_id = sc.case_id
ORDER BY el.case_id, el.timestamp;

Notes:
- LISTAGG(... ) WITHIN GROUP (ORDER BY ...) produces the ordered activity sequence per case.
- The tie-breaker ORDER BY includes activity after timestamp to ensure deterministic ordering for identical timestamps; adjust as needed (e.g., include an event id if available).