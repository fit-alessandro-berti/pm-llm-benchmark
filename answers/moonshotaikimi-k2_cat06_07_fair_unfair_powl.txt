Below are two complete POWL models that mirror the central text.

-	1st model keeps the bias-introducing XOR choice.  
-	2nd model removes it; every applicant follows the same path.

Both preserve non-biased behaviour such as the resume-data loop and the post-mandatory skill gate.

------------------------------------------------------------
POWL Model 1 – with UNFAIR branch (CommunityAffiliationCheck)
------------------------------------------------------------
from pm4py.objects.powl.obj import Transition, SilentTransition, StrictPartialOrder, OperatorPOWL
from pm4py.objects.process_tree.obj import Operator

# Activities
ReceiveApplication        = Transition("ReceiveApplication")
DataCompletenessCheck     = Transition("DataCompletenessCheck")
RequestMoreInfo           = Transition("RequestMoreInfo")
SkillAssessment           = Transition("SkillAssessment")
CulturalFitCheck          = Transition("CulturalFitCheck")
CommunityAffiliationCheck = Transition("CommunityAffiliationCheck")
ManagerialReview          = Transition("ManagerialReview")
FinalDecision             = Transition("FinalDecision")

# Resume-data loop    *( DataCompletenessCheck, RequestMoreInfo )
loop_resume = OperatorPOWL(
    operator=Operator.LOOP,
    children=[DataCompletenessCheck, RequestMoreInfo]
)

# After successful resume, skill check must run BEFORE any next step.
# Then an exclusive XOR choice:
xor_branch = OperatorPOWL(
    operator=Operator.XOR,
    children=[CommunityAffiliationCheck, CulturalFitCheck]
)

root = StrictPartialOrder(nodes=[
    ReceiveApplication,
    loop_resume,
    SkillAssessment,
    xor_branch,
    ManagerialReview,
    FinalDecision
])

# Order constraints
root.order.add_edges_from([
    (ReceiveApplication, loop_resume),    # start with loop
    (loop_resume, SkillAssessment),       # after loop, test skills
    (SkillAssessment, xor_branch),        # XOR pivot
    (xor_branch, ManagerialReview),       # whatever path, move on
    (ManagerialReview, FinalDecision)     # final gate
])

------------------------------------------------------------
POWL Model 2 – NO unfair branch; same CulturalFit for all
------------------------------------------------------------
from pm4py.objects.powl.obj import Transition, SilentTransition, StrictPartialOrder, OperatorPOWL
from pm4py.objects.process_tree.obj import Operator

# Activities (same labels)
ReceiveApplication    = Transition("ReceiveApplication")
DataCompletenessCheck = Transition("DataCompletenessCheck")
RequestMoreInfo       = Transition("RequestMoreInfo")
SkillAssessment       = Transition("SkillAssessment")
CulturalFitCheck      = Transition("CulturalFitCheck")   # single path only
ManagerialReview      = Transition("ManagerialReview")
FinalDecision         = Transition("FinalDecision")

# Resume-data loop
loop_resume = OperatorPOWL(
    operator=Operator.LOOP,
    children=[DataCompletenessCheck, RequestMoreInfo]
)

root = StrictPartialOrder(nodes=[
    ReceiveApplication,
    loop_resume,
    SkillAssessment,
    CulturalFitCheck,
    ManagerialReview,
    FinalDecision
])

# Order constraints – no XOR, sequential
root.order.add_edges_from([
    (ReceiveApplication, loop_resume),
    (loop_resume, SkillAssessment),
    (SkillAssessment, CulturalFitCheck),
    (CulturalFitCheck, ManagerialReview),
    (ManagerialReview, FinalDecision)
])