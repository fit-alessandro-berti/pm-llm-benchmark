To achieve the task, we need to follow a series of steps in DuckDB SQL. Here's a detailed breakdown of the query:

1. **Extract the ordered sequence of activities per case.**
2. **Group cases by their complete activity sequence to identify unique process variants.**
3. **Count how many cases correspond to each variant and determine the top K variants by their frequency.**
4. **Return all events from the original event log that belong only to cases which are part of these top K variants.**

Here's the complete DuckDB SQL query to accomplish this:

```sql
WITH ordered_activities AS (
    SELECT
        case_id,
        LIST_AGG(activity ORDER BY timestamp) AS activity_sequence
    FROM
        event_log
    GROUP BY
        case_id
),
variant_counts AS (
    SELECT
        activity_sequence,
        COUNT(*) AS case_count
    FROM
        ordered_activities
    GROUP BY
        activity_sequence
),
top_k_variants AS (
    SELECT
        activity_sequence
    FROM
        variant_counts
    ORDER BY
        case_count DESC
    LIMIT K
)
SELECT
    e.*
FROM
    event_log e
JOIN
    ordered_activities oa ON e.case_id = oa.case_id
JOIN
    top_k_variants tkv ON oa.activity_sequence = tkv.activity_sequence
ORDER BY
    e.case_id, e.timestamp;
```

### Explanation:

1. **ordered_activities CTE:**
   - This Common Table Expression (CTE) extracts the ordered sequence of activities for each `case_id` by using the `LIST_AGG` function with `ORDER BY timestamp`.

2. **variant_counts CTE:**
   - This CTE groups the cases by their complete activity sequence and counts how many cases correspond to each variant.

3. **top_k_variants CTE:**
   - This CTE selects the top K variants by their frequency, ordered by `case_count` in descending order and limited to K rows.

4. **Final SELECT:**
   - The final query joins the original `event_log` with the `ordered_activities` and `top_k_variants` to filter down to the cases belonging to the top K variants.
   - It returns all events from the original event log that belong only to cases which are part of these top K variants, ordered by `case_id` and `timestamp`.

### Note:
- Replace `K` with the desired number of top variants you want to consider.
- Ensure that the `LIST_AGG` function is supported in your version of DuckDB. If not, you may need to use an alternative method to concatenate the activities in order.