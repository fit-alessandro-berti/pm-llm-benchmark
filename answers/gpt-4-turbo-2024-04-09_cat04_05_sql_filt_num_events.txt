To fulfill the requirements outlined in the prompt, you need to craft a DuckDB SQL query that performs the following operations:
1. First, compute the number of events associated with each `case_id`.
2. Then, filter out those `case_id`s where the count of events is more than six.
3. Finally, select all the rows (events) from those `case_id`s that have six or fewer events.

Here is how you could write this SQL query:

```sql
WITH CaseCounts AS (
    -- Calculate the number of events per case
    SELECT case_id, COUNT(*) AS event_count
    FROM event_log
    GROUP BY case_id
),
FilteredCases AS (
    -- Filter out cases with more than six events
    SELECT case_id
    FROM CaseCounts
    WHERE event_count <= 6
)
-- Select events from the remaining cases
SELECT e.*
FROM event_log e
INNER JOIN FilteredCases fc ON e.case_id = fc.case_id
ORDER BY e.case_id, e.timestamp;
```

### Explanation of the Query:
1. **Subquery `CaseCounts`**: This part of the query computes the total number of events (`COUNT(*)`) for each unique `case_id` in the `event_log` table. The results are grouped by `case_id`, producing a summary table that lists each case along with its corresponding count of events.

2. **Subquery `FilteredCases`**: Here, the cases with an event count of more than six are excluded. This is achieved by applying a `WHERE` filter on the `CaseCounts` subquery results, retaining only those rows where `event_count` is less than or equal to six.

3. **Final Selection and Join**: The main query retrieves all columns from the original `event_log` table where the `case_id` matches those in the `FilteredCases` list. It uses an `INNER JOIN` to ensure that only the `case_id`s from `FilteredCases` are included. The results are ordered by `case_id` and `timestamp` to maintain a logical sequence of events within each case.

This SQL is designed to run efficiently in DuckDB and correctly isolates cases according to the specified criteria, returning the detailed event rows for appropriate cases while ensuring the exclusion of cases with excessive number of events.