To solve this problem, we need to identify and exclude cases that meet specific criteria from an event log. The criteria are: a case must contain a sequence of three consecutive activities ('Approve Purchase Requisition', 'Create Order', 'Confirm Order') with the time between 'Create Order' and 'Confirm Order' exceeding 5 days. The solution involves using window functions to detect the required sequence and timing, then excluding those cases from the final result.

### Approach
1. **Identify Excluded Cases**: Use window functions to check for consecutive activities and compute the time difference between the relevant events.
2. **Filter Out Excluded Cases**: Retrieve all events from the log, excluding those belonging to the identified cases.

### Solution Code
```sql
WITH excluded_cases AS (
    SELECT DISTINCT case_id
    FROM (
        SELECT 
            case_id,
            activity,
            LEAD(activity, 1) OVER (PARTITION BY case_id ORDER BY timestamp) AS next_activity,
            LEAD(activity, 2) OVER (PARTITION BY case_id ORDER BY timestamp) AS next_next_activity,
            LEAD(timestamp, 1) OVER (PARTITION BY case_id ORDER BY timestamp) AS create_order_time,
            LEAD(timestamp, 2) OVER (PARTITION BY case_id ORDER BY timestamp) AS confirm_order_time
        FROM event_log
    ) sub
    WHERE 
        activity = 'Approve Purchase Requisition' 
        AND next_activity = 'Create Order'
        AND next_next_activity = 'Confirm Order'
        AND (confirm_order_time - create_order_time) > INTERVAL '5 days'
)
SELECT e.*
FROM event_log e
LEFT JOIN excluded_cases ex ON e.case_id = ex.case_id
WHERE ex.case_id IS NULL;
```

### Explanation
1. **Window Functions**: The inner subquery uses `LEAD` to look ahead at the next two activities and their timestamps for each event. This helps identify consecutive activities and measure the time between them.
2. **Filtering Conditions**: The WHERE clause in the subquery checks for the exact sequence of activities and ensures the time between 'Create Order' and 'Confirm Order' exceeds 5 days.
3. **Excluding Cases**: The main query uses a LEFT JOIN to exclude cases identified in the `excluded_cases` CTE, returning all other events from the log.

This approach efficiently identifies and excludes the specified cases while ensuring the result set includes all other events from the original log.