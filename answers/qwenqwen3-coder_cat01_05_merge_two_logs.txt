### **Merged Event Log: Order#1234 Fulfillment Process**

---

| Timestamp (Primary)      | Event Type / Name       | Order ID     | User ID | Resource ID | Notes                            | Source System |
|--------------------------|-------------------------|--------------|---------|-------------|----------------------------------|---------------|
| 2023-10-10T09:59:58Z     | Order Received          | Order#1234   | u45     | r10         | Event captured at warehouse system | B (primary)   |
| 2023-10-10T10:01:29Z     | Order Validated         | Order#1234   | u12     | r10         | Cross-check inventory            | B (primary)   |
| 2023-10-10T10:02:00Z     | Payment Processed       | Order#1234   | u12     | r99         | Payment gateway delay            | A + B         |
| 2023-10-10T10:03:00Z     | Quality Check           | Order#1234   | u45     | r11         | Random inspection                | B only        |
| 2023-10-10T10:05:00Z     | Item Shipped            | Order#1234   | u45     | r10         | Package handed to courier        | A + B         |
| 2023-10-10T10:20:00Z     | Item Delivered          | Order#1234   | -       | -           | -                                | A only        |

---

## **Explanation of Matching and Integration**

### **1. Alignment Strategy**

We matched events using the following criteria:
- Same **order_id**
- Timestamps within a **tolerance window of 2 seconds**
- Semantic similarity in **event types**, despite naming differences

When events from both systems matched:
- We merged them into a single record, preferring the **timestamp from Log B** (higher granularity) when available.
- All attributes from both logs were included.
- Conflicts in naming were resolved by adopting the more descriptive or standardized version from either system.

---

### **2. Detailed Event Mapping**

####  **Matched Events**

| Log A Event                  | Log B Event              | Match Decision Reasoning |
|------------------------------|---------------------------|---------------------------|
| `2023-10-10T10:00:00Z, Order Received` | `2023-10-10T09:59:58Z, OrderReceived` | Within 2-second tolerance; semantic match |
| `2023-10-10T10:01:30Z, Order Validated` | `2023-10-10T10:01:29Z, OrderValidation` | Identical semantics and within tolerance |
| `2023-10-10T10:02:00Z, Payment Processed` | `2023-10-10T10:02:05Z, PaymentCheck` | Close timing; semantically related; merged with Log A timestamp as primary |
| `2023-10-10T10:05:00Z, Item Shipped` | `2023-10-10T10:05:02Z, Shipping` | Within tolerance; same meaning |

> For the merged events, we selected the **more precise timestamp from Log B** for alignment purposes but retained the **semantically clearer names from Log A** where applicable.

---

### **3. Unmatched Events**

####  **Only in Log B**
- `2023-10-10T10:03:00Z, Quality Check`  
  - No corresponding event in Log A.
  - Included as-is with full attributes from Log B.

####  **Only in Log A**
- `2023-10-10T10:20:00Z, Item Delivered`  
  - Not present in Log B.
  - Included as-is, indicating it originates solely from System A.

---

### **4. Conflict Resolution Summary**

| Aspect                        | Decision                                                                 |
|------------------------------|--------------------------------------------------------------------------|
| **Timestamp Tolerance**       | ±2 seconds used for matching                                             |
| **Naming Conflicts**          | Used descriptive names from Log A; Log B names retained if more precise  |
| **Primary Timestamp Source**  | Preferred Log B due to better granularity                                |
| **Missing Attributes**        | Filled with `-` or left blank                                            |
| **Non-overlapping Events**    | Included as-is, marked by source system                                  |

---

### **Conclusion**

The merged log presents a unified, enriched view of the order fulfillment process by combining data from two disparate systems. It preserves the timeline fidelity of the more granular system while incorporating all available metadata. This approach supports accurate process mining, audit trails, and operational analysis.