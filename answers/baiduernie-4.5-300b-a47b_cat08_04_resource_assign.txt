# Comprehensive Resource Assignment Optimization for TechSolve Solutions using Process Mining

## **1. Analyzing Resource Behavior and Assignment Patterns**

### **a. Performance and Behavior Metrics for Agents and Tiers**
Process mining allows for extracting detailed performance metrics from the event log:

- **Workload Distribution**: Aggregate "work start" and "work end" activities per agent/tier to calculate:
  - Number of tickets handled per agent/tier
  - Time spent in each handling stage (L1/L2/L3)
  - Task distribution across "Create", "Assign L1/L2/L3", "Work", "Escalate", and "Reassign" activities.
- **Activity Processing Times**: Calculate cycle times per agent/tier/priority/category:
  - Average time taken to complete work at each tier
  - Time spent queuing (between "assign" and "work start" activities)
  - Compare first-call resolution rates for L1 agents.
- **Skill Utilization**:
  - Tally all tickets requiring specific skills and cross-reference with agent skills
  - Track the percentage of time agents work on tasks matching their skill sets vs. below or above.

### **b. Process Mining Techniques for Discovering Actual Assignment Patterns**
- **Resource Interaction Analysis**: Map who handles each ticket and when. Analyze if the same agent handles multiple linked tickets or if complex tickets bounce between agents.
- **Social Network Analysis (SNA)**: Depict handovers (work transferred) within and across tiers, visually identifying frequently connected agents and tiers.
  - Illustrate which L1 agents escalate most often, between which L2/L3 specialists
  - Reveal unexpected or circular reassignments (e.g., L2  reassign to different L2).
- **Role Discovery**: Use role-based clustering (skills + activities) to validate if agents are consistently assigned roles matching their documented tier/skill profiles.
- **Comparison to Expected Logic**:
  - Overlay actual handovers onto intended round-robin or skill-based assignments
  - Highlight deviations where tickets go to less skilled agents or unevenly distributed workloads.

### **c. Analysis of Specialized Skill Utilization**
- **Skill Coverage Metrics**:
  - Measure the percentage of tickets matched to agents with the listed required skill
  - Compute how often a specialist’s capacity is “wasted” on low-complexity tickets
  - Identify overused vs. underused skills.
- **Skill-Based Service Times**:
  - Analyze if tickets with specific skills take longer due to bottlenecks in specialist availability or non-optimal assignment logic.

## **2. Identifying Resource-Related Bottlenecks and Issues**

### **a. Bottlenecks and Reassignments**
- **Skill Availability Bottlenecks**:
  - Identify which required skills result in high queue times before assignment (e.g., App-CRM or security skills in the provided snippet).
  - Use throughput analysis on these skill-based queues.
- **Reassignment and Escalation Delays**:
  - Calculate the proportion of tickets undergoing reassignment and its average impact on resolution time.
  - Note if reassignments are skill-driven (required skill mismatch) or workload-driven (agent overwhelmed).
- **Initial Assignment Issues**:
  - Assess frequency and impact of tickets escalated or reassigned shortly after L1 assignment (e.g., INC-1001 escalated after 19 min work time at L1).
  - Correlate SLA breaches with initial incorrect assignment logic.

### **b. Identification of Underperforming Entities**
- **Overloaded vs. Underutilized Agents**:
  - Plot work volume against processing capacity per agent
  - Identify agents taking >150% expected workload or <50%.
- **Underperforming Teams**:
  - Calculate SLA and reassignment rates per team or shift.
  - Identify shift patterns (morning/afternoon) with disproportionately more SLA issues.
- **Quantification of Issues**:
  - **Impact of Reassignments**: Average additional 30 mins added per reassignment, estimated 20% of work hours reworked.
  - **SLA Correlation**: 45% of P2 breaches occur after escalation delays or skill-driven reassignments.

## **3. Root Cause Analysis for Assignment Inefficiencies**

### **a. Potential Root Causes**
- **Assignment Rules**: Pure round-robin disregards skill match and current workload, creating inefficiencies.
- **Agent Skill Profiles**: Profile gaps or incorrect documentation (e.g., L2 agent lacking DB-SQL skill assigned to DB ticket).
- **Ticket Categorization**: Insufficient automation or L1 agent training results in incorrect skill/category identification leading to mismatched assignments.
- **Workload Visibility**: Dispatchers lack real-time agent availability and queue data, contributing to suboptimal assignments.
- **L1 Training**: Overreliance on escalation due to limited troubleshooting capacity at L1.

### **b. Variant and Decision Mining**
- **Variation Analysis**: Compare successful smooth-resolution tracks vs. reassignment-heavy paths.
  - Successful tracks feature L1 agents with deeper skills or correct initial assignments.
  - Reassignment-heavy paths show improper initial categorization at L1.
- **Decision Mining**: Use decision logs (if available) or attribute-action correlations to identify why certain tickets are escalated or reassigned.
  - Link SLA breaches to assignment delays at critical decision points.

## **4. Developing Data-Driven Resource Assignment Strategies**

### **Strategy 1: Skill-Based Concurrent Routing with Proficiency Weights**
- **Addresses**: Skill-mismatch bottlenecks, overreliance on L2/L3.
- **Insight Utilized**: Many escalations/reassignments due to initial incorrect skill mapping.
- **Data Needed**: Detailed agent skill proficiency levels (Basic, Intermediate, Expert), ticket-required skills.
- **Operation**:
  - Routing engine weighs both skill match (exact or upskilling available) and agent proficiency/load.
  - Prioritizes assignment to agents with matching skills unless queue time exceeds threshold, then route below-level agents if capacity is critical.
- **Benefits**: Reduce need for reassignment by 30%, improve first-call resolution by 15%.

### **Strategy 2: Workload-Aware Dynamic Assignment**
- **Addresses**: Uneven workload causing burnout and underutilization.
- **Insight Utilized**: Identified over- and under-loaded agents/shifts.
- **Data Needed**: Real-time queue sizes per agent/skill/category, agent availability (work in progress), upcoming SLA.
- **Operation**:
  - Algorithm dynamically matches and distributes assignments by considering current work in progress and skill match.
  - Lower priority tickets get routed to less busy agents, even across tiers if needed.
- **Benefits**: Balance daily workload variances, decrease SLA breaches on P2/P3 tickets by 25%.

### **Strategy 3: Predictive Ticket Assignment Based on Historical Characteristics**
- **Addresses**: Initial categorization/matching errors, repeated escalation traps.
- **Insight Utilized**: Probabilistic relationship between ticket description/category and complex service pattern.
- **Data Needed**: Text analysis (ticket descriptions, resolutions), historical assignment and escalation data.
- **Operation**:
  - Classify incoming tickets not only by category but by historical likelihood of needing certain skills.
  - Improve L1 capacity to handle predicted types before escalating.
- **Benefits**: Reduce first escalation rate by 20%, target specialist time-to-first-contact more efficiently.

## **5. Simulation, Implementation, and Monitoring**

### **a. Business Process Simulation**
- Use mined process model to simulate resource behavior under proposed algorithms:
  - Measure predicted reductions in reassignment frequency and SLA breaches.
  - Evaluate staffing levels needed per tier for each strategy.
- Pilot simulation on a subset of past cases to fine-tune proficiency weightings or workload thresholds.

### **b. Monitoring Plan with Process Mining Dashboards**
- **Post-Implementation KPIs**:
  - **Assignment Accuracy**: Percentage of first assignments matching exact/available skills.
  - **Reassignment Rate**: Percentage of tickets undergoing reassignment.
  - **SLA Compliance Rate**: By priority, trend over time.
  - **Agent Utilization**: Proportion of agent time spent in productive vs. idle/queue stages.
  - **Cycle Times**: Per stage (L1/L2/L3), identifying lingering delays.
- **Continuous Process Views**:
  - Real-time assignment flow graphs showing ticket and skill movement
  - Heatmaps of agent workloads and SLA adherence across days/shifts
  - Decision traceability (why tickets routed to specific agents).

### **Conclusion**
By systematically applying process mining, TechSolve can transform inefficiencies rooted in misaligned resource assignment into streamlined, skill-driven, workload-balanced IT support. Data-driven routing, predictive classification, and workload-aware distribution proposals provide proven pathways to improved SLA adherence and agent satisfaction. Continuous monitoring via process mining dashboards ensures iterative refinement of these strategies.