To achieve the desired query in DuckDB, we need to follow these steps:

1. Identify cases (`case_id`) that contain the specified sequence of three activities in direct succession.
2. Filter those cases where the time elapsed between the 'Create Order' and 'Confirm Order' events is more than 5 days.
3. Exclude these identified cases from the final result set, ensuring that only events from cases not meeting the criteria are returned.

Here is the SQL query to accomplish this:

```sql
WITH SequenceCases AS (
    SELECT
        e1.case_id,
        e1.activity AS activity1,
        e2.activity AS activity2,
        e3.activity AS activity3,
        e1.timestamp AS ts1,
        e2.timestamp AS ts2,
        e3.timestamp AS ts3
    FROM
        event_log e1
    JOIN
        event_log e2 ON e1.case_id = e2.case_id AND e1.timestamp < e2.timestamp
    JOIN
        event_log e3 ON e2.case_id = e3.case_id AND e2.timestamp < e3.timestamp
    WHERE
        e1.activity = 'Approve Purchase Requisition'
        AND e2.activity = 'Create Order'
        AND e3.activity = 'Confirm Order'
        AND NOT EXISTS (
            SELECT 1
            FROM event_log e4
            WHERE e4.case_id = e1.case_id
            AND e4.timestamp > e1.timestamp
            AND e4.timestamp < e2.timestamp
        )
        AND NOT EXISTS (
            SELECT 1
            FROM event_log e5
            WHERE e5.case_id = e1.case_id
            AND e5.timestamp > e2.timestamp
            AND e5.timestamp < e3.timestamp
        )
),
FilteredCases AS (
    SELECT
        case_id
    FROM
        SequenceCases
    WHERE
        e3.timestamp - e2.timestamp > INTERVAL '5 days'
)
SELECT
    el.*
FROM
    event_log el
WHERE
    el.case_id NOT IN (SELECT case_id FROM FilteredCases);
```

Explanation:

1. **SequenceCases CTE:**
   - This Common Table Expression (CTE) identifies cases that contain the sequence 'Approve Purchase Requisition', 'Create Order', and 'Confirm Order' in direct succession.
   - It performs self-joins on the `event_log` table to find the activities in the specified order.
   - The `NOT EXISTS` subqueries ensure that no other events from the same case interfere between the specified activities.

2. **FilteredCases CTE:**
   - This CTE filters the cases identified in `SequenceCases` where the time difference between 'Create Order' and 'Confirm Order' is more than 5 days.

3. **Final SELECT:**
   - The final query selects all events from `event_log` excluding those cases that are in the `FilteredCases` CTE.

This query ensures that only the events from cases that do not meet the specified sequence and timing criteria are returned.