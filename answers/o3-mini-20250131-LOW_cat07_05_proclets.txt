This visualization shows a model of two interacting processes (called “proctlet classes”) in the context of a lab-visit workflow. It is divided into three parts:

1. **(a) Two proctlet classes connected through two channels**  
   - You can think of each “proctlet class” as a self-contained process with its own states and transitions. Here, the two proctlets are:
     - An **Order system** (on the left), which handles a lab visit and manages the order/report workflow.
     - A **Lab test** process (on the right), which receives requests for tests, performs them, and provides results.  
   - The **dotted lines** with small arrow icons between the two processes are the **channels** over which they exchange messages (for example, “Send request,” “Receive request,” “Send results,” “Receive results,” etc.).  
   - Each proctlet has labeled “states” (such as “Lab visit,” “Order entry,” “Judge results,” “Make report,” etc.) and transitions showing how it moves from one state to another when it sends or receives a particular message.

2. **(b) Class diagram containing the two proctlet classes**  
   - This smaller UML-like diagram shows that there are two classes—“Lab visit” and “Lab test”—and it indicates their relationship.  
   - In the figure, “Lab visit” requires one or more “Lab tests” (shown by the notation `1..*`), meaning each lab visit can have multiple tests associated with it.

3. **(c) Example of a performative**  
   - This table illustrates a single message (or “performative”) being exchanged.  
   - It shows details such as:
     - **Time** the message is sent (e.g., 11:00).  
     - **Channel** used (e.g., “Order system”).  
     - **Sender** and **Receivers** (e.g., “Lab visit – HGB John”).  
     - **Speech act** (the kind of action the message represents, such as “Create,” “Request,” etc.).  
     - **Content** (the actual information sent, like “Can you perform an HGB test?”).  
     - **Scope**, **Direction**, and so on.  

Putting it all together, the visualization depicts how two separate but related processes (“Order system” and “Lab test”) coordinate with each other in a lab environment. The **states and transitions** in (a) show the flow of messages and the corresponding steps each process takes. The **class diagram** in (b) shows how the two processes are related at a conceptual level (one lab visit can require multiple tests). Finally, the **performative example** in (c) demonstrates what an actual message exchange looks like in this system—essentially showing how these processes communicate to carry out lab orders and return results.