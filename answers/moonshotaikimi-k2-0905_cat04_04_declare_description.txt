Step-by-step loan journey seen through the DECLARE lens  

1. Customer presses “submit”  
    init forces Receive_Application to be the very first thing that happens in the IT log (no back-dating, no phantom cases).

2. Instant “yes / no / maybe”  
    response: Receive_Application  Preliminary_Credit_Check means the credit-scoring service is invoked automatically before any other human work starts.  
    exactly_one Preliminary_Credit_Check guarantees we do not re-score twice (cost control) and cannot skip the check (regulatory requirement Basel II/III, GDPR fairness).

3. Documentation phase  
    succession Preliminary_Credit_Check  Gather_Additional_Documents says the credit check must complete before the case worker can even open the “docs pending” folder, and once docs are requested the check cannot be withdrawn.  
   Real-world aim: avoid asking honest customers for paperwork when they would fail the score anyway; also prevents loan officers from manipulating the outcome by requesting docs for an already-rejected applicant.

4. Parallel internal work  
    coexistence Gather_Additional_Documents  Authorize_Contract_Terms tells us that the moment we start chasing documents we must also reserve an underwriter’s calendar slot for the eventual sign-off; loosens the timing but guarantees the two tasks meet somewhere in every case (no forgotten underwriting queue).

5. Quality gate  
    precedence Quality_Assurance_Review before Authorize_Contract_Terms and  
    chainsuccession Quality_Assurance_Review  Assemble_Loan_Offer_Package assemble an airtight mini-process:  
     - QA must stamp the offer first;  
     - Immediately after the stamp, the system generates the binding offer package (chain = no other event in between).  
   Motivation: consumer-credit laws give the borrower a 7-day cooling-off period that starts when the “binding offer” is issued; regulators therefore insist that the same offer that reaches the customer has been QA-reviewed.

6. Funding & telling the customer  
    chainresponse Assemble_Loan_Offer_Package  Transfer_Funds: the instant the customer accepts the offer the payment run is triggered without manual touches (STP – straight-through processing).  
    altresponse / altprecedence between Transfer_Funds and Notify_Customer make the two events mutual prerequisites but allow them to happen in either order (e-mail can leave a few milliseconds before or after the SWIFT message).  
    absence Proceed_Without_Compliance makes sure an auditor will never see that forbidden activity in any trace – a guard against “just skip QA this once”.

7. Negative constraints – why the order is bullet-proof  
   - noncoexistence Transfer_Funds vs Receive_Application keeps the money from moving on day 0 while the file is still empty.  
   - nonsuccession Notify_Customer must not be followed later by Preliminary_Credit_Check – once the customer has been told “yes”, the bank cannot quietly reopen and overturn the decision (treat-customer-fairly rule).  
   - nonchainsuccession Authorize_Contract_Terms cannot be directly chased by Notify_Customer; the intermediary tasks (assemble offer, customer acceptance, QA) cannot be bypassed.

What the bank gains – compliance, risk, reputation  
- Basel accords: credit check before any material exposure.  
- GDPR & consumer-credit directives: transparency – the same data used for scoring is reviewed in QA.  
- Fraud: impossible to insert a“ ghost” approved loan because every Transfer_Funds has an immutable chain of predecessors.  
- Audit: exactly one of every mandatory task makes reconciliation trivial.  
- Cost: no duplicate credit checks, no manual “where is the file?” queries.

What would break if a rule were ignored  
1. Skip Preliminary_Credit_Check (disable response constraint)  
    later default would show the bank never assessed affordability – heavy FCA fine, possible criminal “irresponsible lending” charge.

2. Transfer_Funds before Quality_Assurance_Review (circumvent precedence)  
    customer immediately has the money; any error discovered afterwards (wrong interest, wrong amount) cannot be reversed without litigation.

3. Proceed_Without_Compliance actually occurs (absence violated)  
    examiners treat this as an internal-control failure; the entire loan book can be classified “non-compliant”, forcing extra capital provisions.

4. Gather_Additional_Documents happens twice (break exactly_one on Preliminary_Credit_Check but imagine a similar constraint on docs)  
    customer frustration, extra processing cost, possible data-protection complaint because more documents than necessary are stored.

5. Authorize_Contract_Terms executed but Notify_Customer forgotten (break alt relationship)  
    funds sit in suspense account, customer unaware, reputational damage on social media within hours.

In short, the DECLARE map is not an academic exercise; each constraint is a guard rail that keeps the bank inside a narrow corridor bounded by regulation, financial risk and customer expectation. Violating a single rule can cascade into monetary loss, regulatory censure and brand destruction long before the loan is even booked.