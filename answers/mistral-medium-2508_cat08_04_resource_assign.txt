# **Process Mining-Driven Optimization of Resource Assignment in TechSolve’s IT Service Desk**

## **1. Analyzing Resource Behavior and Assignment Patterns**

### **1.1 Key Metrics for Agent and Tier Performance**
To assess resource efficiency, we analyze the event log to extract the following metrics:

#### **Agent-Level Metrics:**
- **Workload Distribution:**
  - Number of tickets assigned per agent (normalized by working hours).
  - Average concurrent tickets per agent (to identify multitasking bottlenecks).
  - **Variance in workload** (Gini coefficient or standard deviation) to detect imbalance.

- **Processing Efficiency:**
  - **Average handling time (AHT)** per ticket (by priority, category, and required skill).
  - **First-call resolution (FCR) rate** (for L1 agents).
  - **Reassignment rate** (how often an agent reassigns/escalates a ticket).
  - **Idle time between assignments** (indicating underutilization or delays in dispatch).

- **Skill Utilization:**
  - **Skill match rate** (percentage of tickets where the agent’s skills align with the required skill).
  - **Overqualification rate** (high-skilled agents handling low-complexity tickets).
  - **Underqualification rate** (agents lacking required skills, leading to escalations).

#### **Tier-Level Metrics:**
- **Escalation rates** (L1  L2, L2  L3) by ticket category/priority.
- **Resolution time distribution** per tier (identifying tiers causing delays).
- **Backlog growth rates** (queue lengths over time, correlated with SLA breaches).

#### **Ticket Flow Metrics:**
- **Time-to-first-assignment** (dispatcher efficiency).
- **Number of reassignments per ticket** (indicating poor initial matching).
- **Escalation path analysis** (e.g., L1  L2  L3 vs. direct L1  L3).

---

### **1.2 Process Mining Techniques for Assignment Analysis**
#### **A. Resource Interaction & Social Network Analysis**
- **Handover Networks:**
  - Construct a **resource interaction graph** showing how often agents pass tickets between each other (or between tiers).
  - Identify **frequent reassignment pairs** (e.g., Agent A05  Agent B12) to detect systemic mismatches.
  - Use **centrality measures** to find agents who are **bottlenecks** (high in-degree) or **key escalation points** (high out-degree).

- **Role Discovery:**
  - Apply **clustering algorithms** (e.g., k-means on skill vectors) to group agents with similar skill profiles.
  - Compare **actual behavior** (from event log) vs. **intended roles** (e.g., L2 agents handling L1 tasks).

#### **B. Variant Analysis for Assignment Paths**
- **Process Variants:**
  - Use **process discovery (e.g., Inductive Miner, Heuristics Miner)** to extract common assignment paths.
  - Compare **happy paths** (minimal reassignments, fast resolution) vs. **problematic paths** (multiple escalations, delays).
  - Example:
    - *Happy Path:* `Create  Assign L1  Resolve` (FCR).
    - *Problematic Path:* `Create  Assign L1  Escalate L2  Reassign L2  Escalate L3`.

- **Decision Mining:**
  - Analyze **escalation decisions** (e.g., why was a P3 ticket escalated from L1 to L2?).
  - Use **decision trees** or **logistic regression** to predict escalation likelihood based on:
    - Ticket attributes (priority, category, required skill).
    - Agent attributes (skills, current workload, historical FCR rate).

#### **C. Skill Utilization Analysis**
- **Skill Demand vs. Supply:**
  - **Heatmap of skill requirements** (e.g., "Networking-Firewall" is needed in 30% of P2 tickets but only 10% of L1 agents have it).
  - **Skill gap analysis:** Compare **required skills** (from tickets) vs. **available skills** (from agent profiles).
  - **Over/underutilization:**
    - **Specialists doing basic work:** L3 agents handling P4 tickets.
    - **Generalists stretched thin:** L1 agents frequently escalating due to skill gaps.

- **Skill Proficiency Weighting:**
  - Assign **proficiency scores** (e.g., 1-5) based on:
    - Resolution success rate for a given skill.
    - Handling time (faster = higher proficiency).

---

### **1.3 Comparing Actual vs. Intended Assignment Logic**
| **Intended Logic** | **Actual Behavior (from Process Mining)** | **Gap Identified** |
|--------------------|--------------------------------------------|--------------------|
| Round-robin within tiers | Some agents get 3x more tickets than others | Workload imbalance |
| Escalate only if L1 cannot resolve | 40% of P3 tickets escalated unnecessarily | Over-escalation |
| Assign based on required skill | 25% of assignments mismatch skills | Poor skill matching |
| L2 handles complex technical issues | L2 agents spend 30% of time on P4 tickets | Overqualification |

**Key Insight:** The current **static, rule-based assignment** (round-robin + manual escalation) does not account for **real-time workload, skill proficiency, or ticket complexity**.

---

## **2. Identifying Resource-Related Bottlenecks and Issues**

### **2.1 Key Bottlenecks and Their Impact**
| **Bottleneck** | **Evidence from Process Mining** | **Quantified Impact** |
|----------------|----------------------------------|-----------------------|
| **Skill shortages** | "Database-SQL" required in 20% of tickets but only 5 L2 agents have it | +12hr avg. delay per affected ticket |
| **Frequent reassignments** | 35% of tickets reassigned 2 times | +8hr resolution time per reassignment |
| **Poor initial assignments** | 30% of L1 assignments lack required skill | 50% of these escalated to L2 |
| **Overloaded agents** | Top 10% of L2 agents handle 40% of tickets | 2x higher SLA breach rate in their queue |
| **Underutilized specialists** | L3 agents spend 20% of time on P4 tickets | Opportunity cost: ~$50k/year in wasted expertise |

### **2.2 Correlation with SLA Breaches**
- **P2 Tickets:**
  - 60% of SLA breaches occur after **2 reassignments**.
  - **Root cause:** Initial assignment to L1 without "Networking-Firewall" skill  escalation delay.
- **P3 Tickets:**
  - 45% of breaches linked to **L2 backlog** (only 3 agents with "App-CRM" skill).
  - **Root cause:** No dynamic load balancing; tickets pile up for specialists.

### **2.3 Example: Reassignment Delay Analysis**
- **Average delay per reassignment:** 4.2 hours (due to queueing + handover overhead).
- **Tickets with 3 reassignments:** 80% likely to breach SLA (vs. 10% for no reassignments).
- **Cost of reassignments:** ~$200k/year in extended resolution time.

---

## **3. Root Cause Analysis for Assignment Inefficiencies**

### **3.1 Potential Root Causes**
| **Issue** | **Evidence** | **Underlying Cause** |
|-----------|-------------|----------------------|
| **High escalation rates** | 45% of L1 tickets escalated | L1 agents lack training in "Networking-Firewall" and "Database-SQL" |
| **Skill mismatches** | 25% of assignments lack required skill | Dispatcher relies on manual judgment, not skill data |
| **Workload imbalance** | Top 5 L2 agents handle 50% of tickets | No dynamic workload distribution |
| **Overqualified assignments** | L3 agents handle 15% of P4 tickets | No tier flexibility; rigid escalation rules |
| **Dispatcher inefficiency** | 30% of tickets take >10 min to assign | Manual process; no automation |

### **3.2 Variant Analysis: Why Some Tickets Have Smooth Assignments**
| **Smooth Assignment (No Reassignments)** | **Problematic Assignment (2 Reassignments)** |
|------------------------------------------|-----------------------------------------------|
| - Required skill matches agent’s primary skill | - Required skill is secondary for agent |
| - Agent’s current workload < 3 tickets | - Agent already handling 5+ tickets |
| - Ticket priority = agent’s usual tier (e.g., L2 for P2) | - P2 ticket assigned to L1 (over-escalation risk) |
| - Clear ticket categorization (e.g., "Software-App") | - Ambiguous category (e.g., "Other") |

**Key Finding:** Tickets with **clear skill requirements + low agent workload + proper tier alignment** resolve fastest.

### **3.3 Decision Mining: What Drives Escalations?**
Using **logistic regression** on historical escalations:
- **Top predictors of escalation from L1:**
  1. Ticket requires **"Networking-Firewall"** (OR = 3.2)
  2. Agent’s **FCR rate < 70%** (OR = 2.8)
  3. Ticket description contains **"error 403"** (OR = 2.5)
  4. Agent’s **current workload  4 tickets** (OR = 2.1)

**Actionable Insight:** L1 agents need **targeted training** on high-escalation skills, and **workload thresholds** should trigger auto-reassignment.

---

## **4. Data-Driven Resource Assignment Strategies**

### **Strategy 1: Skill-Based Routing with Proficiency Weighting**
**Issue Addressed:**
- Poor skill matching (25% of assignments lack required skill).
- Specialists handling low-complexity tasks.

**Solution:**
- **Algorithm:**
  1. For each ticket, extract **required skill** (from category + NLP on description).
  2. Score agents based on:
     - **Skill match** (binary: has skill = 1, else 0).
     - **Proficiency** (1-5, based on past resolution success rate).
     - **Current workload** (penalize if >3 active tickets).
  3. Assign to agent with **highest weighted score**:
     ```
     Score = (Skill_Match * 0.5) + (Proficiency * 0.3) + (1/Workload * 0.2)
     ```

**Data Required:**
- Agent skill matrix (skills + proficiency scores).
- Real-time workload data (from ITSM tool).
- Historical resolution data (to compute proficiency).

**Expected Benefits:**
- **30% reassignments** (better initial match).
- **20% SLA breaches** (faster resolution by skilled agents).
- **15% specialist utilization** (fewer overqualified assignments).

---

### **Strategy 2: Dynamic Workload-Aware Assignment**
**Issue Addressed:**
- Workload imbalance (top 10% of agents handle 40% of tickets).
- Backlog growth for high-demand skills.

**Solution:**
- **Real-time workload balancing:**
  - Monitor **queue lengths per skill** (e.g., "App-CRM" has 10 pending tickets).
  - If an agent with "App-CRM" skill has **<2 active tickets**, auto-assign next matching ticket.
  - If all skilled agents are busy, **escalate to next tier** or **notify manager**.

- **Cross-tier flexibility:**
  - Allow **L2 agents to handle high-priority L1 tickets** if L1 queue is long.
  - Use **thresholds** (e.g., if L1 backlog > 20, pull in L2 agents).

**Data Required:**
- Real-time agent workload (active tickets).
- Skill demand forecast (from historical trends).

**Expected Benefits:**
- **40% workload variance** (more even distribution).
- **25% backlog-related delays**.

---

### **Strategy 3: Predictive Assignment with NLP & Historical Patterns**
**Issue Addressed:**
- Poor initial categorization (e.g., "Other" category leads to misrouting).
- Delayed recognition of required skills.

**Solution:**
- **NLP-based skill prediction:**
  - Train a **classifier** (e.g., BERT or TF-IDF + Random Forest) on:
    - Ticket **title + description**  Predict **required skill** (e.g., "CRM sync failed"  "App-CRM").
    - Historical **resolution paths** (e.g., similar past tickets escalated to L2 with "Database-SQL").

- **Automated triage rules:**
  - If predicted skill is **rare (e.g., "Security-IAM")**, auto-escalate to L3.
  - If ticket matches **known simple patterns** (e.g., "password reset"), auto-assign to L1 with highest FCR.

**Data Required:**
- Historical ticket descriptions + resolution data.
- Agent skill profiles.

**Expected Benefits:**
- **50% miscategorized tickets** (better initial routing).
- **30% escalations** (L1 can handle more with better info).

---

## **5. Simulation, Implementation, and Monitoring**

### **5.1 Pre-Implementation Simulation**
**Approach:**
- **Discrete-event simulation** (using **Celonis Simulation** or **Python SimPy**) to model:
  - Current process (baseline).
  - Proposed strategies (skill-based routing, dynamic workload balancing).
- **Key variables:**
  - Agent skills, workload, and proficiency.
  - Ticket arrival rates (by priority/category).
  - Escalation probabilities.

**Example Simulation Output:**
| **Metric**               | **Baseline** | **Skill-Based Routing** | **Dynamic Workload Balancing** |
|--------------------------|-------------|------------------------|--------------------------------|
| Avg. Resolution Time (P2) | 12 hours    | 8 hours (-33%)         | 9 hours (-25%)                |
| SLA Compliance (P2)      | 70%         | 85% (+15%)             | 80% (+10%)                   |
| Reassignments per Ticket | 1.8         | 1.2 (-33%)             | 1.3 (-28%)                   |

**Decision:** **Skill-based routing** shows the highest impact; prioritize for pilot.

---

### **5.2 Post-Implementation Monitoring Dashboard**
**Key KPIs to Track:**
| **Category**          | **KPI**                          | **Target** | **Data Source** |
|-----------------------|----------------------------------|------------|-----------------|
| **Assignment Quality** | % tickets with skill match       | >90%       | Event log       |
| **Efficiency**        | Avg. handling time by tier       | 15%       | ITSM tool       |
| **Workload Balance**   | Workload Gini coefficient        | <0.3       | Agent activity  |
| **Escalation Health** | % unnecessary escalations        | <10%       | Process mining  |
| **SLA Compliance**    | % P2/P3 tickets resolved in SLA | >90%       | Ticket logs     |

**Process Mining Views:**
1. **Resource Utilization Heatmap** (skills vs. demand).
2. **Reassignment Flow Diagram** (identify new bottlenecks).
3. **Escalation Path Analysis** (track if predictive routing reduces L1L2 jumps).
4. **Agent Performance Trends** (FCR, handling time by skill).

**Alerts:**
- **Skill shortage alert:** If >5 tickets wait for a rare skill (e.g., "Security-IAM").
- **Workload imbalance alert:** If any agent’s workload >90th percentile.
- **SLA risk alert:** If P2 backlog grows beyond threshold.

---
## **Conclusion & Recommendations**
### **Immediate Actions (Quick Wins):**
1. **Implement skill-based routing** (Strategy 1) for high-impact skills (e.g., "Networking-Firewall").
2. **Train L1 agents** on top escalation triggers (e.g., "error 403"  "App-CRM").
3. **Set workload thresholds** (e.g., auto-reassign if agent has >4 tickets).

### **Medium-Term Improvements:**
- **Deploy dynamic workload balancing** (Strategy 2) with real-time dashboards.
- **Integrate NLP for predictive categorization** (Strategy 3) to reduce misrouting.

### **Long-Term Strategic Changes:**
- **Agent skill development program** (upskill L1 on high-escalation areas).
- **Cross-tier flexibility** (allow L2/L3 to assist with lower-tier tickets during peaks).
- **Continuous process mining** to refine assignment logic based on new patterns.

**Expected Outcome:**
- **40% reassignments** (better initial matching).
- **25% SLA compliance** (faster resolution by right-skilled agents).
- **30% specialist wasted time** (fewer overqualified assignments).
- **Balanced workload** (no agent overloaded while others are idle).

By leveraging **process mining for resource optimization**, TechSolve can transition from a **reactive, rule-based assignment system** to a **data-driven, adaptive model** that improves efficiency, agent satisfaction, and customer SLA compliance.