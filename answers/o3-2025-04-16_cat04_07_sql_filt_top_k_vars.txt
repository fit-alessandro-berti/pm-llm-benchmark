Below is a single, selfcontained DuckDB statement that performs every step that was requested.
Replace the placeholder ${K} with the number of variants you want to keep (top 5, top 10, …).

```sql
-- =============================================
-- Identify the top${K} most frequent variants
-- and return ALL events that belong to those
-- variants only.
-- =============================================

WITH
/* 1.  Build the (timeordered) activity sequence for every case  */
case_variants AS (
    SELECT
        case_id,
        /*  string_agg keeps the order supplied in the ORDER BY clause  */
        string_agg(activity, '  ' ORDER BY timestamp) AS variant
    FROM event_log
    GROUP BY case_id
),

/* 2.  Count how many cases follow each variant  */
variant_freq AS (
    SELECT
        variant,
        COUNT(*) AS n_cases
    FROM case_variants
    GROUP BY variant
    ORDER BY n_cases DESC
    LIMIT ${K}                      --  topK variants
),

/* 3.  Keep only the cases whose variant is in the topK set  */
top_cases AS (
    SELECT cv.case_id
    FROM case_variants  cv
    JOIN variant_freq   vf  USING (variant)
)

/* 4.  Return the original event rows belonging to those cases */
SELECT e.*
FROM   event_log AS e
JOIN   top_cases  AS t USING (case_id)
ORDER  BY e.case_id, e.timestamp;
```

What each block does:
1. `case_variants` – concatenates the activities for every `case_id` in ascending `timestamp` order, producing the complete process variant string for that case.
2. `variant_freq` – counts how many cases share each variant and keeps only the top ${K} most frequent ones.
3. `top_cases` – lists all `case_id`s that belong to those top variants.
4. The final `SELECT` – returns every original event for the retained cases; cases whose variant is not in the top ${K} set disappear automatically.