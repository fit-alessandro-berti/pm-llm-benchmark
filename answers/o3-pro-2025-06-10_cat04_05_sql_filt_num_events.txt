Here is a concise DuckDB query that keeps only those cases (process instances) that contain six events or fewer and returns every event that belongs to those “short” cases:

```sql
-- Keep every event for cases whose total length  6
WITH case_sizes AS (
    SELECT
        case_id,
        COUNT(*) AS event_cnt
    FROM event_log
    GROUP BY case_id
    HAVING COUNT(*) <= 6          -- accept only short cases
)

SELECT e.*
FROM event_log AS e
JOIN case_sizes USING (case_id);  -- keep the events of the accepted cases
```

Explanation:

1. `case_sizes` counts how many events each `case_id` has.
2. The `HAVING` clause discards any `case_id` whose count exceeds 6.
3. The final query joins the original `event_log` with this filtered list of `case_id`s, so only events belonging to acceptable cases are returned.

Equivalent single-pass version (window function):

```sql
SELECT *
FROM (
    SELECT
        el.*,
        COUNT(*) OVER (PARTITION BY case_id) AS event_cnt
    FROM event_log AS el
) t
WHERE event_cnt <= 6;
```

Either form produces the required result.