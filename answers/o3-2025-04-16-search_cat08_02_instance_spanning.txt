----------------------------------------------------------------------
1. Identifying the Instance-Spanning Constraints and Quantifying Their Impact  
----------------------------------------------------------------------  
a. How to detect each constraint in the log  

• Shared Cold-Packing stations  
  – Filter all Packing-start events where Requires Cold Packing = TRUE and take the resource attribute.  
  – Mine a “resource timetable” (timeline of station occupation). Each start time that finds all 5 stations already busy  queue entry.  
  – Instance-spanning rule detected: “ 6 concurrent cold-packing orders” never occurs (physical limit).  

• Batching before Shipping Label Generation  
  – Mine traces where the activity Shipping Label Gen. has “(Waited for batch)” in the comment or measure the lag QC-complete  LabelGen-start.  
  – Correlate groups of orders that share “Destination Region + Batch ID” executed within the same 5-minute window to reconstruct every batch.  

• Priority handling for Express orders  
  – Compare start timestamps on the same station/resource. Whenever an Express order begins while a Standard order on that station is still open, and the Standard order’s complete timestamp is pushed to the future, a pre-emption is logged (two intervals for the same case on the same station).  

• Hazardous-Material concurrency limit  
  – Slide a one-second window over the log and count “Packing” or “Quality Check” events with Hazardous Material = TRUE that are OPEN at that instant. A number > 10 would reveal a compliance breach (used later for conformance checking).  

b. Impact metrics  

Constraint | Metric(s) (per order & aggregated)  
-----------|------------------------------------  
Cold-Packing | • Cold-packing waiting time (queueentry  start)  • % orders waiting > X min  • Utilisation and average queue length of the 5 stations  
Batching | • Batch-formation waiting time (QC-complete  LabelGen-start)  • Average batch size & age  • % batches released at SLA deadline vs early  
Priority | • # of pre-emptions  • Average delay inflicted on pre-empted Standard orders  • Average speed-up gained by Express orders  
Hazardous limit | • Average # of concurrent hazardous orders  • Throughput loss (total idle time of Packing/QC caused by the 10-order cap)  • Compliance breaches detected  

c. Separating “between-instance” waiting from “within-instance” work  

1. Service time = activity Complete – Start.  
2. Total inter-activity lag = next-Start – previous-Complete.  
3. For each lag, query the resource state:  
   • If needed station free  label as “within-instance” (internal prep, missing docs, etc.).  
   • If station busy with other order(s)  “between-instance / resource contention”.  
   • If next activity is LabelGen and batch-mates incomplete  “between-instance / batching”.  
   • If hazardous cap reached or priority pre-emption flagged  “between-instance / regulation or priority”.  

This classification is implemented with an event-level join on resource utilisation and constraint state tables produced from the log.

----------------------------------------------------------------------
2. Analysing Interactions Between Constraints  
----------------------------------------------------------------------  
• Cold-Packing × Priority: An Express perishable order can seize a cold station, pausing a Standard order already in progress. This raises not only the cold-packing queue but also the probability that  10 hazardous orders accumulate later (because delayed orders shift forward in time).  

• Batching × Hazardous limit: If many hazardous orders share a destination, they may be held in a QC-complete state waiting for a batch while the cap already blocks more hazardous orders entering Packing/QC, amplifying throughput loss.  

• Priority × Batching: Fast-tracked Express orders often bypass batching to meet a courier cutoff; that reduces batch sizes for Standard orders, increasing their waiting time to reach the minimum-size or timeout threshold.  

Understanding these cross-effects lets us design policies that do not optimise one constraint at the expense of another (e.g., dedicating a cold-packing station to Express mitigates pre-emption but might reduce capacity for Standard orders unless offset elsewhere).

----------------------------------------------------------------------
3. Constraint-Aware Optimisation Strategies  
----------------------------------------------------------------------  
Strategy A – Segmented & Predictive Cold-Packing Allocation  
• Constraints addressed: Cold-Packing, Priority.  
• Change: Reserve 1 of the 5 cold stations (“C-Xpress”) exclusively for Express orders; dynamically release it to Standard orders when a short-term forecast (next 15 min) shows zero Express arrivals. Demand forecast uses an ARIMA or LSTM model trained on three-month arrival patterns from the log.  
• Expected outcome:  
  – Near-elimination of pre-emptions (priority constraint)  fewer disruptions.  
  – 25–30 % shorter cold-packing queue for Standard orders during peaks (because they are no longer paused).  
  – Utilisation of the dedicated station stays high (> 80 %) thanks to the predictive release rule.  

Strategy B – Adaptive Batch Trigger with Rolling Deadline Window  
• Constraints addressed: Batching, Hazardous limit, Priority.  
• Change: Replace fixed “region + sizeN” rule with a two-key trigger: batch is released when (i) the earliest order in the batch is T minutes from SLA due time, or (ii) adding another order would violate the hazardous cap for QC area. Express orders are immediately “single-batched”. Historical KPI analysis sets N and T per region (e.g., N=8, T=20 min for ‘North’).  
• Expected outcome:  
  – Mean batch waiting time  35 %.  
  – Fewer “nearly late” orders because the SLA-based trigger prevents old orders from waiting for slow stragglers.  
  – Less time with the hazardous cap saturated, as batches containing hazardous orders are flushed earlier.  

Strategy C – Token-Based Hazardous-Material Scheduling with Cross-Trained QC Staff  
• Constraints addressed: Hazardous limit, Cold-Packing interactions.  
• Change: Introduce a digital “token” system: exactly 10 tokens represent hazardous capacity. An order must acquire a token before entering Packing or QC. Tokens are kept by the MES, which also knows order deadlines. If the cap blocks near-deadline hazardous orders, the MES signals cross-trained QC staff to open an auxiliary QC line (temporarily converting a Standard QC station). After the spike, line reverts.  
• Expected outcome:  
  – Throughput of hazardous orders  15 – 20 %; total facility throughput  5 %.  
  – No compliance breaches (token system enforces the rule).  
  – Minimal impact on Standard QC because auxiliary line is opened only when the predicted marginal delay for Standard orders < 2 min (computed from queue model).  

----------------------------------------------------------------------
4. Simulation & Validation of Proposed Strategies  
----------------------------------------------------------------------  
Discrete-event simulation (DES) is built from:  
• Process model discovered from the log (e.g., timed Petri net with resources).  
• Empirical distributions for inter-arrival times, activity service times, and pre-emption durations.  
• Resource pools: 5 cold stations, 20 standard packing stations, QC staff, etc.  
• Control-flow extensions implementing: batching logic, priority pre-emption, hazardous token rule.  

Validation steps:  
1. Baseline run reproduces last 3 months KPIs (lead time, lateness %) within ±5 %.  
2. Each optimisation strategy toggled on in isolation, then combinations tried.  
3. KPIs tracked: average lead time, 95-th percentile lead time, cold-packing queue length, % late orders, utilisation per resource class, # compliance breaches.  
4. Run peak-season stress scenario (+30 % arrivals, same resources) to ensure strategies scale.  

Critical model details to capture constraint behaviour:  
• Pre-emption logic that splits an activity duration into “working” and “paused” segments.  
• Batch object with attributes (region, hazardous count) that holds multiple cases and can block release.  
• Token availability for hazardous orders implemented as a shared semaphore.  
• Dynamic resource re-allocation triggers (Strategy C) modelled as on-the-fly capacity changes.  

----------------------------------------------------------------------
5. Post-Implementation Monitoring & Dashboards  
----------------------------------------------------------------------  
Dashboards (updated hourly):  

1. SLA & Lead-Time Panel  
   – Average and 95-th percentile order-to-dispatch time.  
   – % orders late vs SLA.  

2. Cold-Packing Panel  
   – Queue length & waiting time histogram.  
   – Utilisation per cold station, highlighting the dedicated C-Xpress line.  
   – # of pre-emptions (should trend to zero).  

3. Batch Performance Panel  
   – Batch sizes & age distribution by region.  
   – Average wait from QC-complete to batch release.  
   – % batches released under SLA-deadline rule vs size rule.  

4. Hazardous-Material Compliance Panel  
   – Live count of concurrent hazardous orders in Packing/QC.  
   – Token pool occupancy heat map.  
   – Incidents of auxiliary QC activation and resulting delay to Standard QC.  

5. End-to-End Constraint Interaction View  
   – Sankey diagram showing where orders experience biggest between-instance waits.  
   – Correlation matrix: cold-packing queue length vs hazardous token occupancy, etc.  

Alerts:  
• Cold-packing queue > 10 orders for > 5 min.  
• > 8 tokens occupied for > 15 min (early warning before cap).  
• Batch wait time > 45 min for any order.  

Continuous process-mining conformance checking (e.g., MP-Declare) runs nightly to verify:  
– “No more than 10 hazardous orders in Packing/QC” rule satisfied.  
– “Express orders not pre-empted” rule satisfied.  
– “Cold station dedicated to Express  80 % of times express queue non-empty”.  

These dashboards allow rapid detection of drift, enabling further data-driven tuning of the strategies while ensuring all instance-spanning constraints remain under tight control.