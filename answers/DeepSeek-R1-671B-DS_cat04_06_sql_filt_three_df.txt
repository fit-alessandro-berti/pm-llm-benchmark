To solve this problem, we need to identify cases from an event log that meet specific criteria and exclude them from the final result. The criteria are: a case must contain a specific sequence of three consecutive activities and the time between two of these activities must exceed 5 days. The solution involves using window functions to detect the sequence and time condition, then excluding the identified cases.

### Approach
1. **Identify Excluded Cases**: Use window functions to check for the sequence of activities 'Approve Purchase Requisition', 'Create Order', and 'Confirm Order' in direct succession. Additionally, check if the time between 'Create Order' and 'Confirm Order' exceeds 5 days.
2. **Exclude Identified Cases**: Retrieve all events from the event log except those belonging to the cases identified in the previous step.

### Solution Code
```sql
WITH excluded_cases AS (
    SELECT DISTINCT case_id
    FROM (
        SELECT 
            case_id,
            activity,
            LEAD(activity, 1) OVER (PARTITION BY case_id ORDER BY timestamp) AS next_act,
            LEAD(activity, 2) OVER (PARTITION BY case_id ORDER BY timestamp) AS next_next_act,
            LEAD(timestamp, 1) OVER (PARTITION BY case_id ORDER BY timestamp) AS create_time,
            LEAD(timestamp, 2) OVER (PARTITION BY case_id ORDER BY timestamp) AS confirm_time
        FROM event_log
    ) t
    WHERE 
        activity = 'Approve Purchase Requisition'
        AND next_act = 'Create Order'
        AND next_next_act = 'Confirm Order'
        AND (confirm_time - create_time) > INTERVAL '5 days'
)
SELECT *
FROM event_log
WHERE case_id NOT IN (SELECT case_id FROM excluded_cases);
```

### Explanation
1. **CTE `excluded_cases`**:
   - **Window Functions**: The `LEAD` function is used to look ahead in the event sequence for each case, partitioned by `case_id` and ordered by `timestamp`.
   - **Sequence Check**: The subquery filters rows where the current activity is 'Approve Purchase Requisition', the next activity is 'Create Order', and the one after that is 'Confirm Order'.
   - **Time Condition Check**: It also checks if the time between 'Create Order' and 'Confirm Order' exceeds 5 days.
   - **Distinct Case IDs**: The `DISTINCT` keyword ensures each case is listed only once if it meets the criteria.

2. **Main Query**:
   - **Exclusion**: Selects all events from `event_log` where the `case_id` is not in the excluded cases identified by the CTE.

This approach efficiently identifies cases that meet the specified criteria using window functions and then excludes them, ensuring the result set contains only the relevant events.