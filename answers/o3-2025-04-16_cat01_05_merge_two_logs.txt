Merged Event Log for Order #1234  
(Fields: primary_timestamp, unified_event_type, order_id, origin, systemA_ts, systemB_ts, user_id, resource_id, notes)

1. 20231010T09:59:58Z, Order Received, Order#1234, merged, 20231010T10:00:00Z, 20231010T09:59:58Z, u45, r10, “Event captured at warehouse system; System A registered the same event 2 s later”

2. 20231010T10:01:29Z, Order Validated, Order#1234, merged, 20231010T10:01:30Z, 20231010T10:01:29Z, u12, r10, “Crosscheck inventory”

3. 20231010T10:02:00Z, Payment Processed, Order#1234, merged*, 20231010T10:02:00Z, 20231010T10:02:05Z, u12, r99, “Payment gateway delay (5 s offset – see notes)”

4. 20231010T10:03:00Z, Quality Check, Order#1234, only System B, –, 20231010T10:03:00Z, u45, r11, “Random inspection”

5. 20231010T10:05:00Z, Item Shipped, Order#1234, merged, 20231010T10:05:00Z, 20231010T10:05:02Z, u45, r10, “Package handed to courier”

6. 20231010T10:20:00Z, Item Delivered, Order#1234, only System A, 20231010T10:20:00Z, –, –, –, –

* Payment event: the 5second gap is outside the 2second guideline, but the identical order_id, sequential positioning, and matching semantics (“Payment Processed” vs “PaymentCheck”) make it highly likely they represent the same occurrence. The record is flagged “merged*” to show the relaxed matching rule.

--------------------------------------------------------------------
How the merge was performed
--------------------------------------------------------------------
1. Normalisation of names  
   OrderReceived  Order Received  
   OrderValidation  Order Validated  
   PaymentCheck  Payment Processed  
   Shipping  Item Shipped  
   Remaining names already matched or were kept (“Quality Check”).

2. Matching key  
   order_id must be equal AND |timestamp|  2 s (primary rule).  
   If rule failed but semantics & ordering strongly agreed, the event was still merged but marked with an asterisk (only happened once: Payment event).

3. Timestamp strategy  
   • primary_timestamp = earliest of the two systems when both present (gives the most “realtime” moment).  
   • systemA_ts and systemB_ts retained for traceability.

4. Attributes  
   • All attributes from both logs are kept.  
   • user_id / resource_id / notes are populated when they exist in System B.  
   • origin field says “merged”, “merged*”, “only System A”, or “only System B”.

5. Nonoverlapping events  
   • Quality Check exists only in System B  kept untouched.  
   • Item Delivered exists only in System A  kept untouched.

The resulting log is chronologically ordered by primary_timestamp and now combines the canonical flow from System A with the richer context of System B, providing a single view suitable for downstream analysis or processmining tools.