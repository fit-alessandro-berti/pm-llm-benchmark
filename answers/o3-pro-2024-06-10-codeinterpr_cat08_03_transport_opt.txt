=======================================================================
1.  PROCESS DISCOVERY AND CONFORMANCE CHECKING
=======================================================================

A. Data preparation & integration  
1. Create a canonical “event envelope”  
   • Mandatory fields: case_id, activity, start/end timestamp (or single timestamp), resource (driver/vehicle), additional attributes (location, speed, fuel level, package id, stop #…).  
   • Case dimension: the most actionable level for tactical decisions is “Vehicle-Day” (e.g., V12-20241205).  A secondary object “Package” can be kept in a linked table for package-level analyses.  
2. Merge sources  
   • GPS: high-frequency pings  compress to “movement episodes” (e.g., Driving, Idle, Stopped) by speed thresholds or change-point detection.  
   • Scanner: already discrete activities (Arrive Customer, Delivery Success …).  
   • Dispatch: one synthetic “Planned Route Loaded” event plus stop list as ordered attributes (Stop1…StopN).  
   • Maintenance: map repair windows that touch a case_id into events (“Unscheduled Maintenance Start/End”) or flag the case as ‘reduced availability’.  
3. Time synchronization & data quality  
   • Convert all sources to UTC, resolve time-zone drift on hand-helds.  
   • Deduplicate “bursty” GPS pings (same second).  
   • Infer missing end timestamps for instantaneous events (e.g., ‘Arrive Customer’ start = arrive, end = next ‘Depart Customer’).  
   • Outlier filtering: impossible speeds, locations outside territory.  
4. Challenges  
   • Data volume: GPS  1 Hz per vehicle  >500 M rows/6 months.  Use batching + columnar storage.  
   • Multiplicity: one physical process but two object types (vehicle, package).  Consider object-centric process mining or hierarchical logs.  
   • Granularity conflict: GPS minutes vs. scanner seconds  need aggregation rules.

B. Process discovery  
   • Use Inductive Miner or Split Miner on the cleaned Vehicle-Day log to obtain a sound, human-readable model:  
     Depot Start  (Driving  Customer Service)*  Depot End.  
   • Add sub-activities automatically derived from GPS such as ‘Traffic Congestion’ (average speed < 8 km/h for > 5 min), ‘Searching for Parking’, ‘Idle (Engine ON)’, ‘Rest Break’.  
   • Overlay performance: arc/box colouring by median duration or fuel burn.  This visually pinpoints long Driving segments, long Customer Service, frequent returns to depot, etc.

C. Conformance with the plan  
   • Build a reference model from the dispatch table: strict sequence of Stops plus mandated break times.  
   • Use alignment-based conformance checking (token-based replay or cost-based alignments).  
   • Deviations of interest:  
     1. Sequence deviations – stops visited in different order.  
     2. Missing/added activities – unplanned detours, fuel stops, workshop visits.  
     3. Timing deviations – late arrival outside customer time window; excessive dwell at stop; early return with un-delivered packages.  
     4. Violation of legal breaks or maximum driving time.  
   • Quantify deviation frequency and cost impact per driver, route, weekday.

=======================================================================
2.  PERFORMANCE ANALYSIS AND BOTTLENECK IDENTIFICATION
=======================================================================

Key KPIs and how to compute them from the event log

1. On-Time Delivery Rate (%)  
   For each Package: Arrive Customer timestamp  requested window? Aggregate per route/day.

2. Average Service Time per Stop (min)  
   Depart Customer – Arrive Customer.  Outliers show difficult customers/buildings.

3. Driving Time vs. Service Time Ratio  
   sum(Driving segment durations) / sum(Service segment durations) per case.

4. Fuel Consumption per km & per package  
   Join telematics fuel-burn readings to Driving segments; divide by distance or delivered count.

5. Vehicle Utilisation Rate  
   (Shift duration – idle engine-OFF) / 24 h, or kilometres driven / maximum allowed.

6. Traffic Delay Frequency & Duration  
   Number and total minutes of ‘Traffic Congestion’ episodes per route.

7. Failed Delivery Rate (%)  
   (# Delivery Failed) / (# Total delivery attempts).

8. Maintenance-related Downtime (h)  
   Overlap of ‘Vehicle unavailable’ intervals with scheduled shifts.

Process-mining techniques for bottlenecks  
• Performance animation (“replay”) to watch token accumulation.  
• Temporal heatmaps: activity duration by hour-of-day, weekday.  
• Variant frequency analysis: identify slower-than-average variants.  
• Resource-performance matrix: cross driver/vehicle vs. KPI.  
• Geo-enriched process maps: overlay durations on GIS layers to isolate congestion corridors.  
Quantification  
Example: route R14 shows 25 % longer Driving total and 7 % lower on-time rate; 80 % of excess concentrated in two city-centre postcodes  impacts ~€1.2 k fuel + 250 customer complaints/quarter.

=======================================================================
3.  ROOT-CAUSE ANALYSIS OF INEFFICIENCIES
=======================================================================

A. Sub-optimal route planning  
   Evidence: High alignment cost for sequence deviations & repeated back-tracking loops. Variants with dynamic resequencing (drivers who reorganise stops) outperform planned order by 12 % travel time.

B. Inaccurate travel-time estimates  
   Compare planned vs. actual segment durations; systematic under-estimation on arterial roads between 07:30–09:30 and 16:00–18:00.

C. Traffic congestion patterns  
   Using enriched GPS speed logs, derive congestion hot-spots.  Overlay with delay events – 65 % of late deliveries occur after passing through 9 recurrent bottlenecks.

D. Service-time variability at customers  
   Box-plot ‘Service Time per CustomerID’: long tail; multi-parcel office buildings take >9 min vs. average 3 min. Contributes 18 % of total delay variance.

E. Vehicle breakdowns during shift  
   ‘Unscheduled Stop  Maintenance’ preceded by high engine temperature sensor warnings.  Average lost time 42 min, extra tow cost €180 per incident.

F. Driver behaviour  
   Performance scatter plot shows 20 % drivers with >30 % idle-engine-ON time. Higher fuel per km and missed windows.

G. Failed first-time delivery  
   Packages with narrow 2-hour windows and “signature required” drive re-delivery loops (extra 12 km and 8 min/stop).

=======================================================================
4.  DATA-DRIVEN OPTIMISATION STRATEGIES
=======================================================================

Strategy 1: Dynamic Traffic-Aware Routing  
• Target issue: Late deliveries & excess driving fuel caused by congestion and mis-sequencing.  
• Root cause: Static overnight route planning ignoring real-time traffic.  
• Data support: Process variants where drivers self-adjust in traffic yield 10 % shorter driving time.  
• Action: Integrate live traffic API + historical delay profiles into route optimisation engine; re-dispatch updated stop order to driver tablets every 30 min.  
• Expected impact: +8 pp On-Time Delivery, 7 % fuel /km, 5 % overtime hours.

Strategy 2: Territory & Stop-Sequence Re-design via Process Mining Clustering  
• Target issue: Repeated back-tracking and high travel/service ratio on urban routes.  
• Root cause: Legacy postcode-based territories create zig-zag patterns.  
• Data support: Clustering of GPS trajectories shows natural delivery “polygons” different from postcodes; simulated re-clustering cuts distance by 11 %.  
• Action: Use mining output to feed VRP solver that balances capacity, driving time, customer windows. Implement new territories in pilot depots.  
• Expected impact: 11 % km, 9 % fuel, 6 % vehicle-hours, +5 pp on-time.

Strategy 3: Predictive Maintenance Scheduling  
• Target issue: Shift-time breakdowns.  
• Root cause: Maintenance intervals based on calendar not usage/load; warning events ignored.  
• Data support: 78 % of in-shift repairs preceded by >3 engine-warning GPS events within prior 4 days.  
• Action: Build machine-learning model on sensor sequences  predict failure risk; schedule maintenance during off-peak; send driver alerts.  
• Expected impact: 70 % unscheduled downtime, 3 % missed deliveries, 15 % repair cost.

Strategy 4: Customer Interaction Optimiser & “Safe-Drop” Policy  
• Target issue: High failed-delivery and long service times.  
• Root cause: Narrow windows and mandatory signatures.  
• Data support: Mining shows 60 % of “Delivery Failed” occur at residential customers working office hours.  
• Action:  
   1) Pre-arrival SMS with live ETA + “safe-drop” opt-in link.  
   2) Adaptive scheduling offering evening time slots for repeat offenders.  
• Expected impact: 50 % failed first attempts, 6 % distance (re-deliveries), +4 pp customer satisfaction.

Strategy 5: Targeted Eco-Driving & Idling Reduction Programme  
• Target issue: Excess fuel burn.  
• Root cause: Idling >5 min episodes; harsh acceleration.  
• Data support: Top-quartile vs bottom-quartile driver comparison shows 18 % fuel gap.  
• Action: Personal driver scorecards from process-mining dashboards, coaching sessions, gamified incentives.  
• Expected impact: 8 % fuel, 5 % CO, 1-year payback.

=======================================================================
5.  OPERATIONAL CONSTRAINTS & CONTINUOUS MONITORING
=======================================================================

A. Respecting constraints  
• Driver hours: incorporate legal daily/weekly limits into routing solver; dashboards alert if projected duty > max.  
• Vehicle capacity & weight: optimisation engine uses package volumetrics; mining model flags historical overweight occurrences.  
• Customer time windows: dynamic routing keeps hard windows; proposes soft-window reshaping only after customer consent (SMS).  

B. Continuous monitoring framework  
1. Event stream  daily incremental process mining (e.g., PM4Py, Celonis).  
2. Real-time KPI dashboards  
   • On-Time Delivery trend (daily & rolling 7-day).  
   • Heatmap of congestion delays by road segment.  
   • Predictive maintenance risk list (vehicle-probability-of-failure).  
   • Driver fuel-efficiency leaderboard.  
3. Alert rules  
   • >X alignment deviations on any active route.  
   • Delivery cluster running >Y min behind schedule.  
   • Vehicle risk score >0.8 has not yet been booked for workshop.  
4. Quarterly review  
   • Compare KPI baselines vs. targets; run variant mining again to spot new patterns.  
   • Feed findings back into continuous improvement (PDCA cycle).  

By systematically transforming raw telematics and scanner data into a unified event log, uncovering the true “as-is” delivery process, and closing the gap to the “should-be” plan, Speedy Parcels can decrease delays, save fuel and maintenance cost, and sustain these gains through ongoing process-mining-based monitoring.