```python
declare_model = {
    "existence": {
        "StartApplication": {"support": 1.0, "confidence": 1.0},
        "FinalDecision": {"support": 1.0, "confidence": 1.0}
    },
    "absence": {},
    "exactly_one": {},
    "init": {
        "StartApplication": {"support": 1.0, "confidence": 1.0}
    },
    "responded_existence": {},
    "coexistence": {
        "StartApplication": {"FinalDecision": {"support": 1.0, "confidence": 1.0}}
    },
    "response": {
        "StartApplication": {"RequestAdditionalInfo": {"support": 1.0, "confidence": 1.0}}
    },
    "precedence": {},
    "succession": {
        "RequestAdditionalInfo": {"FinalDecision": {"support": 1.0, "confidence": 1.0}}
    },
    "altresponse": {},
    "altprecedence": {},
    "altsuccession": {},
    "chainresponse": {},
    "chainprecedence": {},
    "chainsuccession": {},
    "noncoexistence": {},
    "nonsuccession": {},
    "nonchainsuccession": {},

    # --- NEW BIAS-MITIGATING CONSTRAINTS ---

    "coexistence_race_and_review": {
        "Approve_Minority": {"support": 1.0, "confidence": 1.0},
        "Reject_Minority": {"support": 1.0, "confidence": 1.0},
        "ManualReview": {
            "coexistence": {"support": 1.0, "confidence": 1.0},
            "depends_on": {
                "CheckApplicantRace": {"support": 0.9, "confidence": 0.95}
            }
        },
        "CheckApplicantRace": {
            "depends_on": {
                "ManualReview": {"support": 1.0, "confidence": 1.0}
            }
        }
    },

    "succession_with_nonsuccession_guard": {
        "FinalDecision": {"support": 1.0, "confidence": 1.0},
        "Response_Without_Immediate_Decision": {
            "ManualReview": {"support": 0.95, "confidence": 0.9},
            "Follows": {
                "unrestricted_succession": {"support": 1.0, "confidence": 1.0},  # fallback
                "precedence": {
                    "CheckApplicantRace": {"support": 0.8, "confidence": 0.85}
                }
            }
        }
    },

    "noncoexistence_race_and_decision_link": {
        "InitiateApplication": {"noncoexistence": {"Race": {"support": 0.7, "confidence": 0.8}}, "FinalDecision": {"support": 0.3, "confidence": 0.3}},
        "explains": {
            "Even when not directly coexisting, explicit checks prevent direct decision-Minus sensitive-attribute link."
        }
    }
}
```

---

### Rationale for Added Constraints

1. **`coexistence_race_and_review` constraint:**  
This ensures that if either `Approve_Minority` or `Reject_Minority` occurs, a `ManualReview` must coexist—either before or after—enforcing deliberate oversight for sensitive decisions. This reduces automated bias by introducing human review as a consistent safeguard only when high-risk attributes are present.

2. **Reinforced `CheckApplicantRace` with `ManualReview` dependency:**  
By requiring `ManualReview` *before* `CheckApplicantRace` and linking it to `FinalDecision`, the model disallows blanket automated routing of sensitive decisions. The intermediary `ManualReview` acts as a fairness checkpoint, minimizing the chance of biased evaluations based solely on demographic data.

3. **`succession_with_nonsuccession_guard` constraint:**  
This prevents direct succession from `CheckApplicantRace` (sensitive attribute disclosure) to `FinalDecision` (a high-risk outcome), requiring either a `precedence` check or `ManualReview` first. It breaks immediate biased pathways and enforces a fair, auditable process flow.

4. **`noncoexistence_race_and_decision_link`:**  
This explicitly limits direct probabilistic or logical connection between sensitive attribute checks and final decisions, even when not co-occurring, thereby reducing spurious correlations in algorithmic decision logic.

Collectively, these constraints embed fairness as structural process rules, regularizing biased transitions while preserving the model’s logical integrity and compliance readiness.