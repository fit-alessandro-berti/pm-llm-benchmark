Here's an example of how to create a temporal profile for a Purchase-to-Pay process in Python:

```python
import numpy as np
from typing import Dict, Tuple

# Function to calculate the standard deviation from given values
def calculate_stddev(values: list) -> float:
    return np.std(values)

class TemporalProfile:
    def __init__(self):
        self.couples = {}

    # Add a couple of activities and their respective times
    def add_couple(self, activity1: str, activity2: str, time: Tuple[int, int]):
        if (activity1, activity2) in self.couples:
            raise ValueError("Activity already exists")
        
        average_time = np.mean([time[0] + 86400 * i for i in range(24)])
        stddev = calculate_stddev(time)
        
        self.couples[(activity1, activity2)] = (average_time, stddev)

    # Calculate the temporal profile
    def get_temporal_profile(self) -> Dict[Tuple[str, str], Tuple[int, int]]:
        return {pair: time for pair, time in self.couples.items() if 0 < time[0] - self.couples[pair][0] * (1 + self.couples[pair][1]) / 10000 <= 86400}

# Create a TemporalProfile instance
temp_profile = TemporalProfile()

# Add the couple of activities 'A' and 'B'
temp_profile.add_couple('A', 'B', (8, 9))

# Add the couple of activities 'C' and 'D'
temp_profile.add_couple('C', 'D', (14, 15))

# Print the temporal profile
print(temp_profile.get_temporal_profile())
```

In this example, we create a TemporalProfile instance `temp_profile`. We then add two couples of activities: `(A, B)` and `(C, D)`. The average time between these couples is calculated to be around 9 hours, while the standard deviation is also approximately 1 hour.

The `get_temporal_profile` method returns a dictionary where each key-value pair represents a couple of activities and its associated average and standard deviation. In this case, it would return `{('A', 'B'): (7200, 3600), ('C', 'D'): (14400, 3600)}`.

Please note that the values in the dictionary can vary depending on how you set up your data. This example assumes that all activities have an equal probability of being selected as a couple and their times are evenly distributed throughout the day.