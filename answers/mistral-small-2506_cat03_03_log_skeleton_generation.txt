Here is the Python dictionary representing the Log Skeleton for the given order fulfillment process scenario:

```python
log_skeleton = {
    'equivalence': set(),  # No equivalence constraints in this scenario
    'always_before': {
        ('Receive Order', 'Check Availability'),
        ('Check Availability', 'Reserve Items'),
        ('Reserve Items', 'Pick Items'),
        ('Pick Items', 'Quality Check'),
        ('Quality Check', 'Pack Order'),
        ('Pack Order', 'Generate Shipping Label'),
        ('Generate Shipping Label', 'Dispatch'),
        ('Dispatch', 'Invoice Customer'),
        ('Invoice Customer', 'Record Payment')
    },
    'always_after': set(),  # No always_after constraints in this scenario
    'never_together': set(),  # No never_together constraints in this scenario
    'activ_freq': {
        'Receive Order': {1},  # Must occur exactly once
        'Check Availability': {1},  # Must occur exactly once
        'Reserve Items': {1},  # Must occur exactly once
        'Pick Items': {1},  # Must occur exactly once
        'Quality Check': {1},  # Must occur exactly once
        'Pack Order': {1},  # Must occur exactly once
        'Generate Shipping Label': {1},  # Must occur exactly once
        'Dispatch': {1},  # Must occur exactly once
        'Invoice Customer': {1},  # Must occur exactly once
        'Record Payment': {1}  # Must occur exactly once
    },
    'directly_follows': {
        ('Receive Order', 'Check Availability'),
        ('Check Availability', 'Reserve Items'),
        ('Reserve Items', 'Pick Items'),
        ('Pick Items', 'Quality Check'),
        ('Quality Check', 'Pack Order'),
        ('Pack Order', 'Generate Shipping Label'),
        ('Generate Shipping Label', 'Dispatch'),
        ('Dispatch', 'Invoice Customer'),
        ('Invoice Customer', 'Record Payment')
    }
}
```

### Explanation:
1. **Equivalence**: No activities are equivalent in this process.
2. **Always Before**: The process follows a strict sequence where each activity must occur before the next one in the list.
3. **Always After**: Not applicable here since the process is strictly sequential.
4. **Never Together**: No activities are mutually exclusive in this scenario.
5. **Activity Occurrences**: Each activity must occur exactly once (`{1}`) in a case.
6. **Directly Follows**: The process is strictly sequential, so each activity directly follows the previous one.

This Log Skeleton captures the linear flow of the order fulfillment process.