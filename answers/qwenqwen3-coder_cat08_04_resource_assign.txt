# **Data-Driven Optimization of Resource Assignment at TechSolve Solutions**

---

## **1. Analyzing Resource Behavior and Assignment Patterns**

### **Metrics for Agent and Tier Performance Analysis**

To understand agent and tier behavior, the following **key performance indicators (KPIs)** will be extracted from the event log:

- **Workload Distribution**: Number of tickets handled per agent/tier over time.
- **Activity Processing Time**: Time taken by agents to complete specific activities (e.g., Work L1 Start to End).
- **First Call Resolution Rate (FCR)** for L1: Percentage of tickets resolved without escalation.
- **Escalation Frequency**: Rate of escalations per agent/ticket type.
- **Reassignment Frequency**: How often a ticket is reassigned after being initially assigned.
- **Agent Skill Utilization**: How often an agent's documented skills match the required skill for assigned tickets.
- **Throughput Efficiency**: Tickets resolved per unit time by agent/skill/tier.

These metrics are computed using timestamp data (e.g., duration between "Work Start" and "Work End") and categorical attributes (Priority, Category, Skill).

---

### **Process Mining Techniques to Reveal Real Assignment Patterns**

#### **1. Resource Interaction Analysis**
This technique visualizes how work flows between agents. It identifies:
- Which agents frequently hand off tickets.
- Whether handoffs occur due to escalation or reassignment.
- Delays caused by handoffs.

#### **2. Social Network Analysis (SNA)**
Using SNA on the event log:
- Nodes represent agents; edges represent handoffs.
- Metrics like **betweenness centrality** identify agents who act as bottlenecks.
- **Clustering coefficient** reveals collaboration patterns within tiers or across skill sets.

#### **3. Role Discovery**
By analyzing sequences of activities performed by agents (e.g., "Work L1", "Escalate L2"), we can cluster agents into behavioral roles:
- Actual L1 agents vs. those acting as pseudo-L2.
- Specialists vs. generalists.

This analysis compares the *actual* roles with the *intended* tier structure.

#### **4. Variant Analysis**
We identify common execution paths ("variants") of ticket handling:
- Efficient paths (e.g., L1  Resolve).
- Inefficient paths (e.g., L1  L2  Reassign  L2 again).

This highlights deviations from the intended process flow.

---

### **Skill Utilization Across Agent Pool**

To assess skill effectiveness:
- **Skill Match Ratio**: Proportion of tickets where agent skill matches required skill.
- **Skill Overqualification**: Cases where highly skilled agents handle low-complexity tasks.
- **Skill Underutilization**: Specialized agents not receiving enough relevant work.

This analysis will help determine whether specialists are overburdened with simple tasks or if their skills are underused.

---

## **2. Identifying Resource-Related Bottlenecks and Issues**

Using the above metrics and process mining outputs, we can pinpoint key issues:

### **Bottlenecks Due to Skill Shortage**
- High delay times for tickets requiring rare skills (e.g., "Security-IAM").
- Increased queue lengths for certain skill categories.

### **Delays Caused by Reassignments**
- Average delay per reassignment = Time between two consecutive assignment events.
- High frequency of reassignments indicates poor initial assignment logic.

### **Incorrect Initial Assignments**
- Compare required skill vs. assigned agent’s skill.
- Track how many tickets require reassignment due to skill mismatch.

### **Underperforming Agents**
- Agents with consistently long processing times or high reassignment rates.
- Agents with low FCR despite handling many tickets.

### **SLA Breach Correlation**
- Map SLA breach events to preceding assignment/reassignment history.
- Use statistical correlation to identify which assignment patterns increase SLA breach risk.

### **Quantifying Impact**
Examples:
- Average delay per reassignment = 45 minutes.
- 30% of SLA breaches linked to reassignments or skill mismatches.
- 20% of L2 workload could have been handled by L1.

---

## **3. Root Cause Analysis for Assignment Inefficiencies**

### **Potential Root Causes**

| Issue | Root Cause |
|-------|------------|
| Frequent Reassignments | Round-robin assignment ignores agent skills and workload. |
| Skill Mismatch | Agent skill profiles are outdated or inaccurate. |
| Excessive Escalations | L1 agents lack training or empowerment to resolve common issues. |
| Poor Initial Categorization | Tickets misclassified at creation (wrong Category or Required Skill). |
| Lack of Real-Time Visibility | Dispatchers assign without knowing agent availability. |

---

### **How Variant and Decision Mining Help**

#### **Variant Analysis**
- Compare efficient vs. inefficient variants:
  - Efficient: L1  Resolve.
  - Inefficient: L1  L2  Reassign  L2  Resolve.
- Identify what differentiates these paths (e.g., agent skill set, ticket complexity).

#### **Decision Mining**
- Train models on assignment decisions to predict correct agent/skill.
- Identify features that lead to poor decisions:
  - Ticket category, priority, agent availability, agent skill overlap.

This enables identification of flawed decision points in the process.

---

## **4. Developing Data-Driven Resource Assignment Strategies**

### **Strategy 1: Skill-Based Routing with Proficiency Weighting**

#### **Issue Addressed**
Frequent reassignments due to skill mismatches.

#### **How It Leverages Process Mining**
- Historical data shows which agents perform best on specific skills.
- Agent skill proficiency levels can be inferred from resolution time and success rate.

#### **Data Required**
- Agent skill list with proficiency levels.
- Ticket history with required skills and resolution outcomes.

#### **Expected Benefits**
- Reduced reassignment rate by 25%.
- Improved SLA compliance for P2/P3 tickets.

---

### **Strategy 2: Workload-Aware Assignment Algorithm**

#### **Issue Addressed**
Uneven workload distribution and overloaded specialists.

#### **How It Leverages Process Mining**
- Real-time workload data from recent activity logs.
- Agent availability inferred from active tickets and processing times.

#### **Data Required**
- Current ticket queue status.
- Agent availability (derived from start/end timestamps).

#### **Expected Benefits**
- More even distribution of workload.
- Reduced average resolution time by 15%.

---

### **Strategy 3: Predictive Assignment Using Ticket Characteristics**

#### **Issue Addressed**
Poor initial categorization leading to incorrect assignments.

#### **How It Leverages Process Mining**
- Use historical ticket data (description, category, skill) to train models predicting:
  - Required skill.
  - Complexity level (L1/L2/L3).
  - Likelihood of escalation.

#### **Data Required**
- Ticket descriptions, categories, and outcomes.
- Historical resolution data.

#### **Expected Benefits**
- Improved accuracy of initial assignment by 30%.
- Reduced need for manual escalations.

---

## **5. Simulation, Implementation, and Monitoring**

### **Business Process Simulation**

Before implementing changes:
- Build a **process model** using the event log.
- Simulate different assignment strategies:
  - Skill-based routing.
  - Workload-aware routing.
- Measure impact on:
  - SLA compliance.
  - Reassignment frequency.
  - Average resolution time.

This allows for risk-free evaluation of proposed changes.

---

### **Monitoring Post-Implementation**

#### **Key KPI Dashboards**
- **Assignment Accuracy**: % of tickets assigned to correct skill tier.
- **Reassignment Rate**: Number of reassignments per ticket.
- **SLA Compliance Rate**: % of tickets meeting SLA deadlines.
- **Agent Workload Balance**: Utilization % per agent.
- **Escalation Rate**: % of tickets escalated from L1.

#### **Process Views to Track**
- Flow diagrams highlighting frequent reassignment paths.
- Heatmaps of agent utilization and workload.
- Trend charts for SLA performance over time.

#### **Continuous Improvement**
- Monthly variant analysis to detect new inefficiencies.
- Feedback loop to update agent skill profiles and retrain models.
- Quarterly simulation to refine assignment logic.

---

## **Conclusion**

By leveraging **process mining techniques** such as resource interaction analysis, social network analysis, and decision mining, TechSolve can uncover inefficiencies in their current resource assignment logic. Implementing **data-driven assignment strategies** — such as skill-based routing, workload-aware assignment, and predictive assignment — can significantly improve SLA compliance, reduce reassignments, and optimize agent utilization. With **simulation and continuous monitoring**, TechSolve can ensure that these improvements are both effective and sustainable.