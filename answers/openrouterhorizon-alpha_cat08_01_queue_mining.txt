Section 1: Queue Identification and Characterization

How to compute waiting time (queue time)
- Definition: For a given patient visit (case), waiting time between two consecutive activities A  B is the elapsed time from the completion timestamp of A to the start timestamp of B. Waiting time within an activity is the elapsed time from activity START to when the resource actually begins service if START is a “request” event; otherwise, use COMPLETE(A)  START(B) for between-activity waits.
- Steps:
  1) Order each case’s events by timestamp. Collapse each activity into [start_time, complete_time] per case.
  2) Build the observed control flow per case (Registration  Nurse Assessment  Doctor  Tests  Check-out, etc.). For parallel branches, compute waits per branch separately; for optional steps, skip missing links.
  3) For each handover A  B, compute wait = start_time(B)  complete_time(A).
  4) For in-queue analyses per resource, compute queue length and waiting time at resource R by comparing the arrival-to-queue time (first moment patient is ready for R, usually COMPLETE of predecessor) to the service start time at R (START of the activity performed by R).

Queue characterization metrics
For each activity and each handover (A  B), and for each resource (person/room/equipment):
- Average waiting time
- Median waiting time (robust to outliers)
- 90th/95th percentile waiting time (service level lens)
- Maximum waiting time
- Wait time distribution by hour/day (temporal patterns)
- Queue frequency: count and proportion of cases that experienced a wait above threshold (e.g., >15 min for Registration; >30 min for Doctor)
- Overtime/underutilization indicators: % time resource is idle vs. busy; utilization = busy_time / available_time
- Throughput time components per case: total visit duration, total value-added time (service time), total non-value-added time (waiting), % waiting
- Arrival vs. capacity balance: offered load , average service time s, traffic intensity  = ·s / m for m servers (approximate from logs)
- Rework/loops: number and impact of back-and-forth steps causing extra waits
- Handover delays: waits attributable to cross-role handoffs (e.g., nurse-to-doctor)

Identifying critical queues
Prioritize using a weighted score combining:
- Magnitude: high mean/median and high 90th percentile wait
- Scale: many patients affected (queue frequency)
- Impact on total visit time: contribution to overall throughput time (decomposition)
- Patient segments: high impact on urgent patients or high-risk specialties; new vs. follow-up disparities
- Temporal severity: consistent peak-hour spikes creating daily backlogs
- Strategic importance: doctor consult and diagnostic access typically drive patient experience and throughput

Produce a heatmap: rows = handovers/resources; columns = mean/median/P90 wait, % affected, contribution to visit time. Pick the top 3–5 hotspots.


Section 2: Root Cause Analysis

Likely root causes and how to detect them from logs

1) Resource bottlenecks
- Symptoms: high utilization (85–95%), long queues, wait aligned with resource schedule boundaries.
- Analyses:
  - Resource workload: service time per hour/day per resource; utilization approximated as total service time / staffed time.
  - Queue length over time: reconstruct queue before resource by counting arrivals ready for service vs. starts.
  - Capacity mismatch by time block: arrivals per 15-min vs. completed services per 15-min.

2) Activity dependencies and handovers
- Symptoms: long waits immediately after handovers; variability due to coordination lags.
- Analyses:
  - Handover matrix: average wait per role-to-role transition (e.g., ClerkNurse, NurseDoctor, DoctorECG).
  - Variant analysis: compare pathways with and without certain handovers or with parallelization to see wait differences.

3) Variability in service times
- Symptoms: bursty queues, long tails in service durations; certain staff/equipment slower or handling more complex cases.
- Analyses:
  - Distribution of activity service times by resource and patient type; coefficient of variation (CV).
  - Regression: service time ~ patient_type + urgency + resource + time-of-day.

4) Appointment scheduling policies
- Symptoms: synchronized arrivals (“stacking”) at the hour; mismatch between booked slots and actual cycle times; double-booking.
- Analyses:
  - Interarrival patterns vs. slot map; compare mean/variance of arrivals to capacity.
  - No-show/cancellation patterns and overbooking impact on peaks.
  - Doctor template adherence vs. observed cycle time (time from consult start to complete).

5) Patient arrival patterns
- Symptoms: morning and post-lunch peaks, walk-ins clustering.
- Analyses:
  - Heatmaps of arrivals and starts per activity by 15-min bins.
  - Queue formation timing vs. clinic opening; pre-opening arrivals causing registration spikes.

6) Segmentation differences (new vs. follow-up; urgency)
- Symptoms: urgent cases preempting scheduled flow; new patients taking longer at registration or nurse assessment.
- Analyses:
  - Stratified metrics by patient type and urgency; test for significant differences.
  - Priority effect: measure wait time differential when urgent patients arrive (impact on non-urgent waits).

Advanced process mining techniques to pinpoint causes
- Bottleneck analysis: token-based replay or performance-annotated models to locate where time accumulates.
- Resource handover network: edges weighted by wait; detect high-delay handovers.
- Conformance checking: identify deviations (unexpected loops, missing steps) linked to extra waits.
- Predictive models: waiting time prediction from early-visit features to discover key drivers.
- What-if queueing simulation: use mined parameters (arrival rates, service distributions) to test policy changes.


Section 3: Data-Driven Optimization Strategies

Strategy 1: Time-of-day capacity rebalancing and micro-shifts
- Target queues: Registration, Nurse Assessment, high-demand diagnostics (e.g., ECG, phlebotomy) during morning/post-lunch peaks; Doctor consults if consistent mid-morning backlog.
- Root cause: Arrival peaks + insufficient concurrent capacity; uneven staffing vs. demand.
- Data support: Arrival vs. service start heatmaps show peaks where >1; long P90 waits concentrated in specific 60–90 min windows; resource utilization >90% in peaks, <60% off-peak.
- Intervention:
  - Introduce staggered start times and short overlap shifts to add 0.5–1 FTE capacity during peak 2–3 hours without increasing total daily hours (shift hours from low-demand periods).
  - Cross-train and deploy float staff to high-variance stations (e.g., registration and phlebotomy).
  - Align room/equipment availability (e.g., extra ECG slot coverage) with peaks.
- Expected impact: Where  drops from ~1.1 to ~0.9, M/M/m approximations suggest 30–50% reduction in average wait; empirically target 20–35% reduction in P90 waits in peak windows; 10–20% reduction in total visit duration for affected cases.

Strategy 2: Smarter appointment template and slot sequencing
- Target queues: Doctor Consultation and downstream diagnostics; handovers NurseDoctor, DoctorTest.
- Root cause: Stacked starts at the hour; slot length mismatch with observed consult times; clustering of complex new patients; poor sequencing relative to test capacity.
- Data support: Consult service time distribution shows medians/variance by patient type/physician; arrivals clustered to top of hour; diagnostics lag after consults causing test backlog.
- Intervention:
  - Adjust slot lengths by physician and patient type (e.g., new: 30 min; follow-up: 15–20 min; urgent buffer slots).
  - Use wave scheduling with offset (e.g., 2 patients at 00; 1 at :10; 1 at :20) or rolling starts to smooth arrivals.
  - Reserve diagnostic micro-slots tied to expected consult end times; place new patients earlier in sessions to reduce spillover.
  - Limit double-booking to hours with historically high no-show rates and short service variance.
- Expected impact: 15–25% reduction in average wait for doctor; 20–30% reduction in post-consult diagnostic waits; improved on-time performance (% seen within 15 min) by 10–20 points.

Strategy 3: Parallelization and fast-tracks with proactive prep
- Target queues: Nurse Assessment and Diagnostics before/around consult; reduce idle gaps.
- Root cause: Strict sequencing forces idle time; handover delays; rework for missing vitals/tests.
- Data support: Variant analysis shows cases with early vitals/tests have shorter nursedoctor waits; handover matrix flags delays between consult and tests.
- Intervention:
  - Create nurse-led fast-track for follow-ups: vitals and basic labs before doctor when protocol allows.
  - Pre-visit digital intake (history, meds reconciliation) 24–48h prior; kiosk/tablet completion on arrival for those not completing online; nurse focuses on clinical checks.
  - Standing orders for common labs by specialty for new patients, triggered at registration for morning slots.
- Expected impact: Reduce nursedoctor waits by 20–30% for eligible segments; cut total visit time by 10–15% for follow-ups; reduce rework and post-consult test queues by 15–25%.

Strategy 4: Real-time orchestration and pull-based handovers
- Target queues: Handover delays across roles; uncoordinated starts.
- Root cause: Lack of visibility; staff unaware when patients are ready; rooms idle while patients wait.
- Data support: Long tails between COMPLETE(A) and START(B) even when downstream utilization is moderate.
- Intervention:
  - Implement a live tracker (from event system) showing patient readiness and queue order per station; mobile alerts to next resource when a patient is ready.
  - Define service-level targets for handovers (e.g., nurse starts within 10 min of registration complete) and surface escalation signals.
  - Adopt pull: downstream resources “pull” next ready patient from a visible queue to minimize dead time.
- Expected impact: 10–20% reduction in handover waits; smoother flow reduces variability and improves P90.

Strategy 5: Dedicated urgent lane and dynamic prioritization
- Target queues: All stages when urgent patients arrive.
- Root cause: Preemption of non-urgent flow increases variability and backlog.
- Data support: Stratified analysis shows non-urgent waits spike following urgent arrivals; urgent cases wait too long at shared resources during peaks.
- Intervention:
  - Reserve capacity buffers (e.g., 1 urgent slot per hour per high-impact resource) and a visible “priority queue.”
  - Dynamic priority rules in the orchestration tool to insert urgent cases without cascading delays (limit insertion depth).
- Expected impact: Reduce urgent waits by 30–50%; cap non-urgent P90 growth during urgent surges; overall experience improves for both groups.

Note: Start with 3–4 interventions in a pilot area (e.g., Cardiology + Diagnostics) to demonstrate impact before scaling.


Section 4: Trade-offs and Constraints

- Shifting bottlenecks: Adding registration capacity may move the bottleneck to nurse assessment or diagnostics. Mitigation: iterative monitoring; apply Theory of Constraints—elevate one constraint at a time and reassess the system.
- Staff workload and burnout: Peak reallocation and cross-training can stress staff. Mitigation: involve staff in design, ensure fair schedules, add micro-breaks, track workload KPIs.
- Cost control: More capacity or technology adds costs. Mitigation: prioritize no-net-hour rebalancing, cross-training, and light-touch tools; use pilots with ROI tracking (cost per minute of wait reduced).
- Care quality: Shorter slots risk rushed visits. Mitigation: match slot length to observed service time by case type; monitor quality metrics (rework, errors, patient outcomes).
- Equity and access: Priority lanes may disadvantage non-urgent patients. Mitigation: small reserved buffers, transparent rules, monitor non-urgent P90.
- Change adoption: New templates and workflows require training. Mitigation: phased rollout, super-users, feedback loops, measure adherence and impact.


Section 5: Measuring Success

KPIs
Flow and waiting
- Average, median, and P90 waiting time per handover (RegistrationNurse, NurseDoctor, DoctorTest, TestCheck-out)
- Total visit duration and % time waiting vs. in service
- On-time start rate: % patients starting each activity within X minutes of readiness
- Queue length over time by station; time-in-queue SLA attainment

Capacity and variability
- Resource utilization by hour; % time in overload (>1)
- Service time variability (CV) by activity/resource
- Throughput per session/day; cancellations and rework rate

Experience and quality
- Patient satisfaction (overall and wait-specific items)
- Left-without-being-seen/left-before-checkout rate
- Error/rework indicators (repeat tests, missed vitals), clinical quality proxies as applicable

Equity and segmentation
- KPI splits by patient type (new/follow-up), urgency, specialty, time-of-day

Monitoring approach
- Daily/weekly automated dashboards fed by the same event log structure, with:
  - Statistical process control charts for key waits and visit duration
  - Peak-window tiles (e.g., 8–10am, 1–3pm)
  - Funnel plots by physician/resource to spot outliers
- A/B or stepped-wedge pilots:
  - Baseline 4–6 weeks  intervention  post-period; compare KPIs with control specialties/days
  - Use difference-in-differences where feasible
- Conformance alerts:
  - Real-time breach alerts when handover wait exceeds SLA
  - Drift detection if performance degrades over time
- Quarterly review:
  - Refit scheduling templates with updated service-time distributions
  - Re-balance capacity based on updated demand patterns

Implementation checklist
- Data: Ensure clean start/complete pairs, consistent case IDs, resource calendars, and patient attributes; handle missing timestamps.
- Models: Build per-activity service-time distributions; compute arrival rates per time block; reconstruct queues.
- Governance: Define SLA targets, owners per station, and a cadence for review.
- Pilot and iterate: Start with one specialty + 1–2 diagnostics, measure, refine, then scale.

This end-to-end, queue-mining-driven approach identifies where patients wait, why they wait, and delivers targeted, testable interventions to reduce waiting time and total visit duration while controlling costs and maintaining care quality.