Here's a DuckDB SQL query that accomplishes the task of filtering out cases with more than six events and returning only the events from cases with six or fewer events:

```sql
WITH case_counts AS (
  SELECT case_id, COUNT(*) AS event_count
  FROM event_log
  GROUP BY case_id
  HAVING COUNT(*) <= 6
)
SELECT e.*
FROM event_log e
INNER JOIN case_counts c ON e.case_id = c.case_id
ORDER BY e.case_id, e.timestamp;
```

This query works as follows:

1. The Common Table Expression (CTE) `case_counts` calculates the number of events for each `case_id`, filtering out cases with more than six events using the `HAVING` clause.

2. The main query then joins the original `event_log` table with the `case_counts` CTE, effectively filtering out all events belonging to cases with more than six events.

3. The result is ordered by `case_id` and `timestamp` to group events from the same case together and show them in chronological order.

This query efficiently filters the data and returns only the events from cases with six or fewer events, meeting the requirements of the task[8][9][10].