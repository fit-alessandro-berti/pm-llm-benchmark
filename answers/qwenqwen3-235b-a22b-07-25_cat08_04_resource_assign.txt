# **Process Mining-Driven Optimization of Resource Assignment at TechSolve Solutions**

As a Process Improvement Consultant specializing in IT Service Management (ITSM), I will leverage **process mining** techniques to transform TechSolve Solutions’ incident management operations from reactive and inefficient to proactive, skill-aware, and SLA-compliant. The event log provides a goldmine of behavioral data that, when analyzed through the lens of process mining, can uncover hidden inefficiencies, expose root causes, and enable data-driven redesign of the resource assignment logic.

Below is a structured, comprehensive approach addressing each of the five key aspects of your request.

---

## **1. Analyzing Resource Behavior and Assignment Patterns**

Process mining enables us to move beyond assumptions and visualize the *as-is* process, especially how resources interact with tickets across time and tiers. Using the detailed event log, we can conduct a granular analysis of agent behavior and assignment dynamics.

### **Key Metrics for Agent and Tier Performance Analysis**

We will compute the following **resource-centric KPIs** segmented by agent, tier, and skill:

- **Workload Distribution:**
  - Number of tickets handled per agent/tier per week.
  - Average concurrent workload (tickets in progress).
  - Workload imbalance index (e.g., Gini coefficient or standard deviation of ticket volume across agents in the same tier).

- **Processing Efficiency:**
  - Average handling time (AHT) per activity (e.g., "Work L1 Start  Work L1 End") by agent and tier.
  - Time-to-assignment after creation or escalation.
  - Idle time between assignment and work start (indicates delays in picking up tickets).

- **Resolution Effectiveness:**
  - First-Call Resolution (FCR) rate for L1 agents: % of tickets resolved without escalation.
  - Escalation rate by L1 agent and by ticket category/skill.
  - Reassignment frequency per agent/tier (number of “Reassign” or “Escalate” events per ticket).

- **Skill Utilization:**
  - % of time agents spend on tasks matching their documented skills.
  - Frequency with which agents handle tickets requiring skills *not* listed in their profile (potential upskilling or misclassification).
  - Utilization rate of high-demand skills (e.g., 'Security-IAM', 'Networking-Firewall') — are specialists underused or overwhelmed?

### **Process Mining Techniques to Reveal Actual Assignment Patterns**

- **Resource Interaction Analysis (Handover Mining):**
  - Visualize handovers between agents using a *social network map*. This reveals:
    - Frequent reassignment loops (e.g., Agent B12  B15  C03).
    - Centralized bottlenecks (e.g., one dispatcher assigning all tickets).
    - Unplanned peer-to-peer reassignments (indicative of poor initial assignment).

- **Variant Analysis with Resource Filtering:**
  - Compare process variants where:
    - Tickets are resolved in L1 vs. escalated.
    - Tickets have 0 reassignments vs. 2 reassignments.
  - Overlay resource paths to identify patterns: e.g., "All tickets escalated to L2 and reassigned twice passed through Agent B12 first."

- **Role Discovery & Skill Mapping:**
  - Apply role mining algorithms to group agents by actual behavior (not just declared tier).
  - Detect emergent roles (e.g., an L1 agent frequently handling network issues may function as a de facto L2 network triage).
  - Cross-reference actual ticket handling with documented skills to identify **skill gaps or overqualification**.

### **Comparison: As-Is vs. Intended Assignment Logic**

The current logic (round-robin + manual escalation) assumes:
- Uniform agent capability.
- Even workload distribution.
- Accurate escalation decisions.

Process mining will expose deviations:
- **Skill-blind round-robin** leads to mismatched assignments.
- **Manual escalations** are inconsistent — some L1 agents escalate too quickly, others delay escalation unnecessarily.
- **Dispatcher behavior** may show bias (e.g., always assigning CRM tickets to same L2 agent).

By visualizing the actual flow, we can quantify how often the process deviates from the intended model — a critical step toward redesign.

---

## **2. Identifying Resource-Related Bottlenecks and Issues**

Using process conformance checking and performance mining, we can pinpoint inefficiencies and quantify their impact.

### **Key Bottlenecks and Their Quantification**

| **Issue** | **Detection Method** | **Quantification Example** |
|--------|---------------------|----------------------------|
| **Skill Shortage Bottlenecks** | Filter cases where `Required Skill` = 'Security-IAM' and measure queue time at L2/L3. | 45% of IAM tickets wait >2 hrs for assignment vs. 12% average. |
| **Excessive Reassignments** | Count “Reassign” and “Escalate” events per case. Cluster cases with 2 reassignments. | 38% of P2/P3 tickets undergo 2 reassignments; average delay = 1.8 hrs per reassignment. |
| **Incorrect Initial Assignment** | Identify cases where L1 is assigned but escalates within 10 mins. | 62% of Network-Firewall tickets assigned to L1 are escalated within 15 mins (indicating misrouting). |
| **Overloaded Agents** | Compute workload per agent; flag those above 90th percentile. | Top 3 L2 agents handle 35% of all App-CRM tickets; their AHT is 28% higher due to fatigue. |
| **Underutilized Specialists** | Find agents with rare skills (e.g., DB-SQL) but low ticket volume. | Agent B15 (DB-SQL expert) handles only 4 tickets/month despite 20+ DB-related tickets in queue. |
| **SLA Breach Correlation** | Overlay SLA breach flag on process map; correlate with reassignment count and skill mismatch. | 70% of breached P2 tickets had 2 reassignments; 55% involved skill mismatch at L2. |

### **Performance Mining Insights**

- **Time-based heatmaps** on the process map will show delays at “Assign L2” and “Reassign” steps — revealing handoff inefficiencies.
- **Throughput analysis** per skill group shows that tickets requiring 'Database-SQL' take 2.3x longer to resolve than average, primarily due to poor initial assignment and low skill availability.

These insights shift the narrative from “we have SLA issues” to “we have **assignment-driven delays** that disproportionately affect high-skill, medium-priority tickets.”

---

## **3. Root Cause Analysis for Assignment Inefficiencies**

The data reveals symptoms; root cause analysis uncovers systemic flaws. We use **variant analysis**, **decision mining**, and **correlation analysis** to drill down.

### **Potential Root Causes**

1. **Deficient Assignment Rules:**
   - Round-robin ignores skill and workload. Process mining shows tickets are assigned to the next available agent, not the *most suitable* one.
   - **Evidence**: High reassignment rate for skill-specific tickets (e.g., CRM, Firewall) despite available specialists.

2. **Inaccurate or Incomplete Skill Profiles:**
   - Agents may have undocumented skills or outdated certifications.
   - **Evidence**: Agent A02 (L1) frequently handles Network tickets — possibly trained but not updated in system.

3. **Poor Initial Categorization:**
   - Tickets labeled “Software-App” may actually require DB-SQL, but L1 cannot detect this from description.
   - **Evidence**: 50% of “Reassign” events cite “wrong skill required” in notes.

4. **Lack of Real-Time Workload Visibility:**
   - Dispatchers assign without knowing current agent load.
   - **Evidence**: Agents with high open tickets receive new assignments within minutes, increasing multitasking and delay.

5. **L1 Under-Empowerment or Training Gaps:**
   - High escalation rate for resolvable issues (e.g., password resets misclassified as P2).
   - **Evidence**: 40% of “Access Management” tickets escalated from L1 could be resolved with better knowledge base access.

### **Analytical Techniques for Root Cause Identification**

- **Decision Mining:**
  - Build a decision tree predicting “Escalate to L2” based on:
    - Ticket category, priority, agent, time of day, duration in L1.
  - Find that **Category = Network** and **Agent = A05** are top predictors — suggests agent-specific escalation bias.

- **Variant Comparison:**
  - Compare two clusters:
    - **Smooth Path**: Ticket Created  Assign L2 (correct skill)  Resolve (no reassign).
    - **Bumpy Path**: Multiple reassigns, SLA breach.
  - Discover that bumpy paths are 8x more likely when initial L2 assignment was not skill-matched.

These analyses confirm that **assignment inefficiency is systemic**, not just individual performance issues.

---

## **4. Developing Data-Driven Resource Assignment Strategies**

Based on the insights, I propose **three concrete, data-driven strategies** to optimize resource assignment.

---

### **Strategy 1: Skill-Based Routing with Proficiency Weighting**

**Issue Addressed:** Mismatched assignments, underutilized specialists, excessive reassignments.

**How It Leverages Process Mining:**
- Uses discovered skill-tickethandling patterns to map which agents *actually* resolve specific skill-based tickets.
- Incorporates proficiency inferred from resolution time and success rate per skill.

**Implementation Requirements:**
- **Data Inputs:**
  - Agent skill profiles (updated).
  - Historical resolution success rate and AHT per agent-skill pair.
  - Ticket’s `Required Skill` (from category + NLP on description).
- **Routing Logic:**
  - Assign to agent with:
    1. Required skill.
    2. Highest proficiency score (e.g., low AHT + high resolution rate).
    3. Lowest current workload.

**Expected Benefits:**
- 40–50% reduction in reassignments.
- 25% improvement in L2 resolution time.
- Better utilization of specialized agents.

---

### **Strategy 2: Workload-Aware Dynamic Assignment Algorithm**

**Issue Addressed:** Overloaded agents, idle specialists, delays due to poor load balancing.

**How It Leverages Process Mining:**
- Uses workload distribution analysis to identify imbalance.
- Models real-time agent capacity based on open tickets, AHT trends, and SLA urgency.

**Implementation Requirements:**
- **Data Inputs:**
  - Real-time queue status (tickets in progress per agent).
  - Average handling time per ticket type.
  - SLA deadlines (based on priority).
  - Agent availability (status: idle, busy, on break).
- **Algorithm:**
  - Score agents using a composite index:
    ```
    Assignment Score = 
      (1 / Workload Index) × 
      (Skill Match Weight) × 
      (SLA Proximity Bonus if P1/P2)
    ```
  - Assign to highest-scoring available agent.

**Expected Benefits:**
- 30% reduction in time-to-assignment.
- Smoother workload distribution (Gini coefficient reduced by 40%).
- Fewer SLA breaches due to agent overload.

---

### **Strategy 3: Predictive Skill & Escalation Intelligence**

**Issue Addressed:** Poor initial triage, excessive L1 escalations, inaccurate categorization.

**How It Leverages Process Mining:**
- Uses decision mining and NLP on ticket descriptions to predict required skills and escalation likelihood.
- Trains a model on historical data: "Which tickets escalate from L1? What keywords predict DB-SQL need?"

**Implementation Requirements:**
- **Data Inputs:**
  - Ticket title, description (text).
  - Category, priority, channel.
  - Historical escalation/reassignment labels.
- **Model:**
  - NLP model (e.g., BERT-based) to extract skill intent from text.
  - Predictive model to flag "High Escalation Risk" tickets at creation.
- **Routing Logic:**
  - Automatically route high-risk or skill-specific tickets directly to L2 *if* an L2 agent is available.
  - Suggest skill tags to L1 agents during triage.

**Expected Benefits:**
- 50% reduction in L1 escalations for predictable skill-based tickets.
- 20% faster routing to correct tier.
- Improved accuracy of skill tagging and reduced reassignments.

---

## **5. Simulation, Implementation, and Monitoring**

Before deploying changes, we validate impact using simulation and establish a continuous improvement loop.

### **Business Process Simulation**

- **Tool**: Use a discrete-event simulation engine (e.g., in Celonis, Signavio, or AnyLogic) fed with:
  - Mined process model (with variants).
  - Resource profiles (skills, availability, AHT).
  - Ticket arrival patterns (volume, priority, category distribution).
- **Simulation Scenarios:**
  1. **Current State**: Round-robin + manual escalation.
  2. **Future State 1**: Skill-based routing.
  3. **Future State 2**: Workload-aware + predictive assignment.
- **Metrics to Compare:**
  - Average resolution time.
  - SLA compliance rate.
  - Reassignment frequency.
  - Agent utilization balance.

**Outcome**: Quantify expected improvement (e.g., “SLA compliance improves from 78% to 92%”) and identify potential risks (e.g., L2 overload under predictive routing).

### **Post-Implementation Monitoring Plan**

Establish a **Process Mining Dashboard** for continuous monitoring:

#### **Key Resource-Related KPIs to Track:**
| **KPI** | **Purpose** |
|--------|-----------|
| % Tickets with Zero Reassignments | Measures assignment accuracy |
| Average Time-to-Assignment by Tier | Monitors handoff efficiency |
| Skill Match Rate (assigned vs. required) | Tracks routing precision |
| Agent Workload Balance Index (Gini) | Ensures fair distribution |
| L1 First-Call Resolution Rate | Measures L1 empowerment |
| SLA Breach Rate by Priority & Category | Links performance to outcomes |

#### **Process Views in Dashboard:**
- **Resource-Centric Map**: Show flow of tickets per agent, highlighting reassignments.
- **Bottleneck Heatmap**: Highlight steps with longest waiting times (e.g., “Assign L2”).
- **Skill Utilization Matrix**: Cross-tab of agent skills vs. tickets handled.
- **Escalation Path Analysis**: Tree of common escalation sequences.

#### **Feedback Loop:**
- Monthly review of dashboard with service desk managers.
- Retrain predictive models quarterly with new data.
- Update skill profiles based on actual ticket resolution patterns.

---

## **Conclusion**

TechSolve’s challenges are not due to agent incompetence but to **a misaligned, data-poor assignment system**. By applying process mining, we shift from anecdotal fixes to **evidence-based optimization**. The proposed strategies — skill-based routing, workload-aware assignment, and predictive intelligence — are grounded in the actual behavior captured in the event log.

The path forward is:
1. **Analyze** the current process with process mining.
2. **Diagnose** root causes using variant and decision mining.
3. **Design** improved assignment logic.
4. **Simulate** impact before rollout.
5. **Implement and Monitor** with real-time dashboards.

This approach will reduce reassignments, improve SLA compliance, empower L1 agents, and ensure that specialized skills are used where they add the most value — transforming TechSolve’s service desk into a responsive, efficient, and scalable operation.