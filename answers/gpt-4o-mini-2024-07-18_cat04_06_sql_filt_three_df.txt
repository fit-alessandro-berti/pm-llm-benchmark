To achieve the requirements outlined in your prompt, we will write a DuckDB SQL query that follows the necessary steps:

1. Identify cases that contain the sequence of three activities in the specified order.
2. Check if the time between 'Create Order' and 'Confirm Order' exceeds 5 days.
3. Exclude those cases from the final result and return all the remaining events.

Here's how you can write the query:

```sql
WITH sequence_cases AS (
    SELECT 
        e1.case_id
    FROM 
        event_log e1
    JOIN 
        event_log e2 ON e1.case_id = e2.case_id AND e1.timestamp < e2.timestamp
    JOIN 
        event_log e3 ON e2.case_id = e3.case_id AND e2.timestamp < e3.timestamp
    WHERE 
        e1.activity = 'Approve Purchase Requisition' AND
        e2.activity = 'Create Order' AND
        e3.activity = 'Confirm Order'
),
timed_cases AS (
    SELECT 
        sc.case_id
    FROM 
        sequence_cases sc
    JOIN 
        event_log e2 ON sc.case_id = e2.case_id
    JOIN 
        event_log e3 ON sc.case_id = e3.case_id
    WHERE 
        e2.activity = 'Create Order' AND
        e3.activity = 'Confirm Order' AND
        e3.timestamp > e2.timestamp AND
        julianday(e3.timestamp) - julianday(e2.timestamp) > 5
)
SELECT 
    *
FROM 
    event_log
WHERE 
    case_id NOT IN (SELECT case_id FROM timed_cases)
ORDER BY 
    case_id, timestamp;
```

### Explanation of the Query:

1. **Common Table Expression (CTE) - `sequence_cases`:**
   - This CTE identifies the cases with the specified activity sequence in direct succession. It uses self-joins on the `event_log` table to find three events (`e1`, `e2`, `e3`), ensuring that their timestamps are in the correct order.

2. **CTE - `timed_cases`:**
   - This CTE filters the previously identified `sequence_cases` to find which of these sequences have a time difference of more than 5 days between the 'Create Order' and 'Confirm Order' events. It uses `julianday()` to compute the difference between the timestamps.

3. **Final Selection:**
   - The main query selects all records from the `event_log`, excluding any cases found in `timed_cases`. The result is ordered by `case_id` and `timestamp` for better organization of the output. 

With this query, you will effectively filter out the undesired cases while retaining everything else from the `event_log`.