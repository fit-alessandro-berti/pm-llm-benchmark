Here are the two POWL models representing the hiring process at GlobalTeq Solutions, one demonstrating potential unfairness and the other without it.

```python
import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# --- Shared Activities and Loop Components ---
ReceiveApplication = Transition(label="ReceiveApplication")
ResumeParsing_InitialDataCheck = Transition(label="ResumeParsing_InitialDataCheck")
RequestMoreInfo = Transition(label="RequestMoreInfo")
PreliminarySkillAssessment = Transition(label="PreliminarySkillAssessment")
ManagerialReview_FinalDecision = Transition(label="ManagerialReview_FinalDecision")

# The loop for data completeness: check (A), if incomplete, request (B) then check again.
DataCompletenessLoop = OperatorPOWL(operator=Operator.LOOP, children=[ResumeParsing_InitialDataCheck, RequestMoreInfo])

# --- 1. POWL Model with Potential Unfairness ---
# This model includes an XOR choice where one branch leads to a potentially biased evaluation.

# Cultural Fit Evaluation Branches
StandardCulturalFitEvaluation_Unfair = Transition(label="StandardCulturalFitEvaluation")
CommunityAffiliationCheck_Biased = Transition(label="CommunityAffiliationCheck_Biased") # This branch introduces bias

# The XOR operator for the cultural fit stage
CulturalFitXOR_Unfair = OperatorPOWL(operator=Operator.XOR, children=[StandardCulturalFitEvaluation_Unfair, CommunityAffiliationCheck_Biased])

# Construct the full POWL model for unfairness
powl_unfair_model = StrictPartialOrder(nodes=[
    ReceiveApplication,
    DataCompletenessLoop,
    PreliminarySkillAssessment,
    CulturalFitXOR_Unfair,
    ManagerialReview_FinalDecision
])

# Define the sequential order of activities for the unfair model
powl_unfair_model.order.add_edge(ReceiveApplication, DataCompletenessLoop)
powl_unfair_model.order.add_edge(DataCompletenessLoop, PreliminarySkillAssessment)
powl_unfair_model.order.add_edge(PreliminarySkillAssessment, CulturalFitXOR_Unfair)
powl_unfair_model.order.add_edge(CulturalFitXOR_Unfair, ManagerialReview_FinalDecision)

print("--- POWL Model with Potential Unfairness ---")
print(powl_unfair_model)
# You can visualize this if you have pm4py visualization dependencies installed
# pm4py.view_powl(powl_unfair_model)


# --- 2. POWL Model Without Unfairness ---
# This model ensures all applicants go through the same cultural fit evaluation process.

# Unified Cultural Fit Evaluation (no bias branch)
CulturalFitEvaluation_Fair = Transition(label="CulturalFitEvaluation")

# Construct the full POWL model without unfairness
powl_fair_model = StrictPartialOrder(nodes=[
    ReceiveApplication,
    DataCompletenessLoop,
    PreliminarySkillAssessment,
    CulturalFitEvaluation_Fair, # Only one path for cultural fit
    ManagerialReview_FinalDecision
])

# Define the sequential order of activities for the fair model
powl_fair_model.order.add_edge(ReceiveApplication, DataCompletenessLoop)
powl_fair_model.order.add_edge(DataCompletenessLoop, PreliminarySkillAssessment)
powl_fair_model.order.add_edge(PreliminarySkillAssessment, CulturalFitEvaluation_Fair)
powl_fair_model.order.add_edge(CulturalFitEvaluation_Fair, ManagerialReview_FinalDecision)

print("\n--- POWL Model Without Unfairness ---")
print(powl_fair_model)
# You can visualize this if you have pm4py visualization dependencies installed
# pm4py.view_powl(powl_fair_model)

```