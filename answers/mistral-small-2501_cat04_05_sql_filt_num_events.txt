To achieve the desired result, you need to follow a few steps:

1. Count the number of events per `case_id`.
2. Filter out the cases that have more than six events.
3. Select the events for the remaining cases.

Here's how you can do it using DuckDB SQL:

```sql
WITH event_counts AS (
    SELECT
        case_id,
        COUNT(*) AS event_count
    FROM
        event_log
    GROUP BY
        case_id
),
filtered_cases AS (
    SELECT
        case_id
    FROM
        event_counts
    WHERE
        event_count <= 6
)
SELECT
    el.*
FROM
    event_log el
JOIN
    filtered_cases fc
ON
    el.case_id = fc.case_id
ORDER BY
    el.case_id, el.timestamp;
```

### Explanation:

1. **event_counts CTE**:
   - This common table expression (CTE) calculates the number of events for each `case_id` by grouping the events and counting them.

2. **filtered_cases CTE**:
   - This CTE filters out the `case_id`s that have more than six events by selecting only those with an `event_count` of six or fewer.

3. **Final SELECT**:
   - The final query joins the original `event_log` table with the `filtered_cases` CTE on the `case_id` to get the events for the cases that have six or fewer events.
   - The result is ordered by `case_id` and `timestamp` for better readability.

This query ensures that you only get events from cases with six or fewer events, effectively filtering out any cases that exceed this limit.