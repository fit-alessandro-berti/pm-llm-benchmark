What you are looking at is a control-flow model of a business process that is drawn in the “functions-and-connectors” style that comes from EPCs and workflow/Petri-net notation.

1. Building blocks  
   • White rounded rectangles = activities (sometimes called “functions” or “tasks”).  
   • Black dots = logical connectors (places in a Petri net).  
   • The legend at the lower-right explains the meaning of the connectors:  
     – XOR-split / XOR-join(exclusive choice: exactly one branch is taken or accepted)  
     – AND-split / AND-join(parallelism: all outgoing branches are started, all incoming must complete)  
     – OR-split / OR-join(inclusive choice: any non-empty subset of branches is taken or accepted)  
   The little curved return arrows on the OR-join icon indicate that the join does **not** wait for every branch, only for those that were actually started.

2. Overall flow (from left to right)  
   a“register request” is the unique start activity.  
    Its outgoing connector is an OR-split that can launch one or more of three examination paths in any combination:  
        b“examine thoroughly”  
        c“examine casually”  
        d“check ticket”  
    All examination paths converge in an OR-join before e“decide”.  
   e“decide” may conclude the case or send it back for another round of examination:  
        • XOR-split to f“re-initiate request” (loop back to the first OR-split) or continue forward.  
    When the case proceeds, an XOR-split chooses between the two mutually exclusive outcomes:  
        g“pay compensation”orh“reject request”  
    An XOR-join merges those alternatives and leads to z“end”, the unique final activity.

3. What the diagram tells us about behaviour  
   • Examinations can run in parallel or in sequence and only the subset that was really triggered must finish before the decision can be taken; this is why OR-connectors are used, not AND or XOR.  
   • After deciding, the requester can be sent back into the examination phase any number of times (loop via f).  
   • The case is closed by either paying compensation or rejecting the request—never both (exclusive choice).  
   • There is exactly one start point (a) and one end point (z), so the model is a well-formed workflow (a WF-net).

Put differently, the picture captures a ticket/claim-handling process that allows flexible (optional and parallel) investigation activities, a possible re-work loop, and two exclusive final outcomes, with the logical meaning of every branching and merging point made explicit in the legend.