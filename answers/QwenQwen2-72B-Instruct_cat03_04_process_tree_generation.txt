Here's the Python code necessary to generate a process tree for a hypothetical Purchase-to-Pay (P2P) process using pm4py library:

```python
from pm4py.objects.process_tree.obj import ProcessTree, Operator

# Root process tree for the parallel block of activities 'Create purchase order' and 'Order goods'
p2p_tree = ProcessTree(operator=Operator.PARALLEL)

# 'Create purchase order' ProcessTree
create_po = ProcessTree(label="Create purchase order", parent=p2p_tree)

# 'Order goods and services' ProcessTree
order_goods = ProcessTree(label="Order goods and services", parent=p2p_tree)

# Sequence block for activities related to 'Requisition approval'
approve_req = ProcessTree(operator=Operator.SEQUENCE, parent=p2p_tree)
# 'Approve requisition' ProcessTree
approve_requisition = ProcessTree(label="Approve requisition", parent=approve_req)
# 'Reject requisition' ProcessTree (to be executed only when 'Approve requisition' is not executed)
reject_requisition = ProcessTree(label="Reject requisition", parent=approve_req)

# Add 'Create purchase order', 'Order goods', 'Approve requisition', and 'Reject requisition' to root process tree
p2p_tree.children.append(create_po)
p2p_tree.children.append(order_goods)
p2p_tree.children.append(approve_req)

# Add nodes to the 'approve_req' sequence block
approve_req.children.append(approve_requisition)
approve_req.children.append(reject_requisition)

# Note: The 'Reject requisition' will only be executed when 'Approve requisition' is not executed
# We can use the XOR operator to represent this exclusive choice
approve_req.operator = Operator.XOR

# Now 'Receive goods and invoice' ProcessTree should be executed at least once and repeatedly
receive_goods = ProcessTree(operator=Operator.LOOP, parent=p2p_tree)
receive_goods.label = "Receive goods and invoice"

# Add 'Receive goods and invoice' to root process tree
p2p_tree.children.append(receive_goods)

# Children should point to their parent as well
create_po.parent = p2p_tree
order_goods.parent = p2p_tree
approve_req.parent = p2p_tree
approve_requisition.parent = approve_req
reject_requisition.parent = approve_req
receive_goods.parent = p2p_tree
```

However please note that the provided process tree (P2P) structure