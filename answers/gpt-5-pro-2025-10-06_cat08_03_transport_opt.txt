Below is a structured, end-to-end approach that blends process mining with transportation domain practices to diagnose and optimize Speedy Parcels’ lastmile operations.

1) Process discovery and conformance checking

1.1 Data preprocessing and integration
- Define objects and cases
  - Primary case: Vehicle-Day (e.g., V12-20241205) to discover the operational day flow (depart depot  multiple stops  return).
  - Secondary case: Package (Package ID) to analyze first-attempt success, service time, and customer-level effects.
  - Optional object-centric model: Vehicles, Drivers, Packages, Stops, Maintenance Orders linked via keys to support multi-entity analysis. If tooling is not object-centric, maintain two separate logs (Vehicle-Day and Package) plus linking keys.

- Normalize and align time
  - Unify timestamp format, time zones, and clocks across GPS, scanner, dispatch, and maintenance systems.
  - De-duplicate near-identical events; resolve out-of-order events using strict timestamp sorting with a small reorder buffer (e.g., 2–5 minutes).

- GPS treatment and stop detection
  - Map-match GPS points to road networks (e.g., OpenStreetMap).
  - Detect “stop episodes” using speed and dwell thresholds (e.g., speed < 3 km/h and displacement < 50 m for  90 seconds). Classify stops as:
    - Customer stop: within geofence of planned address.
    - Traffic delay: prolonged low speed outside customer geofences.
    - Break/fueling: low speed at break/fuel geofences.
    - Unscheduled/maintenance: joins with maintenance records or engine-warning events.
  - Segment the day into Drive segments and Stop/Service segments.

- Merge scanner and dispatch data
  - Join scanner events to nearest detected stop by spatio-temporal proximity and to the planned stop ID from dispatch.
  - Add planned sequence order, planned arrival/start-service times, and time windows to the joined events.
  - Tolerate scanning anomalies (e.g., “Arrive Customer” scanned after the package handover) with guardrails (e.g., allow ±10 minutes, 100 m geospatial tolerance).

- Incorporate maintenance logs
  - Add “Maintenance Start/End” events with reason codes. For on-route issues, create “Unscheduled Stop – Maintenance” events linked to low-speed or stopped GPS episodes and engine warning telemetry.

- Event schema (typical fields)
  - case_id, timestamp, activity (Depart Depot, Arrive Customer, Delivery Success, Delivery Failed, Depart Customer, Drive, Low Speed Detected, Unscheduled Stop – Maintenance, Refuel, Return Depot, etc.), vehicle_id, driver_id, package_id (optional per event), stop_id (planned), coordinates, speed, planned_arrival, planned_departure, time_window_start/end, notes.
  - Data quality flags: GPS quality, scan anomaly, geofence confidence.

- Key challenges and mitigations
  - Clock drift or inconsistent time zones: NTP-sync devices; apply per-source offsets if needed.
  - GPS noise and multipath in urban canyons: map-matching and clustering to stabilize tracks.
  - Incomplete scans or mis-sequenced scanner events: proximity-based reconciliation; conservative defaults; maintain “unknown stop” classification rather than forcing incorrect matches.
  - Different granularities: sampling rates vary by source; use segmentation to harmonize (drive vs service vs idle).
  - Ambiguous stops (e.g., same building with multiple tenants): granular geofences; planned stop IDs; address resolution.

1.2 Process discovery
- Build two discovery views
  - Vehicle-Day view: Inductive Miner (IMf) or Fodina/Heuristics Miner to handle loops and noise, producing a sound model: Start Shift  Depart Depot  [Drive  Arrive Customer  Service (Success/Fail)  Depart Customer] repeated  Return Depot  End Shift. Include branches for Unplanned Stops (Fuel, Break, Maintenance).
  - Package view: from Scan at Depot  Out for Delivery  Arrive  Delivery Success/Failed  (Potential Reattempt variant).

- Visualization
  - Overlay performance metrics (median/95th percentile duration) on nodes and edges for DriveArrive, ArriveSuccess, SuccessDepart, and DriveLow Speed.
  - Identify optional paths (e.g., Delivery Failed  Reattempt same day vs deferred).

1.3 Conformance checking vs planned routes
- Build planned models per Vehicle-Day from dispatch (linear or near-linear sequences with expected travel/service times and time windows).
- Use alignment-based conformance checking
  - Compute fitness (how much of the planned path is executed), precision (extra behavior not in plan), and performance deviations (timing).
  - Sequence deviations: out-of-order stops, skipped stops, additional unplanned stops, loops/returns.
  - Timing deviations: early/late arrivals vs time windows, dwell/service time overruns, extended low-speed transitions.
  - Structural deviations: route segment detours (planned vs observed path), vehicle/driver swaps mid-route, unplanned depot returns.
- Output conformance KPIs
  - Route adherence index per case (e.g., normalized Levenshtein distance between planned and actual stop sequences).
  - Tardiness/earliness per stop; % time-window violations.
  - Planned vs actual distance and duration variance.
  - Count and duration of unplanned stops.

2) Performance analysis and bottleneck identification

2.1 KPIs and calculations
- On-Time Delivery Rate (OTD)
  - OTD = deliveries within customer time window / total deliveries attempted; compute first-attempt OTD separately.
- Average Time per Delivery Stop
  - mean(Depart Customer – Arrive Customer) per stop; split into parking/search time (first 0-speed near geofence  Arrive scan) and doorstep time (Arrive  Success/Fail).
- Travel Time vs Service Time Ratio
  - sum(Drive segment durations) / sum(Service durations).
- Fuel Consumption per km/package
  - If telematics fuel available: liters / distance and liters / packages delivered. If not, estimate via vehicle model curves + idle consumption: Fuel  a*distance + b*idle_time + c*stop-starts.
- Vehicle Utilization Rate
  - (Shift time spent moving + servicing) / (Total shift time); or stops completed / capacity.
- Traffic Delay Frequency/Duration
  - Count of low-speed episodes not at customer geofences, and their durations. Segment by time-of-day, corridor, and region.
- Failed Delivery Rate and Reattempt Rate
  - failed_attempts / attempts; packages needing 2 attempts / total packages.
- Route Reliability Index
  - 1 – (std dev of route duration / mean route duration) or % of routes finishing within planned slack.
- Maintenance/Breakdown metrics
  - MTBF (mean time between unscheduled stops), unscheduled maintenance minutes per 100 route-hours.
- Overtime Rate
  - % of shifts exceeding scheduled end by > X minutes.

2.2 Techniques to identify bottlenecks
- Performance-enhanced process maps
  - Highlight the slowest edges (e.g., Drive  Arrive, Arrive  Success) and long tails (95th percentile) by route, weekday, region.
- Process cube (slice-and-dice)
  - Compare performance by driver, vehicle type, route size, depot, region, weather, month. Detect systematic differences.
- Variant analysis
  - Cluster Vehicle-Day traces into variants (e.g., “clean” vs “many unplanned stops”). Compare KPIs between top variants to pinpoint patterns that drive delays.
- Transition-specific analysis
  - Long Drive  Arrive transitions flagged outside customer geofences = traffic/parking issues; long Arrive  Success = customer interaction or building-access issues.
- Geospatial hot-spotting
  - Heatmaps of low-speed segments and long service times; corridor-level analysis to identify recurrent congestion or curbside constraints.
- Queue/Depot analysis
  - Dotted charts/timelines around depot show start-of-day staging and end-of-day return queues.
- Quantifying impact
  - Attribute delays to causes (traffic vs parking vs customer interaction vs scanning issues) and sum minutes lost per route/day/driver. Convert to cost using fuel burn rates and overtime. Example: top 20 corridors with recurrent low-speed cost X hours/week; expected impact if rerouted or re-timed.

3) Root cause analysis for inefficiencies

Likely causes and how to validate them with process mining and data science:

- Suboptimal route planning (static vs dynamic)
  - Evidence: frequent resequencing, high route adherence deviation, late finishes on days with incidents. Validate by comparing planned vs actual with alignment costs; simulate re-optimized sequences on the actual day’s conditions to estimate avoided delay.

- Inaccurate travel time estimations
  - Evidence: systematic positive bias (actual > planned) on certain corridors/time bands. Validate: compute per-segment error distributions by hour-of-day/day-of-week; bias >15% indicates model misspecification.

- Traffic congestion patterns
  - Evidence: recurrent low-speed clusters by time/location. Validate by correlating low-speed events with external traffic feeds; construct time-based speed profiles per road link to identify predictable congestion windows.

- High variability in service time at customer locations
  - Evidence: wide IQR for Arrive  Success. Validate by segmenting by address type, building type, parcel size/weight, signature-required, floor/elevator flags. Decision mining can reveal rules like “Signature + Multi-tenant + 10:00–12:00  high service time.”

- Vehicle breakdowns/maintenance during shifts
  - Evidence: “Unscheduled Stop – Maintenance” frequency; increased low-speed immediately before breakdowns. Validate MTBF per vehicle, age, mileage; survival analysis to find risk factors; link engine-warning precursors to probability of route disruption.

- Driver behavior/skill differences
  - Evidence: between-driver variance in parking/search time, adherence to planned sequence, idling, harsh events. Validate with driver scorecards controlling for route mix (use mixed-effects models to separate driver effect from route effect).

- Failed deliveries and re-deliveries
  - Evidence: higher failure rate in certain time windows or customer segments. Validate with variant analysis: routes with many failed deliveries show lower OTD and increased distance/time next day. Uplift modeling on proactive customer notifications or alternative delivery options.

4) Data-driven optimization strategies

Strategy A: Dynamic routing and ETA management with predicted service times
- Targeted inefficiency
  - Late deliveries, long drive times, sensitivity to incidents.
- Root cause addressed
  - Static daily planning and inaccurate travel/service time assumptions; lack of real-time response to traffic and variable service times.
- What to implement
  - Build predictive models for travel time by road/time-of-day and service time by stop attributes.
  - Run rolling re-optimization (e.g., every 15–30 minutes or event-driven) to resequence remaining stops when predicted tardiness exceeds thresholds.
  - Push updated ETAs to customers and drivers; respect hard constraints (time windows, driver hours, capacity).
- Process mining evidence
  - Measured recurrent alignment deviations, traffic hot spots, and inflated Arrive  Success variance by segment/time.
- Expected KPI impact (typical ranges)
  - OTD +3 to +8 percentage points.
  - Route duration 5 to 10%.
  - Overtime rate 20 to 40%.
  - Fuel per km 3 to 7% (fewer detours/stop-starts).

Strategy B: Territory and sequence optimization plus depot flow smoothing
- Targeted inefficiency
  - Excessive travel between sparsely clustered stops; start/end-of-day depot congestion.
- Root cause addressed
  - Unbalanced territories; suboptimal stop clustering; synchronized departures causing bottlenecks.
- What to implement
  - Redesign delivery territories using historical demand density and service-time distributions; aim for balanced Travel:Service ratio and stops/hour.
  - Time-stagger departures/returns; introduce wave scheduling to reduce depot queueing.
  - Sequence within territories using learned travel/service times; cap max stops per driver-day by area density.
- Process mining evidence
  - High Drive:Service ratios; frequent depot waiting; routes with distance variance and long first/last-mile transitions.
- Expected KPI impact
  - Travel time 8 to 15%; fuel per package 6 to 12%.
  - Depot wait time 30 to 60%; improved reliability (lower route duration variance).

Strategy C: First-attempt delivery uplift via proactive customer orchestration
- Targeted inefficiency
  - High failed delivery rate and costly re-deliveries.
- Root cause addressed
  - Mismatch between arrival times and recipient availability; unclear access instructions; signature-required stops at low-availability times.
- What to implement
  - Predict failure risk per stop (features: time-of-day, address type, historical success, parcel attributes).
  - For high-risk stops: proactive SMS with live ETA and reschedule options, safe-drop/neighbor/locker options, and access instructions.
  - Re-slot high-risk stops to higher-availability windows when feasible.
- Process mining evidence
  - Variant analysis showing reattempt loops; time-window clusters with high failure probability.
- Expected KPI impact
  - Failed delivery rate 20 to 40%; first-attempt OTD +5 to +12 pp.
  - Distance/time next day 10 to 20% for affected routes.

Strategy D: Predictive maintenance and in-shift fail-prevention
- Targeted inefficiency
  - Unscheduled stops and breakdowns causing route disruptions and overtime.
- Root cause addressed
  - Reactive maintenance; ignoring early warning signals.
- What to implement
  - Predictive models using engine warnings, temperature/voltage patterns, prior repairs, mileage; schedule maintenance preemptively.
  - Block vehicles at elevated risk from long urban routes; assign to shorter suburban loops or swap vehicles pre-shift.
- Process mining evidence
  - MTBF trends; precursors observed before Unscheduled Stop – Maintenance nodes; alignment breaks on breakdown days.
- Expected KPI impact
  - Unscheduled maintenance 30 to 50%; OTD +1 to +3 pp; overtime 5 to 10%.

Strategy E: Parking and curbside playbook at chronic addresses
- Targeted inefficiency
  - Long parking/search and approach times at specific downtown addresses.
- Root cause addressed
  - Lack of known safe curb locations; micro-geography constraints.
- What to implement
  - From historical traces, infer best parking spots per address and time band; embed as geo-hints in driver app/navigation.
  - Use micro-hubs/cargo bikes for dense cores if heavy curb constraints persist.
- Process mining evidence
  - Recurrent Arrive  Success outliers concentrated at certain lat/lon clusters.
- Expected KPI impact
  - Service time at affected stops 15 to 30%; modest fuel savings via reduced circling.

Strategy F: Driver performance coaching and scanning discipline
- Targeted inefficiency
  - Variability in stop handling and scanning latency; excessive idling.
- Root cause addressed
  - Behavioral differences; non-standard workarounds; inconsistent scanning.
- What to implement
  - Driver scorecards normalized for route mix; micro-coaching on top improvement levers (parking approach, scan timing, idle reduction).
  - In-cab nudges: long idle alerts; “scan on arrival” prompts.
- Process mining evidence
  - Between-driver variance after controlling for route attributes; compliance deviations in conformance checks.
- Expected KPI impact
  - Average stop time 5 to 10%; idle time 10 to 25%; OTD +1 to +3 pp.

5) Considering operational constraints and monitoring

5.1 Respecting constraints in optimization
- Driver working hours and breaks
  - Enforce legal/regulatory limits (e.g., Working Time Directive), mandatory breaks, and maximum shift durations within routing solver constraints; account for overtime costs as soft penalties.
- Vehicle capacities and compatibilities
  - Maintain capacity (volume/weight), parcel handling constraints (e.g., oversize), and vehicle access rules (low-emission zones, height limits).
- Customer time windows and SLAs
  - Treat as hard constraints when contractual; otherwise apply soft penalties with cost-of-violation estimates to support controlled resequencing.
- Operational realities
  - Depot cut-off times, handover processes, fueling needs, and driver swaps modeled as activities with durations and feasibility checks.
- Safety and compliance
  - Adhere to speed limits; avoid restricted turns/roads; apply curb regulations where known.

5.2 Continuous monitoring and control plan
- Dashboards (near real-time and daily)
  - OTD (overall/first-attempt), time-window violations, route adherence index, route duration and variance, Travel:Service ratio, depot queue times, failed delivery rate, reattempts, fuel per km/package, idle share, overtime rate, MTBF, unscheduled stop minutes.
  - Performance overlays on discovered model to watch edge/node durations and outliers.
- Early warning and alerts
  - Predictive late-risk per stop/route; alert when predicted tardiness > threshold.
  - Traffic incident impact estimator: “ETA delta > X minutes for next N stops.”
  - Maintenance risk flags pre-shift; in-shift engine warnings initiate contingency plans.
- Conformance and drift monitoring
  - Alignment fitness and sequence deviation rates trend; drilldowns by driver/vehicle/route class.
  - Detect concept drift (changes in travel/service time distributions); auto-retrain models.
- A/B testing and governance
  - Roll out strategies to subsets of routes/drivers; compare KPI lift vs controls.
  - Weekly ops review: top bottleneck corridors and addresses; action list for curb playbook updates.
- Data quality monitoring
  - Missing or delayed scans, GPS gaps, geofence mismatches; feedback loop to fix source systems or heuristics.

Putting it together: delivery-focused process mining playbook
- Build integrated, quality-checked event logs with GPS-driven stop detection and strong linkage to dispatch plans and maintenance data.
- Discover actual processes and compare to plan using alignment-based conformance; quantify where, when, and why deviations occur.
- Prioritize bottlenecks with measurable business impact (minutes lost  cost/OTD impact).
- Deploy targeted optimizations: dynamic routing with predicted service times, territory/sequence redesign and depot flow smoothing, first-attempt delivery uplift, predictive maintenance, parking playbooks, and driver coaching.
- Monitor continuously with process mining dashboards and predictive alerts, enforcing operational constraints and closing the loop via A/B-tested improvements.

This approach leverages the collected six months of data to produce concrete, defensible changes that improve punctuality and reduce fuel and maintenance costs while building a sustainable control framework for ongoing operations.