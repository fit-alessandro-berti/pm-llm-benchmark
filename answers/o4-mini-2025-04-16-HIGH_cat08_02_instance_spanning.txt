1. Identifying Instance-Spanning Constraints and Their Impact  
--------------------------------------------------------------------------------  
A. Use of Process Mining Techniques  
• Extract a “performance-enhanced” process model from the event log (e.g., with Disco, Celonis, PM4Py).  
• Overlay resource-based queues and handover delays on each activity.  
• Enrich each trace with attributes: Order Type, Destination Region, Requires Cold-Packing, Hazardous Material.  
• Perform conformance checking to spot deviations due to priority preemptions or regulatory blocking.  

B. Metrics per Constraint  
1. Shared Cold-Packing Stations  
  – Resource Utilization: % busy time per station (especially specialized ones C1–C5).  
  – Contention Delay: for each case requiring cold-packing, compute waiting_time = start_of_Packing – ready_for_Packing.  
  – Queue Length over time: average backlog of cold-packing orders.  

2. Shipping Batches  
  – Batch Formation Delay: for each completed case, delay_batch = actual_label_gen_time – ready_for_label_time.  
  – Batch Size vs. Delay curve: average batch size versus average waiting.  
  – Region-specific batching frequency.  

3. Priority (Express) Preemptions  
  – Preemption Count: number of times a standard order’s Packing start or ongoing Packing is paused or delayed due to an arriving express.  
  – Delay to Standard: extra waiting_time_standard = (actual start – scheduled start_without_preemption).  
  – Express Lead-time Reduction: compare express cycle time when no contention vs. with contention relief.  

4. Hazardous Material Concurrency  
  – Concurrency Level: time series of # HM orders simultaneously in Packing or QC.  
  – Regulatory Blocking Delays: count and sum of delays where HM orders are held before Packing/QC due to active HM count =10.  

C. Separating Within- vs. Between-Instance Waiting  
• Within-instance processing time = complete_timestamp – start_timestamp of each activity.  
• Between-instance (inter-case) waiting = start_timestamp_of_activity – completion_timestamp_of_previous_activity_for_same_case – (if any) intentional minimal gap.  
• Classify waiting type via resource occupancy logs:  
  – If the resource was idle just before an activity’s start, waiting was within-case (downstream delay).  
  – If resource was busy with another case (queue>0), waiting is inter-case.  

2. Analyzing Constraint Interactions  
--------------------------------------------------------------------------------  
• Express & Cold-Packing: Express orders seize cold-packing stations immediately, pushing standard orders’ queue length higher and increasing their delay.  
• Batching & Hazardous Limits: If multiple HM orders for “North” queue for a batch, they may hit the 10-concurrent limit in Packing/QC, causing batch-size drops or delays to avoid regulatory breaches.  
• Priority & Hazardous Together: An express HM order can preempt not only standard cold-packs but also HM slots in QC, exacerbating compliance risk.  
• Cold-Packing & Batching: Perishables often go to certain regions; if those regions batch infrequently, cold-packed items wait longer in label-generation – raising spoilage risk.  

Understanding these cross-effects is vital: a fix for one constraint (e.g., speeding express) can worsen another (e.g., HM compliance).  

3. Constraint-Aware Optimization Strategies  
--------------------------------------------------------------------------------  
Strategy A: Predictive & Reserved Capacity for Cold-Packing  
• Targeted Constraints: Shared Cold-Packing + Priority Preemption  
• Change:  
  – Forecast per-minute demand for cold-packing (by order type) using historical peaks.  
  – Reserve 1–2 stations exclusively for express (or HM express) during peak windows.  
  – Dynamically flex the remaining stations: open “overflow” stations by cross-training staff.  
• Data Leverage: Time-series forecasting on arrival traces; resource utilization patterns.  
• Expected Outcomes:  
  – Standard orders see 20–30% lower cold-packing waiting.  
  – Express retains sub-2h end-to-end SLA.  
  – Fewer preemptions of ongoing standard jobs.  

Strategy B: Adaptive, Multi-Threshold Batch Formation  
• Targeted Constraints: Shipping Batches + Hazardous Material Limits  
• Change:  
  – Replace “fixed batch size or time” rule with a dual trigger:  
     1. Maximum wait threshold (e.g., 15 min)  
     2. Minimum batch size (e.g., 10 orders or weighted by region volume)  
  – For HM orders, enforce mini-batches of size 5 to prevent backlog in Packing/QC.  
  – Use region-specific thresholds tuned to arrival rates.  
• Data Leverage: Historical distribution of batch sizes vs. delivery performance; HM concurrency peaks.  
• Expected Outcomes:  
  – Batch waiting time drop by 25%.  
  – Fewer HM grouping peaks, smoothing QC/packing workload.  
  – Better alignment of batch shipping volumes with vehicle capacity.  

Strategy C: Regulatory-Aware Scheduling & Staggered HM Processing  
• Targeted Constraints: Hazardous Material Limits + Priority Handling  
• Change:  
  – Implement an HM processing scheduler that tracks live HM-in-process count.  
  – Introduce short “pre-QC” checks (e.g., automated scanning) that can be done pre-packing for up to 10 more HM cases, delaying full QC until slots free.  
  – Priority rules: if HM express arrives and concurrency=10, automatically defer a HM-standard to free slot.  
• Data Leverage: Real-time concurrency metrics; cost/benefit of pre-QC accuracy.  
• Expected Outcomes:  
  – Zero unplanned HM-block delays.  
  – Maintained throughput at peak without regulatory breach.  
  – Faster handling of HM express without manual re-scheduling.  

4. Simulation and Validation  
--------------------------------------------------------------------------------  
• Build a discrete-event simulation (e.g., SimPy, Arena) populated with:  
  – Arrival process distributions by order type/region (from log).  
  – Activity time distributions (pick, pack, QC, label).  
  – Resource pools: 5 cold-packers, n QC staff, batch-label buffer.  
  – Priority preemption logic, HM concurrency cap, batch thresholds.  
• Focus Points:  
  – Queue dynamics at cold-packing stations, modeling preemption overhead.  
  – Batch-formation delays, region mixes, and HM mini-batches.  
  – Concurrency of HM in Packing/QC; rule enforcement.  
• KPI Output:  
  – Average and 95th-percentile end-to-end times by order type.  
  – Resource utilization and queue lengths.  
  – Compliance events (HM > 10).  
  – On-time delivery hit rate.  
• Iterate: test each strategy solo and combined; conduct sensitivity (e.g., varying express %.).  

5. Monitoring Post-Implementation  
--------------------------------------------------------------------------------  
Key Metrics & Dashboards:  
1. Resource Contention  
   – Live queue length per packing station (cold vs. standard).  
   – Average waiting time before Packing, split by order type.  
2. Batching Efficiency  
   – Mean batch formation delay per region.  
   – Batch size distribution vs. target thresholds.  
3. Priority Impact  
   – Preemption events count/week.  
   – Average delay injected into standard orders per preemption.  
4. Hazardous Material Compliance  
   – Time-series of HM concurrent in Packing/QC; real-time alert if >9.  
   – Number of pre-QC holds executed.  
5. Overall KPIs  
   – End-to-end cycle time (mean, P95) by Standard/Express.  
   – On-time rate to customer SLA.  
   – Throughput per day/week.  

Implementation of a live process-mining dashboard (e.g., Celonis variants) will allow drill-down from aggregate KPIs to case-level details, flagging if certain orders still suffer inter-case waiting. Continuous conformance checks will ensure that reserved capacities and HM caps are honored, and alert operators to emerging bottlenecks.