**POWL Model with Potential Unfairness:**

```python
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition
from pm4py.objects.process_tree.obj import Operator

# Define activities
ReceiveApplication = Transition(label="ReceiveApplication")
ResumeParsing = Transition(label="ResumeParsing")
RequestMoreInfo = Transition(label="RequestMoreInfo")
SkillAssessment = Transition(label="SkillAssessment")
CulturalFitCheck = Transition(label="CulturalFitCheck")
CommunityAffiliationCheck = Transition(label="CommunityAffiliationCheck")
ManagerialReview = Transition(label="ManagerialReview")
FinalDecision = Transition(label="FinalDecision")

# Loop structure for data completeness
DataCompletenessLoop = OperatorPOWL(
    operator=Operator.LOOP,
    children=[ResumeParsing, RequestMoreInfo]
)

# XOR branch introducing potential bias
CulturalFitXOR = OperatorPOWL(
    operator=Operator.XOR,
    children=[CulturalFitCheck, CommunityAffiliationCheck]
)

# Root partial order (sequence with potential unfairness)
root_unfair = StrictPartialOrder(nodes=[
    ReceiveApplication,
    DataCompletenessLoop,
    SkillAssessment,
    CulturalFitXOR,
    ManagerialReview,
    FinalDecision
])

# Add execution order
root_unfair.order.add_edge(ReceiveApplication, DataCompletenessLoop)
root_unfair.order.add_edge(DataCompletenessLoop, SkillAssessment)
root_unfair.order.add_edge(SkillAssessment, CulturalFitXOR)
root_unfair.order.add_edge(CulturalFitXOR, ManagerialReview)
root_unfair.order.add_edge(ManagerialReview, FinalDecision)
```

**POWL Model Without Unfairness:**

```python
# Reuse common activities from previous model
CulturalFitCheck = Transition(label="CulturalFitCheck")  # Single path

# Root partial order (fair sequential process)
root_fair = StrictPartialOrder(nodes=[
    ReceiveApplication,
    DataCompletenessLoop,
    SkillAssessment,
    CulturalFitCheck,
    ManagerialReview,
    FinalDecision
])

# Add execution order
root_fair.order.add_edge(ReceiveApplication, DataCompletenessLoop)
root_fair.order.add_edge(DataCompletenessLoop, SkillAssessment)
root_fair.order.add_edge(SkillAssessment, CulturalFitCheck)
root_fair.order.add_edge(CulturalFitCheck, ManagerialReview)
root_fair.order.add_edge(ManagerialReview, FinalDecision)
```

**Key Differences:**
1. The unfair model uses an `XOR` operator after skill assessment to create separate paths for cultural evaluation, where `CommunityAffiliationCheck` introduces bias
2. The fair model uses a single mandatory `CulturalFitCheck` for all candidates
3. Both models retain the initial data completeness loop (`LOOP`) and sequential skill assessment
4. Managerial review and final decision steps remain identical in both models, but the input to these stages is less biased in the fair model due to the removed XOR branch