```python
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition
from pm4py.objects.process_tree.obj import Operator

# Leaf activities
SR = Transition(label="SR_Verify")                   # Service Request verification
CS = Transition(label="CS_Setup")                    # Contract Setup
DA = Transition(label="DA_Alloc")                    # Datacenter Allocation
ACI = Transition(label="ACI_Init")                   # Access Control Initialization

# Loop: (A = BNC_BaseConfig, B = DR_DebugAndReconfigure)
BNC = Transition(label="BNC_BaseConfig")             # Base Network Configuration
DR  = Transition(label="DR_DebugAndReconfigure")      # Debug & Reconfigure
loop = OperatorPOWL(operator=Operator.LOOP, children=[BNC, DR])

# Exclusive deployment choice: either CD or MD (but not both)
CD = Transition(label="CD_ContainerizedDeployment")
MD = Transition(label="MD_MonolithicDeployment")
deployChoice = OperatorPOWL(operator=Operator.XOR, children=[CD, MD])

# Finalization tasks
QA = Transition(label="QA_Tests")                      # Quality Assurance
SA = Transition(label="SA_SecurityAudit")              # Security Audit
GLA = Transition(label="GLA_GoLiveApproval")           # Go-Live Approval

# Top-level POWL model
root = StrictPartialOrder(nodes=[SR, CS, DA, ACI, loop, deployChoice, QA, SA, GLA])

# Partial order (edges):
# SR_Verify -> CS_Setup
root.order.add_edge(SR, CS)

# CS_Setup -> DA_Alloc and CS_Setup -> ACI_Init
root.order.add_edge(CS, DA)
root.order.add_edge(CS, ACI)

# After DA and ACI complete, start the loop (BNC -> DR with possible repeats)
root.order.add_edge(DA, loop)
root.order.add_edge(ACI, loop)

# Loop completes -> Deployment XOR (CD or MD)
root.order.add_edge(loop, deployChoice)

# Deployment chosen -> QA and SA (can be done in parallel)
root.order.add_edge(deployChoice, QA)
root.order.add_edge(deployChoice, SA)

# QA and SA must finish before final sign-off
root.order.add_edge(QA, GLA)
root.order.add_edge(SA, GLA)
```