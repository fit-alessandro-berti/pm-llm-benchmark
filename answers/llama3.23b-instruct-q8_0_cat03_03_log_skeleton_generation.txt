# Log Skeleton Model for Purchase-to-Pay Process

Here is a sample Log Skeleton model for the Purchase-to-Pay process:
```python
log_skeleton = {
    'equivalence': {('Order_Payment', 'Purchase'), ('Order_Acceptance', 'Payment']},
    'always_before': {('Order_Payment', 'Order_Acceptance'), ('Order_Acceptance', 'Purchase')},
    'always_after': {'Payment': [('Finalization', 'Order_Acceptance'), ('Return_to_Shop', 'Order_Acceptance')]},
    'never_together': {('Payment', 'Order_Payment'), ('Finalization', 'Order_Acceptance'), 
                      ('Return_to_Shop', 'Order_Acceptance'), ('Order_Acceptance', 'Order_Payment')},  
    'activ_freq': {'Order_Payment': {0, 1}, 'Order_Acceptance': {0, 1}, 'Payment': {1}, 
                   'Finalization': {}, 'Return_to_Shop': {}},
    'directly_follows': {('Purchase', 'Order_Payment'), ('Order_Acceptance', 'Payment')}
}
```
In this model:

*   `equivalence` states that if an `Order_Payment` occurs, then an `Order_Acceptance` and a `Payment` must also occur. Similarly, if an `Order_Acceptance` occurs, then both `Order_Payment` and `Payment` must occur.
*   `always_before` indicates that the order of execution is as follows:
    *   If an `Order_Payment` occurs, then it must have been preceded by an `Order_Acceptance`.
    *   The same rule applies for `Order_Acceptance`, which must be executed before a `Payment`.
*   `always_after` shows that if the `Payment` activity is executed, then either the `Finalization` or the `Return_to_Shop` activities will follow.
*   The `'never_together'` constraint ensures that:
    *   An `Order_Payment` and an `Order_Acceptance` cannot co-occur within a case.
    *   A `Finalization` activity can only occur after an `Order_Acceptance`, and the same goes for a `Return_to_Shop` activity.
*   The `'activ_freq'` section sets bounds on how many times each activity can be executed:
    *   An `Order_Payment` or `Order_Acceptance` can only occur once within a case.
    *   A `Payment` must always occur after an `Order_Payment`.
*   Finally, the `'directly_follows'` constraint states that if an `Order_Payment` occurs, then it is directly followed by a `Purchase`, and similarly for `Order_Acceptance` and `Payment`.

This model captures various aspects of the Purchase-to-Pay process while adhering to the provided constraints.