```sql
SELECT
    case_id,
    activity,
    timestamp
FROM
    event_log
WHERE
    case_id IN (
        SELECT
            case_id
        FROM
            event_log
        GROUP BY
            case_id
        HAVING
            COUNT(*) <= 6
    );
```

**Explanation:**

1. **Inner Query (Subquery):**
   - `SELECT case_id FROM event_log GROUP BY case_id HAVING COUNT(*) <= 6`: This subquery does the crucial work of identifying the `case_id`s that meet the criteria.
     - `GROUP BY case_id`: This groups the events by their respective `case_id`.
     - `HAVING COUNT(*) <= 6`: This filters these groups. `COUNT(*)` counts the number of events within each `case_id` group. The `HAVING` clause then keeps only those `case_id`s where the count is less than or equal to 6.

2. **Outer Query:**
   - `SELECT case_id, activity, timestamp FROM event_log`: This selects all the relevant columns from the original `event_log` table.
   - `WHERE case_id IN (...)`: This clause filters the rows from the `event_log` table. It only includes rows where the `case_id` is present in the results of the inner subquery (i.e., the `case_id`s that have 6 or fewer events).

This approach efficiently identifies the valid cases first and then retrieves all events belonging to those cases.