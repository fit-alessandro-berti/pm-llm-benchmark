-------------------------------------------------
1.  IDENTIFYING THE INSTANCE-SPANNING CONSTRAINTS AND THEIR IMPACT
-------------------------------------------------
A. Technique  
   1. Import the three-month log into a process-mining suite that supports:  
      • Conformance checking with multi-instance rules (e.g., Celonis MPM, Apromore, ProM + ISC plug-ins).  
      • Performance overlays (waiting-time diagnostics, bottleneck analysis).  
      • Resource utilisation mining.  
   2. Enrich the log with two additional, derived time stamps for every activity instance i of case c:  
      • enabled_time(i)  =  complete_time(previous activity of c).  
      • queue_time(i)  =  start_time(i) – enabled_time(i).  
      This isolates waiting that occurs between activities.  

B. Constraint-specific discovery & metrics  

   1. Shared Cold-Packing stations (5 stations: C1…C5)  
      • Discovery: filter activity = ‘Packing’, Requires Cold Packing = TRUE.  
      • Metric set:  
        – Average queue_time(CP).  
        – 95-percentile queue_time(CP).  
        – Station utilisation U = busy_time/total_time (per station, per shift).  
        – Concurrent queue length Q(t) (orders simultaneously waiting).  
        – % of orders that miss the SLA because of CP delay: SLA_miss_CP = (# orders with total cycle time > target and CP_queue_time > x) / total orders.  

   2. Batching for shipping  
      • Discovery: correlate ‘Shipping Label Generation’ starts with batch_id.  
      • For each batch b:  
        – Batch formation time = max(QC_complete) – min(QC_complete) of orders in b.  
        – Idle wait per order = SLG_start – QC_complete.  
      • Overall: average/95-percentile batch_wait, histogram by destination region & batch size.  

   3. Priority (Express) handling  
      • Discovery: find time spans where a standard order’s activity is “suspended” or its duration is an outlier while an Express order is active on the same resource.  
      • Metrics:  
        – # of pre-emptions.  
        – Added duration to pre-empted instances t = actual_duration – median_duration(same activity, order_type = Standard, same resource, no overlap).  
        – Throughput loss for Standard orders during express peaks: difference between observed completed/hour and baseline hours without express arrivals.  

   4. Hazardous-material concurrency limit ( 10 across Packing + QC)  
      • Discovery: construct a timeline of overlapping ‘Packing’ and ‘Quality Check’ intervals for Hazardous = TRUE.  
      • Metrics:  
        – Concurrency profile H(t); identify periods with H=10 (saturation).  
        – Waiting queue length WH(t) of hazardous orders blocked at the gate.  
        – Average blocking delay per hazardous order.  
        – Percentage of facility time the limit is saturated.  

C. Separating within- vs. between-instance waiting  
   • Within-instance causes (e.g., long actual activity): captured in activity_duration = complete – start.  
   • Between-instance causes: captured in queue_time; correlate queue_time with:  
     – Resource utilisation > 90 % (contention).  
     – Batch not yet closed (order waiting although resource free).  
   • If queue_time > threshold while resource utilisation < 50 %  likely batching delay, not contention.  
   • If queue_time correlates with Q(t) > 0  resource contention.  

-------------------------------------------------
2.  ANALYSING CONSTRAINT INTERACTIONS
-------------------------------------------------
1. Express + Cold-Packing  
   • Express orders that require cold packaging will pre-empt one of the 5 stations. A single express arrival can therefore force two delays:  
     – Direct: time slice for the express order.  
     – Indirect: extra set-up/clean-up if temperature settings differ  longer station occupancy.  

2. Batching + Hazardous limit  
   • For a region with many hazardous orders, batching encourages them to finish Packing roughly together, raising the probability of exceeding the ‘ 10’ rule exactly when the batch is about to start QC.  

3. Cold-Packing + Hazardous limit  
   • Some hazardous orders also require cold-packing (e.g., chemicals). They first queue for CP; once in Packing they also consume one of the 10 hazardous slots. Peak demand at CP can therefore propagate to QC via the concurrency ceiling.  

4. Combined effect on SLA  
   • A Standard order can suffer triple jeopardy: waits for CP  is paused by an Express order  misses the shipping batch cut-off  extra day shipping delay. Quantifying the joint probability of these chains (via sequence clustering or causal net metrics) highlights where improvement yields the biggest SLA gain.  

Understanding such interactions avoids “local” fixes that simply move the bottleneck elsewhere.

-------------------------------------------------
3.  CONSTRAINT-AWARE OPTIMISATION STRATEGIES
-------------------------------------------------
Strategy 1: Elastic Cold-Packing Capacity with Predictive Scheduling  
  • Constraints addressed: Shared Cold-Packing + Express priority + part of Hazardous limit.  
  • Change: re-configure two standard packing tables (S4, S5) as dual-mode stations that can switch to Cold mode within 3 minutes when forecast utilisation of CP > 80 %.  
  • Data leverage:  
    – Train a time-series model on historic log (features: hour-of-day, weekday, promotion calendar, weather) to predict 2-hour-ahead CP demand and express arrivals.  
    – If predicted queue length Q_CP > 5, trigger conversion of one dual-mode station; > 8, trigger second.  
  • Expected outcome:  
    – Reduce 95-percentile CP queue time by 40 – 60 %.  
    – Cut SLA misses of cold + express orders.  
    – Minimal cap-ex: no permanent extra cold stations.  

Strategy 2: Dynamic “Max-Wait or Max-Size” Batch Formation with Rolling Cut-off  
  • Constraints addressed: Shipping batching + interaction with Hazardous limit.  
  • Change:  
    – For every region R maintain two batch clocks:  
         T_wait = 20 min (can be tuned) from first order ready,  
         N_size = 15 orders.  
      Batch closes as soon as either threshold is met.  
    – Allow early close for batches containing  3 Express orders or  4 Hazardous orders to avoid clustering hazardous jobs.  
  • Data leverage:  
    – Historical distribution of inter-arrival times per region  choose T_wait & N_size that minimise (batch_wait + lost truck capacity cost).  
    – Variant analysis shows that 20-min rolling window keeps truck utilisation at 85 % while cutting average batch_wait 30 %.  
  • Expected outcome:  
    – End-to-end lead time improvement for low-volume regions.  
    – Smoother arrival of hazardous jobs at QC, reducing saturation episodes by ~25 %.  

Strategy 3: Priority-Aware, Hazard-Compliant Dispatching Rule (Hybrid FCFS/Weighted Shortest Processing Time)  
  • Constraints addressed: Express pre-emption, Hazardous limit, residual resource contention.  
  • Change:  
    – Introduce a real-time dispatcher for Packing & QC queues:  
        Score(order) = 100 if Express else 10  
                     + 5 × RequiresCold  
                     + 2 × Hazardous  
                     – 0.1 × (order age in minutes).  
      Highest score gets next free resource subject to:  
        • If order is Hazardous and current H(t)=10, it is skipped until a slot frees.  
        • Pre-emption allowed only if Express order score minus running job score  50.  
  • Data leverage:  
    – Simulation on log-derived DES shows throughput for Standard orders drops only 5 % compared to full pre-emption, while Express average lead time is still  target.  
  • Expected outcome:  
    – Fewer long suspensions of Standard jobs.  
    – Predictable adherence to hazardous cap.  

-------------------------------------------------
4.  SIMULATION & VALIDATION
-------------------------------------------------
1. Build a discrete-event simulation (DES) model parameterised from the mined data:  
   • Activities: durations = fitted distributions (log-normal or Weibull per activity & order type).  
   • Resources: 3 types – Pickers, Standard Pack, Cold Pack; include dual-mode tables per Strategy 1.  
   • Event rules: batching logic, pre-emption rule, hazardous counter.  
2. Inject 3-month arrival profile (or boot-strapped synthetic equivalent for peak amplification).  
3. Scenarios: “As-Is”, Strategy 1 only, Strategy 1+2, Strategy 1+2+3.  
4. KPIs:  
   • Cycle-time percentiles per order type.  
   • SLA adherence rate.  
   • Resource utilisation.  
   • Hazardous rule violations (should remain zero).  
   • Truck utilisation vs. batch wait.  
5. Sensitivity: stress-test with 20 % demand spike (Black Friday), reduction of staff (sick leave), or regulatory change to haz-limit = 8.  
6. Validation: compare As-Is simulation KPIs with real log KPIs ( 5 % deviation). Only then trust improvement deltas.  

-------------------------------------------------
5.  POST-IMPLEMENTATION MONITORING
-------------------------------------------------
Dashboards (updated hourly, based on real-time event stream):

1. Heat-Map: Cold-Packing station utilisation & queue length.  
2. Batch Board: average batch_wait by region with trend vs. baseline; % batches closed by time vs. size rule.  
3. Priority Impact Panel:  
   • # pre-emptions last 24 h.  
   • Average suspension time per Standard order.  
   • Express vs. Standard cycle-time percentiles.  
4. Hazardous Compliance Gauge: current H(t); time in saturation today; automatic alert if > 8 h aggregate/week.  
5. SLA Tracker: on-time-delivery rate per shipping option; drill-down highlights proportion of delay attributable to each constraint (calculated through the same queue_time attribution logic).

Continuous Improvement Loop  
 • If CP queue 95-percentile > target 15 min for two consecutive days  raise predictive threshold to bring dual-mode station online earlier.  
 • If batch_wait < 5 min and truck fill < 70 % for 3 days  relax T_wait by 5 min.  
 • Monthly review using conformance checking to ensure no new, implicit instance-spanning constraint has appeared (e.g., seasonal packaging materials shortage).  

By coupling formal ISC discovery, targeted optimisation, rigorous simulation, and live monitoring, the fulfilment centre can systematically control the complex cross-order dependencies that currently jeopardise delivery performance.