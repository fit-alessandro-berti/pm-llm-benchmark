Below is a parameterized DuckDB SQL query that computes process variants, ranks them by frequency, selects the top K variants, and returns only the events from cases belonging to those variants.

Replace ? with your desired K (or bind a parameter).

with ordered as (
  select
    case_id,
    activity,
    timestamp,
    row_number() over (partition by case_id order by timestamp, activity) as rn,
    count(*) over (partition by case_id) as n_events
  from event_log
),
seqs as (
  -- Build a stable, ordered sequence of activities per case
  select
    case_id,
    string_agg(activity, '->' order by rn) as variant_seq
  from ordered
  group by case_id
),
variant_counts as (
  -- Count how many cases follow each variant
  select
    variant_seq,
    count(*) as case_count
  from seqs
  group by variant_seq
),
top_variants as (
  -- Pick top K variants by number of cases (break ties by variant_seq for determinism)
  select variant_seq
  from variant_counts
  order by case_count desc, variant_seq
  limit ?
),
top_cases as (
  -- Cases that belong to the top K variants
  select s.case_id
  from seqs s
  join top_variants tv using (variant_seq)
)
select e.*
from event_log e
join top_cases tc
  on e.case_id = tc.case_id
order by e.case_id, e.timestamp, e.activity;