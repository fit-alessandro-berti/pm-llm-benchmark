 To solve this problem, I will use a simple Python program with some helper functions to calculate and return the final result of each step:

```python
import pandas as pd
from collections import defaultdict

def evaluate_process(operations):
    """Finds all possible outcomes for one operation."""
    performance = [16, 5986052.830, 1167247.059, 3809454.545, 3221485.714, 820800.0]
    output = []
    for i in operations:
        result = i[1] * int(i[2]) + i[3]
        if 'Appeal' in i:
            output.append((int(i[0][-1]), round(result)))
    return max(output)

def process_chain_operation(data, operations):
    total = 0
    for x in data['Appealed']:
        if type(x) is list:
            output = process_one(int(x[0]), int(x[-1]))
        else:
            output = evaluate_process_rule([x], operations, performance=performance)
    return sum(output) / len(operations), total
