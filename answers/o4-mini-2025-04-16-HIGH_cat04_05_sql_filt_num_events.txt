Here’s a simple way to do it using a subquery with HAVING:

SQL:
```
SELECT *
FROM event_log
WHERE case_id IN (
  SELECT case_id
  FROM event_log
  GROUP BY case_id
  HAVING COUNT(*) <= 6
)
ORDER BY case_id, timestamp;
```

Explanation:
1. The inner query  
   • Groups events by `case_id`  
   • Keeps only those groups whose eventcount is  6  
2. The outer query  
   • Selects all columns from `event_log`  
   • Filters to only the `case_id`s returned by the inner query  
   • Orders by `case_id` and `timestamp` (optional, but usually useful)

---

Alternatively, you can do it with a window function (no subquery/join needed):

```
SELECT case_id,
       activity,
       timestamp
FROM (
  SELECT *,
         COUNT(*) OVER (PARTITION BY case_id) AS case_size
  FROM event_log
) t
WHERE case_size <= 6
ORDER BY case_id, timestamp;
```

Both approaches will return only those events belonging to cases with six or fewer total events.