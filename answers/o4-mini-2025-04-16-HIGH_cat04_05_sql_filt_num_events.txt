Here are three equivalent ways to pull only those cases with six or fewer events from your `event_log` table in DuckDB:

1) Using a subquery + IN:

```
SELECT *
FROM event_log
WHERE case_id IN (
  SELECT case_id
  FROM event_log
  GROUP BY case_id
  HAVING COUNT(*) <= 6
)
ORDER BY case_id, timestamp;
```

2) Using a CTE + JOIN:

```
WITH small_cases AS (
  SELECT case_id
  FROM event_log
  GROUP BY case_id
  HAVING COUNT(*) <= 6
)
SELECT e.*
FROM event_log AS e
JOIN small_cases AS sc
  ON e.case_id = sc.case_id
ORDER BY e.case_id, e.timestamp;
```

3) Using a windowfunction filter:

```
SELECT case_id,
       activity,
       timestamp
FROM (
  SELECT *,
         COUNT(*) OVER (PARTITION BY case_id) AS cnt
  FROM event_log
) sub
WHERE cnt <= 6
ORDER BY case_id, timestamp;
```

All three will:

- Group events by `case_id`  
- Exclude any `case_id` having more than six events  
- Return the full event rows for the remaining (“small”) cases, with an optional `ORDER BY` to keep them sorted by case and time.