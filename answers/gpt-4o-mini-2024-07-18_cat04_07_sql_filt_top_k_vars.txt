To accomplish the task of identifying the top K process variants based on the sequences of activities logged in the `event_log`, we can follow a structured approach, breaking it down into logical parts. Here’s a DuckDB SQL query to achieve the complete requirement:

### SQL Query

```sql
WITH ordered_sequences AS (
    -- Step 1: Extract ordered sequences of activities for each case_id
    SELECT 
        case_id,
        LISTAGG(activity, ' -> ') WITHIN GROUP (ORDER BY timestamp) AS activity_sequence
    FROM 
        event_log
    GROUP BY 
        case_id
),

variant_counts AS (
    -- Step 2: Count how many cases correspond to each unique activity sequence (variant)
    SELECT 
        activity_sequence,
        COUNT(*) AS case_count
    FROM 
        ordered_sequences
    GROUP BY 
        activity_sequence
),

top_variants AS (
    -- Step 3: Identify the top K variants based on their frequency (case_count)
    SELECT 
        activity_sequence
    FROM 
        variant_counts
    ORDER BY 
        case_count DESC
    LIMIT K  -- Replace K with the desired number of top variants
)

-- Step 4: Return original events that belong to the cases with top K variants
SELECT 
    e.*
FROM 
    event_log e
JOIN 
    ordered_sequences os ON e.case_id = os.case_id
JOIN 
    top_variants tv ON os.activity_sequence = tv.activity_sequence;
```

### Explanation:

1. **`ordered_sequences` CTE**: 
   - We aggregate the activities for each `case_id` into a single ordered sequence (`activity_sequence`) using `LISTAGG`, sorted by their `timestamp`.

2. **`variant_counts` CTE**:
   - We then count the number of cases associated with each unique `activity_sequence` to find the frequency of each process variant.

3. **`top_variants` CTE**:
   - This step retrieves the top K variants by ordering `variant_counts` by `case_count` in descending order and limiting the results to K.

4. **Final Selection**:
   - The final SELECT statement retrieves all events from the original `event_log` table by joining back on the `ordered_sequences` and filtering to include only those cases whose sequences are in the top K variants.

### Note:
- Replace `K` with an integer value to specify how many top variants you wish to retrieve.
- Ensure that your dataset is loaded into DuckDB and that the `event_log` table follows the specified schema.