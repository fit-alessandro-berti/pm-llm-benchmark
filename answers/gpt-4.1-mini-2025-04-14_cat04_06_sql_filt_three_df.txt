Here's a DuckDB SQL query that implements the requested logic:

```sql
WITH sequenced_events AS (
    SELECT
        case_id,
        activity,
        timestamp,
        LEAD(activity, 1) OVER (PARTITION BY case_id ORDER BY timestamp) AS next_activity_1,
        LEAD(timestamp, 1) OVER (PARTITION BY case_id ORDER BY timestamp) AS next_timestamp_1,
        LEAD(activity, 2) OVER (PARTITION BY case_id ORDER BY timestamp) AS next_activity_2,
        LEAD(timestamp, 2) OVER (PARTITION BY case_id ORDER BY timestamp) AS next_timestamp_2
    FROM event_log
),

matched_sequences AS (
    SELECT DISTINCT
        case_id,
        -- Time difference between 'Confirm Order' and 'Create Order'
        next_timestamp_2,
        next_timestamp_1,
        (next_timestamp_2 - next_timestamp_1) AS confirm_create_diff
    FROM sequenced_events
    WHERE activity = 'Approve Purchase Requisition'
      AND next_activity_1 = 'Create Order'
      AND next_activity_2 = 'Confirm Order'
),

cases_to_exclude AS (
    SELECT case_id
    FROM matched_sequences
    WHERE confirm_create_diff > INTERVAL '5 days'
)

SELECT *
FROM event_log
WHERE case_id NOT IN (SELECT case_id FROM cases_to_exclude)
ORDER BY case_id, timestamp;
```

---

### Explanation:

1. **sequenced_events:**  
   For each event within each `case_id`, it looks ahead to the next one and the one after that event, ordering by timestamp. This allows us to inspect sequences of three activities in order.

2. **matched_sequences:**  
   Filters sequences such that the current event is `'Approve Purchase Requisition'`, followed immediately by `'Create Order'` and then `'Confirm Order'` with no other events between them. This identifies all sequences of exactly the three activities in this order.

3. **cases_to_exclude:**  
   Among those sequences, select only those where the time difference between the `'Create Order'` event and the `'Confirm Order'` event (the second and third steps in the sequence) is more than 5 days.

4. **Final SELECT:**  
   Returns all events from cases **not** in the `cases_to_exclude` list, preserving all events from those cases that do not have the disallowed sequence with the time condition.

---

This should fully satisfy the prompt requirements.