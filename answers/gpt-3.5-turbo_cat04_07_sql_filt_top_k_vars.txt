```sql
WITH ordered_events AS (
    SELECT
        case_id,
        STRING_AGG(activity, '->' ORDER BY timestamp) AS activity_sequence
    FROM
        event_log
    GROUP BY
        case_id
),
variant_counts AS (
    SELECT
        activity_sequence,
        COUNT(case_id) AS case_count
    FROM
        ordered_events
    GROUP BY
        activity_sequence
    ORDER BY
        case_count DESC
)
SELECT
    event_log.*
FROM
    event_log
JOIN
    ordered_events ON event_log.case_id = ordered_events.case_id
JOIN
    variant_counts ON ordered_events.activity_sequence = variant_counts.activity_sequence
LIMIT K
``` 

In this query:
- We first create a common table expression `ordered_events` where we extract the ordered sequence of activities per case.
- Next, we calculate the frequency of each process variant in the `variant_counts` common table expression by counting the number of cases per variant.
- Lastly, we join the original `event_log` table with the `ordered_events` and `variant_counts` tables to filter down to the cases belonging to the top K variants and return the corresponding events.