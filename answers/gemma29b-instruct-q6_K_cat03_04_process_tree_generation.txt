```python
from pm4py.objects.process_tree.obj import ProcessTree, Operator

# Root process tree
purchase_to_pay = ProcessTree(operator=Operator.PARALLEL)

# Subprocess 1: Purchase Request
purchase_request = ProcessTree(operator=Operator.SEQUENCE, parent=purchase_to_pay)
create_req = ProcessTree(label="Create Purchase Request", parent=purchase_request)
approve_req = ProcessTree(label="Approve Purchase Request", parent=purchase_request)

# Subprocess 2: Purchase Order
purchase_order = ProcessTree(operator=Operator.SEQUENCE, parent=purchase_to_pay)
generate_po = ProcessTree(label="Generate Purchase Order", parent=purchase_order)
send_po = ProcessTree(label="Send Purchase Order", parent=purchase_order)

# Subprocess 3: Goods Receipt
goods_receipt = ProcessTree(operator=Operator.SEQUENCE, parent=purchase_to_pay)
receive_goods = ProcessTree(label="Receive Goods", parent=goods_receipt)
verify_goods = ProcessTree(label="Verify Goods", parent=goods_receipt)

# Subprocess 4: Invoice Processing
invoice_processing = ProcessTree(operator=Operator.SEQUENCE, parent=purchase_to_pay)
receive_invoice = ProcessTree(label="Receive Invoice", parent=invoice_processing)
match_invoice = ProcessTree(label="Match Invoice", parent=invoice_processing)
approve_invoice = ProcessTree(label="Approve Invoice", parent=invoice_processing)
pay_invoice = ProcessTree(label="Pay Invoice", parent=invoice_processing)

# Connect subprocesses
purchase_to_pay.children.append(purchase_request)
purchase_to_pay.children.append(purchase_order)
purchase_to_pay.children.append(goods_receipt)
purchase_to_pay.children.append(invoice_processing)

```

**Explanation:**

1. **Import Necessary Classes:** Import `ProcessTree` and `Operator` from `pm4py.objects.process_tree.obj`.
2. **Define Root Process Tree:** Create a `ProcessTree` object named `purchase_to_pay` with an `Operator.PARALLEL` to represent the main process.
3. **Define Subprocesses:** Create `ProcessTree` objects for each subprocess (Purchase Request, Purchase Order, Goods Receipt, Invoice Processing) and set their parent to `purchase_to_pay`.
4. **Define Activities:** Define individual activities within each subprocess using `ProcessTree` objects with a `label` attribute and set their parent to the corresponding subprocess.
5. **Connect Subprocesses:** Append the subprocesses as children to the `purchase_to_pay` tree.

**Note:**

- This code represents a simplified Purchase-to-Pay process. You can add more subprocesses, activities, and operators to create a more detailed model.
- The `Operator` enumeration provides various options for connecting process trees, such as `Operator.SEQUENCE`, `Operator.XOR`, `Operator.PARALLEL`, and `Operator.LOOP`.


