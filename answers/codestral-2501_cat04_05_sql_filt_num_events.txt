To achieve the desired result, you need to follow these steps:

1. Count the number of events for each `case_id`.
2. Filter out any `case_id` that has more than six events.
3. Return the full set of events for the remaining `case_id`s.

Here is the DuckDB SQL query that accomplishes this:

```sql
WITH case_event_counts AS (
    SELECT
        case_id,
        COUNT(*) AS event_count
    FROM
        event_log
    GROUP BY
        case_id
    HAVING
        COUNT(*) <= 6
)
SELECT
    e.*
FROM
    event_log e
JOIN
    case_event_counts c
ON
    e.case_id = c.case_id;
```

### Explanation:

1. **Common Table Expression (CTE) `case_event_counts`**:
   - This CTE calculates the number of events for each `case_id`.
   - It groups the events by `case_id` and counts the number of events using `COUNT(*)`.
   - The `HAVING` clause filters out any `case_id` that has more than six events.

2. **Main Query**:
   - The main query selects all columns from the `event_log` table.
   - It joins the `event_log` table with the `case_event_counts` CTE on the `case_id` column.
   - This ensures that only the events from `case_id`s with six or fewer events are returned.

This query ensures that you only get the events from cases that have six or fewer events, effectively filtering out any cases with more than six events.