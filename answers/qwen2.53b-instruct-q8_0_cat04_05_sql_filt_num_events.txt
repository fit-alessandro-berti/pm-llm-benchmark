To accomplish the task outlined in your prompt, you will need to use aggregate functions along with a subquery or window function to filter out groups that do not meet the criteria.

Here's an example of how you can craft such a query using DuckDB:

```sql
WITH CaseEventCount AS (
    SELECT 
        case_id,
        COUNT(*) AS num_events
    FROM 
        event_log
    GROUP BY 
        case_id
)
SELECT * 
FROM event_log
WHERE (case_id, num_events) IN (
    SELECT case_id, num_events
    FROM CaseEventCount
    WHERE num_events <= 6
);
```

### Explanation:
1. **CaseEventCount CTE**:
   - The `WITH` clause defines a common table expression (CTE) named `CaseEventCount`. This subquery calculates the number of events (`num_events`) for each `case_id`.
   
2. **Filtering**:
   - In the main query, we select all columns from the `event_log` where `(case_id, num_events)` is in a list of `case_id`s and their corresponding `num_events` that are both less than or equal to six.

This approach ensures that you first determine which cases have up to six events and then return only those cases' full records.