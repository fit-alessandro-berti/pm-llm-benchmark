WITH ordered AS (
  SELECT
    case_id,
    activity,
    timestamp,
    ROW_NUMBER() OVER (PARTITION BY case_id ORDER BY timestamp, activity) AS rn
  FROM event_log
),
triples AS (
  SELECT
    o1.case_id,
    o1.rn AS rn1,
    o1.activity AS act1,
    o1.timestamp AS ts1,
    o2.activity AS act2,
    o2.timestamp AS ts2,
    o3.activity AS act3,
    o3.timestamp AS ts3
  FROM ordered o1
  JOIN ordered o2
    ON o2.case_id = o1.case_id AND o2.rn = o1.rn + 1
  JOIN ordered o3
    ON o3.case_id = o1.case_id AND o3.rn = o1.rn + 2
),
bad_cases AS (
  SELECT DISTINCT case_id
  FROM triples
  WHERE act1 = 'Approve Purchase Requisition'
    AND act2 = 'Create Order'
    AND act3 = 'Confirm Order'
    AND (ts3 - ts2) > INTERVAL '5 days'
)
SELECT e.*
FROM event_log e
WHERE e.case_id NOT IN (SELECT case_id FROM bad_cases)
ORDER BY e.case_id, e.timestamp, e.activity;