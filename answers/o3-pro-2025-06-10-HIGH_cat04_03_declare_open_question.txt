Below is a narrative walk-through of the model, moving from the “big picture” down to the individual rules.  Wherever helpful, each constraint is first translated into plain English and then tied to a plausible business or regulatory motive.


1.  Core storyline of the case

A customer hands in a loan request (Receive_Application).  
Exactly one preliminary credit check is performed.  
If the application is viable, extra documents are gathered, a loan-offer package is prepared, quality-checked, the terms are authorised, the money is transferred and the customer is informed.  
Breaking compliance (Proceed_Without_Compliance) must never happen, and several “guard-rails” prohibit skipping, repeating or re-ordering key steps.


2.  Mandatory, forbidden and cardinality rules

Existence
• Receive_Application and Gather_Additional_Documents must each occur at least once.  
   The process cannot be completed without formally accepting the request and collecting supporting evidence (basic KYC / AML requirement).

Absence
• Proceed_Without_Compliance must never appear.  
   A hard safety valve reflecting an internal policy as well as legal liability (e.g., SOX, banking supervisory rules).

Exactly_one
• Preliminary_Credit_Check must occur once and only once.  
   Reduces the risk of inconsistent credit scores being produced in the same case and simplifies auditability (“the” rating that went to the credit committee).

Init
• Receive_Application is the first visible activity.  
   Guarantees that nothing is done before the customer is officially on-boarded.


3.  “If X happens, Y must happen (eventually)”

Responded_existence  
• Assemble_Loan_Offer_Package  Quality_Assurance_Review  
  – Any prepared offer inevitably triggers a QA review.  
  – Mirrors the “four-eyes” principle found in most banking regulations.

Coexistence  
• Gather_Additional_Documents  Authorize_Contract_Terms  
  – Either both appear, or neither appears.  
  – Enforces the policy “You cannot approve terms if no documents were requested, and vice-versa.”

Response  
• Receive_Application  Preliminary_Credit_Check (eventually)  
  – Every request must result in a credit assessment.

Precedence  
• Quality_Assurance_Review  Authorize_Contract_Terms  
  – Terms cannot be authorised before QA approved the dossier.

Succession  
• Preliminary_Credit_Check  …  Gather_Additional_Documents  
  – After the first-level rating, missing paperwork must be chased.

Business motive:  
These “soft deadlines” make sure that no branch of the process simply vanishes without the required follow-up, a frequent topic in consumer-credit supervision and ISO-9001 audits.


4.  “Alternate” constraints – preventing backlog loops

Altresponse  
• Transfer_Funds altresponse Notify_Customer  
  – Each fund transfer must be followed by exactly one customer notification before the next transfer. Prevents bulk transfers with delayed e-mails.

Altprecedence  
• Notify_Customer altprecedence Transfer_Funds  
  – A notification is valid only if it refers to one (and only one) preceding disbursement. Guards against “spam” updates or mismatched confirmations.

Altsuccession  
• Gather_Additional_Documents altsuccession Quality_Assurance_Review  
  – Between two rounds of document collection, a QA review must happen. Avoids piling up unchecked material.

Business motive:  
Alternate constraints are typical for throughput control: each “cycle” (one transfer, one notification) has to be closed before the next begins.


5.  “Chain*” – immediate next-step obligations

Chainresponse  
• Assemble_Loan_Offer_Package  (immediately) Transfer_Funds  
  – Once the offer is final and accepted, the disbursement must follow without intervening steps; perhaps the bank promises same-day payout after the offer is locked.

Chainprecedence  
• Authorize_Contract_Terms must be immediately preceded by Preliminary_Credit_Check  
  – The signature committee bases its decision directly on the latest credit score; no other task may sneak in that could invalidate the rating.

Chainsuccession  
• Quality_Assurance_Review  Assemble_Loan_Offer_Package (immediately consecutive)  
  – These two always come back-to-back, implementing the internal “QA stamps the offer” ritual found in many lending departments.

Business motive:  
Immediate constraints eliminate the possibility of outdated data and help shorten the critical path, which is attractive both for customer experience and interest-rate-lock compliance.


6.  Negative temporal constraints

Noncoexistence  
• Transfer_Funds × Receive_Application may not occur in the same case.  
  – Indicates the process instance is split: a “new application” case versus a “payout” case. Funds are moved only in cases that started elsewhere (e.g., renewal workflow). Prevents early transfers in first-time applications.

Nonsuccession  
• Notify_Customer may never be followed later by Preliminary_Credit_Check.  
  – Once the client has been informed, the file is frozen; no retroactive rating changes are allowed (protects against discrimination claims).

Nonchainsuccession  
• Authorize_Contract_Terms must not be immediately followed by Notify_Customer.  
  – At least one other activity (e.g., fund transfer, internal archiving) must sit between authorization and external communication, enabling a final sanity check.

Business motive:  
Negative rules are typical “red flags” used by auditors to detect process deviations that suggest fraud, data tampering or customer mis-treatment.


7.  How the rules interlock

• The INIT + RESPONSE + EXACTLY_ONE trio guarantees a single, mandatory credit check as the anchor of the whole case.  
• RESPONSE + PRECEDENCE + SUCCESSION force the flow Application  Credit Check  Document Gathering  QA  Authorisation.  
• CHAIN* constraints knit tight micro-sequences (QA  Offer, Offer  Transfer) so the most sensitive hand-offs happen in a single, auditable step.  
• ALT* constraints pace repetitive actions (multiple transfers / notifications) and prevent queue build-up.  
• NON* constraints close the loopholes: no shortcut from Authorise to Notify, no post-notification tampering, no “Pay first, ask later”.  
Together they create a “compliance corridor” in which every execution trace is:

1. Complete – all statutory checks are present.  
2. Sound – forbidden actions never occur and required order is preserved.  
3. Transparent – every material decision has a preceding justification and a following audit step.  


8.  Likely business and regulatory drivers

• Consumer-credit directives (EU 2008/48/EC, US Truth in Lending Act) demand clear pre-contractual information and prohibit disbursement before providing it.  
• Basel II/III & national banking laws oblige banks to perform credit-worthiness assessments and store the result unchanged until payout.  
• AML / KYC frameworks require identity and income proofs before funds movement.  
• Internal control frameworks (COSO, SOX) insist on segregation of duties (QA separate from Sales) and four-eyes checks.  
• Service-level promises (e.g., “funds within 24 h after approval”) motivate immediate chain responses to keep customers satisfied.  
• Reputation and customer-experience goals favour a one-notification-per-disbursement rhythm and forbid telling customers contradictory things.


9.  Take-away

The DECLARE specification functions as a living “contract” between business, compliance and IT.  By capturing not only what must happen but also what must never happen, it:

• Makes the process self-documenting and auditable.  
• Provides clear monitoring targets for process-mining and real-time conformance tools.  
• Gives management levers (the individual constraints) that can be tightened or relaxed as the regulatory or competitive landscape changes.  

In day-to-day operations the net effect is a tightly controlled yet explainable loan-approval pipeline that minimises legal risk, operational errors and customer dissatisfaction.