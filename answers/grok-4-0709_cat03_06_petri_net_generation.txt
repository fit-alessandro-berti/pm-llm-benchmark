```python
from pm4py.objects.petri_net.obj import PetriNet, Marking
from pm4py.objects.petri_net.utils import petri_utils

net = PetriNet("insurance_claim_net")

# Places
source = PetriNet.Place("source")
sink = PetriNet.Place("sink")
p_to_verify = PetriNet.Place("p_to_verify")
p_after_dv = PetriNet.Place("p_after_dv")
p_to_resubmit = PetriNet.Place("p_to_resubmit")
p_verified = PetriNet.Place("p_verified")
p_after_fc = PetriNet.Place("p_after_fc")
p_to_investigate = PetriNet.Place("p_to_investigate")
p_after_ii = PetriNet.Place("p_after_ii")
p_checked = PetriNet.Place("p_checked")
p_after_ca = PetriNet.Place("p_after_ca")
p_to_approve = PetriNet.Place("p_to_approve")
p_assessed = PetriNet.Place("p_assessed")
p_after_p = PetriNet.Place("p_after_p")
p_after_n = PetriNet.Place("p_after_n")

net.places.add(source)
net.places.add(sink)
net.places.add(p_to_verify)
net.places.add(p_after_dv)
net.places.add(p_to_resubmit)
net.places.add(p_verified)
net.places.add(p_after_fc)
net.places.add(p_to_investigate)
net.places.add(p_after_ii)
net.places.add(p_checked)
net.places.add(p_after_ca)
net.places.add(p_to_approve)
net.places.add(p_assessed)
net.places.add(p_after_p)
net.places.add(p_after_n)

# Transitions
t_cr = PetriNet.Transition("t_cr", "Claim Registration (CR)")
t_dv = PetriNet.Transition("t_dv", "Document Verification (DV)")
t_dv_ok = PetriNet.Transition("t_dv_ok", None)
t_need_rds = PetriNet.Transition("t_need_rds", None)
t_rds = PetriNet.Transition("t_rds", "Re-Document Submission (RDS)")
t_fc = PetriNet.Transition("t_fc", "Fraud Check (FC)")
t_fc_ok = PetriNet.Transition("t_fc_ok", None)
t_doubts = PetriNet.Transition("t_doubts", None)
t_ii = PetriNet.Transition("t_ii", "In-depth Investigation (II)")
t_continue = PetriNet.Transition("t_continue", None)
t_more_ii = PetriNet.Transition("t_more_ii", None)
t_ca = PetriNet.Transition("t_ca", "Claim Assessment (CA)")
t_no_ap = PetriNet.Transition("t_no_ap", None)
t_need_ap = PetriNet.Transition("t_need_ap", None)
t_ap = PetriNet.Transition("t_ap", "Approval (AP)")
t_p = PetriNet.Transition("t_p", "Payment (P)")
t_n = PetriNet.Transition("t_n", "Notification (N)")
t_cl = PetriNet.Transition("t_cl", "Closure (CL)")

net.transitions.add(t_cr)
net.transitions.add(t_dv)
net.transitions.add(t_dv_ok)
net.transitions.add(t_need_rds)
net.transitions.add(t_rds)
net.transitions.add(t_fc)
net.transitions.add(t_fc_ok)
net.transitions.add(t_doubts)
net.transitions.add(t_ii)
net.transitions.add(t_continue)
net.transitions.add(t_more_ii)
net.transitions.add(t_ca)
net.transitions.add(t_no_ap)
net.transitions.add(t_need_ap)
net.transitions.add(t_ap)
net.transitions.add(t_p)
net.transitions.add(t_n)
net.transitions.add(t_cl)

# Arcs
petri_utils.add_arc_from_to(source, t_cr, net)
petri_utils.add_arc_from_to(t_cr, p_to_verify, net)
petri_utils.add_arc_from_to(p_to_verify, t_dv, net)
petri_utils.add_arc_from_to(t_dv, p_after_dv, net)
petri_utils.add_arc_from_to(p_after_dv, t_dv_ok, net)
petri_utils.add_arc_from_to(t_dv_ok, p_verified, net)
petri_utils.add_arc_from_to(p_after_dv, t_need_rds, net)
petri_utils.add_arc_from_to(t_need_rds, p_to_resubmit, net)
petri_utils.add_arc_from_to(p_to_resubmit, t_rds, net)
petri_utils.add_arc_from_to(t_rds, p_verified, net)
petri_utils.add_arc_from_to(p_verified, t_fc, net)
petri_utils.add_arc_from_to(t_fc, p_after_fc, net)
petri_utils.add_arc_from_to(p_after_fc, t_fc_ok, net)
petri_utils.add_arc_from_to(t_fc_ok, p_checked, net)
petri_utils.add_arc_from_to(p_after_fc, t_doubts, net)
petri_utils.add_arc_from_to(t_doubts, p_to_investigate, net)
petri_utils.add_arc_from_to(p_to_investigate, t_ii, net)
petri_utils.add_arc_from_to(t_ii, p_after_ii, net)
petri_utils.add_arc_from_to(p_after_ii, t_continue, net)
petri_utils.add_arc_from_to(t_continue, p_checked, net)
petri_utils.add_arc_from_to(p_after_ii, t_more_ii, net)
petri_utils.add_arc_from_to(t_more_ii, p_to_investigate, net)
petri_utils.add_arc_from_to(p_checked, t_ca, net)
petri_utils.add_arc_from_to(t_ca, p_after_ca, net)
petri_utils.add_arc_from_to(p_after_ca, t_no_ap, net)
petri_utils.add_arc_from_to(t_no_ap, p_assessed, net)
petri_utils.add_arc_from_to(p_after_ca, t_need_ap, net)
petri_utils.add_arc_from_to(t_need_ap, p_to_approve, net)
petri_utils.add_arc_from_to(p_to_approve, t_ap, net)
petri_utils.add_arc_from_to(t_ap, p_assessed, net)
petri_utils.add_arc_from_to(p_assessed, t_p, net)
petri_utils.add_arc_from_to(t_p, p_after_p, net)
petri_utils.add_arc_from_to(p_after_p, t_n, net)
petri_utils.add_arc_from_to(t_n, p_after_n, net)
petri_utils.add_arc_from_to(p_after_n, t_cl, net)
petri_utils.add_arc_from_to(t_cl, sink, net)

# Initial and final markings
im = Marking()
im[source] = 1
fm = Marking()
fm[sink] = 1
```