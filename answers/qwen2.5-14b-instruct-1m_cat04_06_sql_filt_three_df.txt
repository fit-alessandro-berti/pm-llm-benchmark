To achieve the desired result, we can break down the problem into a series of steps and use common SQL techniques such as self-joins, window functions, and filtering. Below is the DuckDB SQL query that accomplishes this task:

```sql
WITH sequence_cases AS (
    SELECT e1.case_id
    FROM event_log e1
    JOIN event_log e2 
        ON e1.case_id = e2.case_id 
        AND e1.activity = 'Approve Purchase Requisition' 
        AND e2.activity = 'Create Order' 
        AND e2.timestamp > e1.timestamp
    JOIN event_log e3 
        ON e2.case_id = e3.case_id 
        AND e3.activity = 'Confirm Order' 
        AND e3.timestamp > e2.timestamp
    WHERE DATE_PART('day', e3.timestamp - e2.timestamp) > 5
),

filtered_cases AS (
    SELECT DISTINCT case_id
    FROM sequence_cases
)

SELECT *
FROM event_log
WHERE case_id NOT IN (SELECT case_id FROM filtered_cases)
ORDER BY case_id, timestamp;
```

### Explanation:

1. **Identify Cases with the Specific Sequence:**
   - **sequence_cases CTE:** This Common Table Expression (CTE) identifies cases (`case_id`) that contain the specific sequence of activities in the exact order:
     - 'Approve Purchase Requisition'
     - 'Create Order'
     - 'Confirm Order'
   - This is done by joining the `event_log` table on itself three times (e1, e2, e3) with appropriate conditions:
     - `e1.case_id = e2.case_id` and `e2.case_id = e3.case_id` ensure that events belong to the same case.
     - `e2.timestamp > e1.timestamp` and `e3.timestamp > e2.timestamp` ensure the events are in the correct order.
     - The condition `DATE_PART('day', e3.timestamp - e2.timestamp) > 5` ensures that the time difference between 'Create Order' and 'Confirm Order' is more than 5 days.

2. **Filter Cases with the Specific Sequence and Timing Condition:**
   - **filtered_cases CTE:** This CTE extracts distinct `case_id`s from the `sequence_cases` CTE, which are the cases that meet both the sequence and timing conditions.

3. **Exclude Events from Filtered Cases:**
   - The final `SELECT` statement retrieves all events from the `event_log` table where the `case_id` is not in the `filtered_cases` list.
   - The result is ordered by `case_id` and `timestamp` for clarity.

This query ensures that only events from cases that do not meet the specified sequence and timing criteria are included in the final result set.