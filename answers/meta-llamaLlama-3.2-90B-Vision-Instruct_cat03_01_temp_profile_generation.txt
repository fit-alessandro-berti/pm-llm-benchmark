Here's an example of a temporal profile for a Purchase-to-Pay process as a Python dictionary:

```python
temporal_profile = {
    ('Create Purchase Order', 'Approve Purchase Order'): (86400, 3600),  # 1 day, 1 hour std
    ('Approve Purchase Order', 'Place Purchase Order'): (3600, 1800),  # 1 hour, 30 minutes std
    ('Place Purchase Order', 'Receive Goods'): (604800, 86400),  # 7 days, 1 day std
    ('Receive Goods', 'Create Invoice'): (86400, 3600),  # 1 day, 1 hour std
    ('Create Invoice', 'Approve Invoice'): (3600, 1800),  # 1 hour, 30 minutes std
    ('Approve Invoice', 'Release Payment'): (3600, 1800),  # 1 hour, 30 minutes std
    ('Release Payment', 'Make Payment'): (86400, 3600),  # 1 day, 1 hour std
    ('Create Purchase Order', 'Approve Invoice'): (259200, 43200),  # 3 days, 12 hours std
    ('Create Purchase Order', 'Create Invoice'): (345600, 51840),  # 4 days, 14 hours std
    ('Create Purchase Order', 'Release Payment'): (432000, 86400),  # 5 days, 1 day std
    ('Create Purchase Order', 'Make Payment'): (518400, 103680),  # 6 days, 2 days std
    ('Approve Purchase Order', 'Receive Goods'): (604800, 86400),  # 7 days, 1 day std
    ('Approve Purchase Order', 'Create Invoice'): (604800, 86400),  # 7 days, 1 day std
    ('Approve Purchase Order', 'Approve Invoice'): (604800, 86400),  # 7 days, 1 day std
    ('Approve Purchase Order', 'Release Payment'): (604800, 86400),  # 7 days, 1 day std
    ('Approve Purchase Order', 'Make Payment'): (604800, 86400),  # 7 days, 1 day std
    # Add more indirect activity pairs as needed.
}
