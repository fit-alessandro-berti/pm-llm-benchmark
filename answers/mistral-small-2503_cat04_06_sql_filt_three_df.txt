To achieve the desired result, we need to follow these steps:

1. Identify cases that contain the specific sequence of activities: 'Approve Purchase Requisition', 'Create Order', and 'Confirm Order' in direct succession.
2. Filter out cases where the time between 'Create Order' and 'Confirm Order' is more than 5 days.
3. Exclude these cases from the final result.

Here is the SQL query to accomplish this:

```sql
WITH SequenceCases AS (
    SELECT
        e1.case_id,
        e1.activity AS activity1,
        e2.activity AS activity2,
        e3.activity AS activity3,
        e2.timestamp AS create_order_timestamp,
        e3.timestamp AS confirm_order_timestamp
    FROM
        event_log e1
    JOIN
        event_log e2 ON e1.case_id = e2.case_id AND e1.timestamp < e2.timestamp
    JOIN
        event_log e3 ON e2.case_id = e3.case_id AND e2.timestamp < e3.timestamp
    WHERE
        e1.activity = 'Approve Purchase Requisition'
        AND e2.activity = 'Create Order'
        AND e3.activity = 'Confirm Order'
        AND NOT EXISTS (
            SELECT 1
            FROM event_log e4
            WHERE e4.case_id = e1.case_id
              AND e4.timestamp > e1.timestamp
              AND e4.timestamp < e2.timestamp
        )
        AND NOT EXISTS (
            SELECT 1
            FROM event_log e5
            WHERE e5.case_id = e2.case_id
              AND e5.timestamp > e2.timestamp
              AND e5.timestamp < e3.timestamp
        )
),
FilteredCases AS (
    SELECT
        case_id
    FROM
        SequenceCases
    WHERE
        confirm_order_timestamp - create_order_timestamp > INTERVAL 5 DAY
)
SELECT
    *
FROM
    event_log
WHERE
    case_id NOT IN (SELECT case_id FROM FilteredCases);
```

### Explanation:

1. **SequenceCases CTE**:
   - This Common Table Expression (CTE) identifies cases that have the sequence of activities 'Approve Purchase Requisition', 'Create Order', and 'Confirm Order' in direct succession.
   - It joins the `event_log` table with itself three times to find the required sequence.
   - The `NOT EXISTS` clauses ensure that there are no other events between the specified activities.

2. **FilteredCases CTE**:
   - This CTE filters out cases where the time between 'Create Order' and 'Confirm Order' is more than 5 days.

3. **Final SELECT**:
   - The final query selects all events from the `event_log` table except those that belong to the cases identified in the `FilteredCases` CTE.

This query ensures that only events from cases that do not meet the specified sequence and timing condition are returned.