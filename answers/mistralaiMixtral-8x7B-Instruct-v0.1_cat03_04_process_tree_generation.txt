 Sure, here is an example of a process tree for a hypothetical Purchase-to-Pay process:

```
from pm4py.objects.process_tree.obj import ProcessTree, Operator

root = ProcessTree(operator=Operator.SEQUENCE)

initiate_purchase = ProcessTree(label="Initiate Purchase", parent=root)

approve_purchase = ProcessTree(label="Approve Purchase", parent=root)

order_goods = ProcessTree(label="Order Goods", parent=root)

receive_goods = ProcessTree(label="Receive Goods", parent=root)

invoice_receipt = ProcessTree(label="Invoice Receipt", parent=root)

pay_invoice = ProcessTree(label="Pay Invoice", parent=root)

close_purchase = ProcessTree(label="Close Purchase", parent=root)

root.children.append(initiate_purchase)
root.children.append(approve_purchase)
root.children.append(order_goods)
root.children.append(receive_goods)
root.children.append(invoice_receipt)
root.children.append(pay_invoice)
root.children.append(close_purchase)
```

This process tree describes a sequence of activities in the Purchase-to-Pay process, starting with initiating a purchase, followed by approval of the purchase, ordering goods, receiving goods, receiving an invoice, paying the invoice, and finally closing the purchase.

Of course, this is a simplified example, and in a real-world scenario, the process tree might be more complex, with loops, parallel execution, and exclusive choices between different activities.