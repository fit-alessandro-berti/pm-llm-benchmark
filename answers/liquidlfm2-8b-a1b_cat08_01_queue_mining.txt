# Comprehensive Data-Driven Process Mining Approach for Outpatient Patient Flow Optimization

## 1. Queue Identification and Characterization

### 1.1 Calculating Waiting Times from Event Logs

In process mining, the **waiting time (queue time)** is defined as the duration a patient spends **actively waiting in a bottleneck stage** between the completion of one activity and the start (or completion, depending on context) of the next. In most clinical visits, waiting occurs *after activity completion* but *before the next scheduled activity begins* — i.e., between `COMPLETE` and `START` timestamps of consecutive events for the same patient.

For each **unique patient visit (Case ID)**, reconstruct the chronological activity timeline:

- Sort events by timestamp.
- Group by patient (`Case ID`).
- For consecutive events with the same patient:
  - If the second event is `START`, no wait — transition is direct.
  - If the second event is `COMPLETE` (next phase), compute:
    \[
    \text{Waiting Time} = \text{Next Event Timestamp} - \text{Previous Event Timestamp}
    \]
  - This interval captures the actual patient waiting time before the next activity.

Examples:
- V1001 Registration  Registration COMPLETE  Nurse Assessment START: Wait time = min wait (not applicable, direct).
- Registration COMPLETE  Nurse Assessment START: Wait time = 6 min 15 sec (09:08:45 – 09:02:15).
- Nurse Assessment COMPLETE  ECG Test START: Wait time = duration from 09:25:10 to 10:22:15 = 52 min 5 sec.

**Queue Metrics to Calculate:**

| Metric                              | Definition/Rationale                                                  |
|------------------------------------|---------------------------------------------------------------------|
| **Average Waiting Time**            | Mean waiting time across all patients and queues. Identifies baseline pressure. |
| **Median Waiting Time**             | Median ensures robustness against outliers; critical if skewed (common in healthcare). |
| **Maximum Waiting Time**            | Highlights extreme cases needing urgent intervention.              |
| **90th Percentile Waiting Time**    | Indicates the patient experience threshold; helps define service level targets. |
| **Queue Frequency (Count by Time Intervals)** | Distribution of wait durations; reveals peak bottlenecks (e.g., 30–60 min). |
| **Patients Experiencing Excessive Wait** | Cases where waiting exceeds 80–90 min (thresholds defined by average + 3× std dev or clinical guidelines). |

### 1.2 Identifying Critical Queues

To prioritize bottlenecks for improvement, use a weighted triage framework combining:

- **Waiting Time Magnitude:** Longest wait times (e.g., top 20%) signal most severe issues.
- **Frequency:** Queues affecting a high volume of patients indicate systemic constraints.
- **Impact on Patient Types/Urgency:**  
  - Separate metrics for **New vs. Follow-up** and **Normal vs. Urgent** patients (e.g., Urgent patients often have shorter allowed wait windows post-check-in).  
  - Urgent patients typically face stricter time budgets; even short waits can degrade experience.

**Criteria for Highest Priority:**

1. **Longest Average Wait Time** among all queues — identifies outright inefficient stages.  
2. **Highest Maximum Wait Time** — locates most painful patient experiences.  
3. **Highest Queue Frequency in a Narrow Time Window** (e.g., >30 min) — reveals acute congestion risk.  
4. **Low Services per Wait (via parallelization analysis)** — where wait = resource idle time, indicates missed throughput opportunities.

Example prioritization:  
- Queue A: Urgent Follow-up with average wait 85 min, frequency 12 cases/week  high priority.  
- Queue B: New Patient Registration wait 75 min, 18 cases/week, but only peak 30 min  moderate, manageable.  
- Queue C: Routine Blood Test with max 40 min, 5 cases/week  negligible impact.

Process mining tools (e.g., Calla, ProM, Disco) enable **automated queue mining** by clustering similar visitation paths and extracting wait-time distributions per lane (e.g., Registration  Nurse, Nurse  Test, Doctor  Check-out).

---

## 2. Root Cause Analysis

### 2.1 Key Potential Root Causes of Queuing Bottlenecks

- **Resource Bottlenecks:**  
  - Nurse shortages during peak hours (common in Nurse Assessment).  
  - Limited availability of specialized rooms/equipment (ECG, X-Ray) causing equipment idle or patient queueing.  
  - Clinician overbooking during high-urgency phases.

- **Activity Dependencies & Handovers:**  
  - Delays from slow clinic staff delivering Registration  secretary to Clerk A.  
  - Multi-step tests requiring nurse, room, and tech handoffs (e.g., ECG — nurse schedules  tech reserved  room cleared).  

- **Service Time Variability:**  
  - Diagnostic tests (ECG, Blood) exhibit long and variable durations, breaking predictable scheduling.  
  - Follow-up visits vary in nurse assessment duration due to patient complexity.

- **Appointment Scheduling Policies:**  
  - First-come-first-served may overload high-priority patients at visit start.  
  - Lack of time-blocking by specialty or urgency category  clustering errors.

- **Patient Arrival Patterns:**  
  - Batch arrivals create transient congestion at Registration or Triage.  
  - Overlap in resource-intensive activities (e.g., multiple critical cases requiring Dr. Smith simultaneously).

- **Patient Type Differences:**  
  - **Urgent patients** often trigger same-status Registration  Nurse  Test queues without dynamic triage.  
  - New patients consume full registration workflow; follow-ups skip redundant steps, but nurse assessment may still bottleneck.

---

### 2.2 Supporting Root Cause Analysis via Process Mining Techniques

- **Resource Analysis:**  
  - Mine concerted relationships between Case ID and Resource (e.g., nurse, room).  
  - Visualize resource utilization heatmaps over time to detect overlap and idle/underuse periods.

- **Bottleneck Analysis (Using Time-to-Complete and Queue Length):**  
  - Track duration per lane (Registration  Nurse, Nurse  Test, etc.).  
  - Identify lanes with longest average *wait times*, longest *max wait*, or highest *cycle time variation*.

- **Variant Analysis:**  
  - Cluster patient visits by triage category (New/Follow-up), urgency (Normal/Urgent), and specialty.  
  - Identify sub-processes with drastically different wait distributions — e.g., Urgent Follow-ups vs. Normal/New Root Cause Variant.

- **Predictive Interruptions via Log Correction/Mutation Testing:**  
  - For rare but extreme waits, hypothesize process mutations (e.g., "dynamically shift nurses to Lane B when Nurse Assessment waits exceed 60 min").  
  - Use historical logs to simulate impact before implementing.

- **Tracing Overlaps and Interruptions:**  
  - Analyze temporal overlap between activities (e.g., doctor overlaps with nurse).  
  - Uncover unnecessary handover delays or idle periods due to coordination gaps.

---

## 3. Data-Driven Optimization Strategies

### Strategy 1: Dynamic Nurse Scheduling Based on Real-Time Queue Monitoring

- **Target Queue:** Nurse Assessment phase, especially during high-activity periods.

- **Root Cause Addressed:** Understaffing  long waits  cascading delays.

- **Data-Driven Support:**  
  - Use historical nurse workload (minutes per visit, variance) and wait-time correlations.  
  - Apply machine learning (e.g., time-series forecasting) on daily patient volumes and urgency mix.
  - Adjust daily nurse schedules dynamically: increase coverage during morning peak (e.g., 09:00–12:00), reduce during midday lulls.

- **Impact:**  
  - Reduce Nurse Assessment waiting times by 40–50%.  
  - Expected average visit duration reduction: 10–15 min.  
  - Improved patient satisfaction and throughput by enabling faster progression to clinical evaluation.

- **Trade-offs:**  
  - Requires HR flexibility and real-time scheduling software.  
  - Risk: Overstaffing during lulls; use predictive analytics to balance.

---

### Strategy 2: Parallelized Activity Blocks with Pre-Stage Preparation

- **Target Queue:** Registration to Nurse Assessment.

- **Root Cause Addressed:** Serial processing (Register  Nurse), causing transit time.

- **Data-Driven Support:**  
  - Analyze registration-to-assessment wait time distributions — often longest queue.  
  - Introduce **pre-visit preparation**: automatic patient data loading, pre-registration checklists, nurse assignment pre-staging.  
  - Use parallel lanes: Register simultaneously for New and Follow-up patients when possible; queue Nurse Assessment after registration completes.

- **Implementation:**  
  - Segment patients by registration readiness (pre-filled EHR, insurance verified).  
  - Assign nurse slot availability dynamically based on queue length.  
  - Pilot in a subsampling of patient types, measure wait time shifts.

- **Impact:**  
  - Reduce Registration-to-Nurse average wait by 60%.  
  - Enable faster transition into clinical assessment, shortening total visit duration.

- **Trade-offs:**  
  - Initial workflow redesign complexity.  
  - Requires EHR integration for automated preprocessing.

---

### Strategy 3: Urgency-Based Time Blocking with Buffer Allocation

- **Target Queue:** Doctor Consultation and Test phases for Urgent patients.

- **Root Cause Addressed:** Concurrent demand on high-cost resources (Dr. Smith, ECG room).

- **Data-Driven Support:**  
  - Segment cases by urgency and compare wait times vs. time-to-service targets (e.g., "Urgent patients < 60 min").  
  - Where Urgent patient wait > threshold (e.g., 90 min), allocate **dedicated time blocks** exclusively for Urgent cases, reserving resources.

- **Operational Mechanism:**  
  - Use conditional scheduling: If current Urgent load exceeds N% capacity, block next 30 min exclusively for Urgent visits.  
  - Use disjunctive scheduling rules: Separate Urgent vs. Non-Urgent queues in real-time.

- **Impact:**  
  - Reduce Urgent patient wait time below 45 min (from historical 85 min), improving care satisfaction and clinical outcomes.  
  - Maintain throughput by avoiding blanket delays to all visits.

- **Trade-offs:**  
  - May reduce non-urgent wait times due to resource constriction; mitigate by staggered urgent allocations.  
  - Requires clear triage protocols and staff training.

---

## 4. Consideration of Trade-offs and Constraints

- **Conflict: Wait Time Reduction vs. Operational Cost**  
  - Additional staffing or tech (e.g., real-time scheduling) increases cost.  
  - *Solution:* Focus on high-impact, low-cost levers first (e.g., nurse scheduling optimization), then scale. Use ROI analysis to validate.

- **Conflict: Speed vs. Care Quality**  
  - Accelerating visits risks diagnostic oversights.  
  - *Solution:* Preserve essential handoffs; embed real-time alerts for clinician review at key points. Train staff on efficient workflows.

- **Conflict: Bottleneck Shifting**  
  - Changing one lane (e.g., Nurse Assessment) may overload another (e.g., Test scheduling).  
  - *Solution:* System-wide bottleneck impact modeling, continuous monitoring, and feedback loops.

- **Data Constraints:**  
  - Requires high-fidelity, clean event logs with start/stop timestamps and resource tagging.  
  - *Solution:* Standardize logging across systems; clean irregular timestamps via outlier filtering.

---

## 5. Measuring Success and Sustained Improvement

### Key Performance Indicators (KPIs)

| KPI                                      | Measurement Method                                | Target Example After 3 Months                 |
|------------------------------------------|--------------------------------------------------|-----------------------------------------------|
| Average Wait Time (Registration  Nurse) | Mean of wait periods across all patients          | Reduce from 75 min  40 min (relative drop)   |
| Average Total Visit Duration             | Mean time from Check-in to Check-out             | Decrease from 120 min  90 min                |
| Urgent Patient Maximum Wait Time        | Max wait time among Urgent cases                  | From 85 min  <45 min                         |
| Nurse Utilization Rate                   | % time nurses actively engaged in patient activity | Optimize 70–85% (avoid over/under)           |
| Patient Satisfaction Score (related to wait) | Post-visit survey, e.g., NPS or custom metric    | Increase from 62 to 80                       |
| Throughput (Cases per Operational Hour)  | Visits completed per staff-hour                    | Increase by 15–20%                            |

### Ongoing Process Monitoring

- **Re-run Queue Mining Monthly:**  
  - Track KPIs and visualize wait-time distributions over time.  
  - Use dashboards to highlight emerging bottlenecks (e.g., new test queues ballooning).

- **Alerts for Outliers:**  
  - Auto-trigger notifications when wait time exceeds thresholds (e.g., 75 min).  
  - Enable root cause investigation on trigger cases.

- **Feedback Loops:**  
  - Integrate staff input on workflow friction points; correlate with logs.  
  - Conduct quarterly process audits using minimized but representative event logs.

- **Digital twins of simulation:**  
  - Model "what-if" scenarios (e.g., ‘what if nurse count increases by 10%?’) to forecast impact without disruption.

---

**Conclusion:**  
A structured, data-driven process mining approach enables the clinic to pinpoint not just *where* queues form, but *why* — unlocking targeted, measurable improvements. By quantifying wait metrics, analyzing root causes through advanced process mining techniques, and deploying prioritized, evidence-based interventions, the clinic can significantly enhance patient experience, throughput, and operational efficiency—all while respecting clinical quality and cost constraints.