--------------------------------------------------------------------
1.  IDENTIFYING INSTANCESPANNING CONSTRAINTS AND THEIR IMPACT
--------------------------------------------------------------------
Step 0 – Prepare the event log  
• Complete start/end pairs for every activity.  
• Add two derived columns per record:  
  – busy_since(resource)   time the resource became busy (by scanning backwards).  
  – busy_until(resource)   time the resource becomes free (by scanning forward).  

Constraint A – Limited ColdPacking stations (5)  
• Detection: filter “Packing” records with Requires Cold Packing = TRUE and count concurrent executions.  
• Metrics  
  1. Average queue/waiting time before start of ColdPacking (end ItemPicking  start Packing).  
  2. Station utilisation = (packing duration)/((#stations) × period length).  
  3. Overtime frequency: % of time 6th order wanted to start while all 5 stations were busy.  
• Impact isolation: waiting_time_i = start_i(Packing) – complete_i(ItemPicking).  
  – Tag it “resourcecaused” if at start_i all 5 stations were busy (look at busy_until).  
  – Else tag it “orderinternal” ( e.g., picker walked the pallet late).

Constraint B – Shippingbatch formation  
• Detection: correlate Shipping Label records that share Destination Region and batchid.  
• Metrics  
  1. Batch wait = complete_i(Quality Check) – batch_release_time.  
  2. Batch cycle = time between first and last order entering same batch.  
  3. Average batch size vs region.  

Constraint C – Express preemption  
• Detection: find completions where resource of type Station/Picker/QC shows timeline:   
  Standard START  … Express START  … Standard COMPLETE after gap.  
• Metrics  
  1. # of preemption events.  
  2. Delay injected into preempted cases = COMPLETE_std – (EXPECTED_complete_std had it not been paused).  
  3. Express speedup = leadtime_express / leadtime_standard.  

Constraint D – Regulatory 10HazMat rule  
• Detection: slidingwindow count of concurrent “Packing” + “QualityCheck” where Hazardous = TRUE.  
• Metrics  
  1. Rulebreach attempts blocked (order waiting although a free QC worker existed).  
  2. HazMat throughput loss = waiting_time_regulatory / total leadtime.  
  3. %time system is saturated (exactly 10 HazMat orders running).  

Distinguishing within vs betweeninstance waiting  
• For every idle interval before an activity, compute two boolean flags:  
  – resource_available?  (TRUE if a proper idle resource existed).  
  – constraint_satisfied? (TRUE if starting would not violate batching/hazmat limit).  
• Classification  
  1. Betweeninstance wait: resource_available? = FALSE  OR constraint_satisfied? = FALSE.  
  2. Withininstance wait: both TRUE  cause is inside the case (e.g., missing items).  

--------------------------------------------------------------------
2.  ANALYSING INTERACTIONS AMONG CONSTRAINTS
--------------------------------------------------------------------
Interaction 1 – Express order + ColdPacking  
• Express jobs can preempt Standard ones occupying a Cold station  regular queue becomes “stopandgo”  setups are repeated  station utilisation  but effective throughput .

Interaction 2 – HazMat limit + Batching  
• Region “West” might have many HazMat orders. If batch threshold = 10 orders and HazMat limit = 10 concurrent, the moment the batch is released all 10 HazMat slots are occupied, blocking any other hazardous order for the whole facility until that batch passes QC.

Interaction 3 – Express + HazMat  
• An Express HazMat order can monopolise one of the 10 regulatory slots, pushing back other hazardous but nonexpress orders more than strictly necessary.

Why it matters  
• Improvements aimed at one constraint (e.g., adding ColdPacking capacity) may be neutralised if another coupled constraint (e.g., HazMat limit) becomes the new bottleneck.  
• Simulation must therefore model all four simultaneously.

--------------------------------------------------------------------
3.  CONSTRAINTAWARE OPTIMISATION STRATEGIES
--------------------------------------------------------------------
Strategy 1 – Dynamic ColdPacking Allocation & Preemption Buffer  
Addresses: Limited ColdPacking, Express preemption  
a) Install a small refrigerated buffer (2 pallet positions) in front of each Cold station.  
b) Rule: A Standard order being preempted is moved to the buffer instead of forcing the operator to resume the same unfinished pack later.  
c) Datadriven sizing: event log shows 92 % of outages last < 6 min; buffer sized for 2 ongoing packs protects against 98 % of interruptions.  
Expected outcome:  
• Reduce average setup loss time by 60 %.  
• Cut coldstation wait time for Express job by 25 % because preemption becomes instantaneous.  
• Net gain: +8 % overall ColdPacking throughput, –12 % endtoend leadtime for perishable orders.

Strategy 2 – Adaptive ShippingBatch Release Logic  
Addresses: Shipping batches, HazMat interaction  
a) Replace “fixed batch size” by “timeorsize” policy: release when (size  x) OR (oldest order waiting  y min).  
b) Optimise x,y per region through replayonlog and predictive queuing analysis (e.g., x=8,y=10 min for lowvolume regions; x=15,y=20 min for highvolume).  
c) Additional rule: if  7 orders in batch are HazMat and current HazMatinprocess  7, postpone release until count < 7 to avoid hitting 10slot ceiling.  
Expected outcome:  
• Batch wait time  35 %.  
• HazMat concurrency ceiling breached 0 times (was 18 times/week).  
• Shipping cost unchanged because average load factor maintained.

Strategy 3 – ConstraintAware FiniteCapacity Scheduler  
Addresses: All four constraints simultaneously  
a) Deploy a scheduling engine (easy start: enhanced priority queue) fed every 5 min with realtime WIP list.  
b) Decision rules in order of precedence:  
   1. Hard safety constraint (HazMat  10).  
   2. Express priority.  
   3. ColdPacking availability.  
   4. Batchrelease projection (start cases that will probably form same batch soon).  
c) Uses predictive resourcedemand curves derived from processminingbased autoregression models (trained on the 3month log).  
d) “Lookahead” horizon 90 min; solver chooses start times to minimise weighted tardiness.  
Expected outcome:  
• SLA on 24h delivery met for 97 % orders (was 89 %).  
• Overtime cost –10 %.  
• Scheduler becomes a single point to tweak future rules without expensive physical changes.

--------------------------------------------------------------------
4.  SIMULATION AND VALIDATION
--------------------------------------------------------------------
Technique: Discreteevent simulation built in tools such as AnyLogic or Celonis EMS “Whatif” lab.

Model ingredients  
• Controlflow model mined via Split Miner (gives precedence and concurrency).  
• Resource calendars created from the log (shifts, breaks).  
• Four global constraints coded as:  
  – ColdStations = 5 resources, changeover penalty when preempted.  
  – Batch objects with dynamic release rule.  
  – Priority queue with preemption cost.  
  – Semaphore HazMatSlots(10).  

Experiment design  
• Baseline run reproduces threemonth KPIs ±3 %.  
• Scenarios: S1 = buffer, S2 = adaptive batch, S3 = scheduler, S4 = buffer+batch, S5 = all three.  
Measures tracked: order leadtime, 90thpercentile delay, % rule violations, resource utilisation, shipping cost.  
Validation: perform backtesting – replay the real arrival pattern of one historical peak week and compare simulated start/end times with reality (mean absolute error < 5 min per activity validates the model).

--------------------------------------------------------------------
5.  POSTIMPLEMENTATION MONITORING
--------------------------------------------------------------------
Dashboards (update hourly)

A. Resource Contention  
   • ColdPacking queue length & wait histogram.  
   • Utilisation per station with preemption count overlay.

B. Batch Performance  
   • Batch wait time per region (box plots).  
   • Released batch size vs policy limits.  

C. Priority Compliance  
   • Average and 95percentile leadtime Express vs Standard.  
   • # of standard orders paused > 1 time.

D. HazMat Safety  
   • Gantt of concurrent HazMat orders.  
   • Breach attempts autoblocked by scheduler (should remain 0).  

E. Global KPIs  
   • Ontime shipping rate.  
   • Throughput per day.  
   • Overtime hours.

Alert rules  
• ColdPacking queue > 8 orders for > 15 min  trigger temporary crosstrained staff deployment.  
• Average batch wait > policy × 1.3 for two consecutive hours  adjust yparameter automatically.  
• HazMat semaphore saturation > 80 % for > 30 min  advise operations to schedule a HazMat shuttle run sooner.

Regular process mining checks  
• Monthly conformance replay to ensure new hidden bottlenecks are not emerging.  
• Variant analysis to spot unplanned workarounds (e.g., manual bypass of scheduler).

By systematically identifying the exact impact of each instancespanning constraint, analysing their interactions, testing datadriven countermeasures in simulation, and installing targeted dashboards, the fulfillment centre can continuously steer its complex, interdependent order flow towards faster, safer and more reliable deliveries.