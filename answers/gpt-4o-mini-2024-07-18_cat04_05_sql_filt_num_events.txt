Here's an SQL query that fulfills the requirements you've outlined. This query counts the number of events for each `case_id`, filters out those with more than six events, and then retrieves the corresponding events from the filtered cases.

```sql
WITH case_event_counts AS (
    SELECT
        case_id,
        COUNT(*) AS event_count
    FROM
        event_log
    GROUP BY
        case_id
    HAVING
        COUNT(*) <= 6
)

SELECT
    el.*
FROM
    event_log el
JOIN
    case_event_counts cec ON el.case_id = cec.case_id;
```

### Explanation:
1. **Common Table Expression (CTE)**: We first create a CTE named `case_event_counts` that:
   - Selects `case_id` and counts the number of events associated with each `case_id`.
   - Groups the results by `case_id`.
   - Filters to include only those `case_id`s where the count of events is six or fewer (`HAVING COUNT(*) <= 6`).

2. **Final Selection**: The main query then selects all columns from the original `event_log` table, using a JOIN to include only those cases that were determined to have six or fewer events based on the CTE.

### Result:
This query will return all events associated with cases that have six or fewer events in total.