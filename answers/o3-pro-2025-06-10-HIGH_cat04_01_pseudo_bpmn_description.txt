Below is a “walk-through” of the process exactly as it would unfold on the shop-floor, coupled with an explanation of the BPMN elements that drive the routing.

1. Start Event  
   • Business meaning: something (an e-mail, phone call, web form, …) signals that a customer wants to place an order.  
   • BPMN symbol: a thin-lined circle. It only marks the point at which the process instance is born.

2. Task A – “Receive Customer Request”  
   • Purpose: capture all data that will later be validated, checked or quoted (customer identity, products, quantities, requested dates, special wishes, etc.).  
   • BPMN symbol: rounded rectangle (activity).

3. XOR Gateway – “Check Request Type”  
   • Why a XOR? Only one path can be chosen; a request is either “Standard” or “Custom”, never both.  
   • Decision basis: a flag in the order form, the presence of design drawings, or a sales rule such as “any modification to the catalogue = custom”.

––––– Standard branch –––––

4. Task B1 – “Perform Standard Validation”  
   • Typical checks: correctness of prices, shipping address, completeness of mandatory fields, etc.  
   • Output: a validated order header ready for detailed feasibility checks.

5. AND Gateway – “Run Parallel Checks” (Parallel Split)  
   • The AND (parallel) gateway launches two activities at the same time because they are independent and speed is gained by running them concurrently.

6. Task C1 – “Credit Check”  
   • Automated or manual credit-limit check against the customer’s account.

7. Task C2 – “Inventory Check”  
   • Verifies that enough stock exists or that replenishment is possible within the requested lead-time.

8. AND Gateway (Parallel Join) – “All Parallel Checks Completed”  
   • Waits until BOTH credit and inventory checks have finished (no matter their internal order of completion) before the flow can continue.

9. Task D – “Calculate Delivery Date”  
   • Combines the material availability date returned by the inventory check, transport lead-times and production slack to promise a delivery date.

––––– Custom branch –––––

4. Task B2 – “Perform Custom Feasibility Analysis”  
   • Involves engineering and cost-accounting; estimates tooling, lead-time, capacity and a target price.

5. XOR Gateway – “Is Customization Feasible?”  
   • Two mutually exclusive outcomes:

   5a. Yes  Task E1 – “Prepare Custom Quotation”  
       • Creates a technical specification, price, and indicative schedule for the customer.

   5b. No  Task E2 – “Send Rejection Notice”  End Event  
       • Politely declines the request; the process instance ends here because nothing more can be done.

––––– Convergence of both main paths –––––

Regardless of being in the Standard or the Custom (feasible) path, the next step is an exclusive decision on approval requirement.

10. XOR Gateway – “Is Approval Needed?”  
    • Business rule examples:  
      – Order value exceeds €50 000.  
      – Margin falls below 20 %.  
      – Delivery date is unusually tight.  
      – A special discount or free freight was promised.  
    • Outcomes: Yes  Task F, No  Task G directly.

11. Task F – “Obtain Manager Approval”  
    • Could be a manual sign-off, an e-mail with an embedded “Approve / Reject” button, or a worklist entry for a supervisor.

12. XOR Gateway – “Is Approval Granted?”  
    • Two mutually exclusive flows:

    12a. Yes  Task G – “Generate Final Invoice”  
        • The sales document is converted to an official invoice; ERP numbers and tax calculations are fixed.

    12b. No  Task H – “Re-evaluate Conditions”  
        • Standard request: go back to Task D to possibly pick a later delivery date, remove rush surcharge, etc.  
        • Custom request: go back to Task E1 to adjust the quotation (higher price, different spec, longer lead-time).  
        • BPMN notation: a sequence flow that loops to the earlier task. The loop may repeat until an approvable solution is found or the customer withdraws (not modelled here).

13. Task G – “Generate Final Invoice” (also reached when no approval was needed)  
    • Locks the order, prints or e-mails the invoice, and usually triggers down-stream logistics or production orders.

14. Task I – “Send Confirmation to Customer”  
    • A cover letter or e-mail is sent with the final commercial details and the promised delivery date.

15. End Event  
    • Marks the formal conclusion of this sales-front-office process. Subsequent fulfilment activities are outside the scope.

Key clarifications

A. Gateway types  
   • XOR (exclusive): exactly one outgoing flow is taken based on a condition.  
   • AND (parallel): all outgoing flows are taken simultaneously; the matching join waits for all incoming flows before releasing the token.  

B. Divergence/Convergence logic  
   • The XOR after Task A splits the flow; the separate branches converge only implicitly by leading to the same “Is Approval Needed?” gateway.  
   • The parallel credit / inventory paths formally converge at their AND join.  
   • The approval loop uses ordinary sequence flows that point back to an earlier task, forming a repeat-until-approved cycle.

C. Differences between Standard and Custom processing  
   • Standard requests rely on fixed catalogue items, so the effort centres on stock and credit checks plus a delivery promise.  
   • Custom requests require an engineering feasibility study and a commercial quotation. If feasibility is negative the process terminates early; the standard branch never terminates early.

D. When are approvals and rework triggered?  
   • “Approval needed” is decided after the technical/commercial preparation work is complete but before booking revenue.  
   • If the manager refuses approval, the process loops:  
       – Standard path: re-calculate deliverables (Task D).  
       – Custom path: re-price or re-specify the offer (Task E1).  
   • Only when the same instance passes the approval test does it proceed to final invoicing.

The pseudo-diagram therefore captures a classic order-management scenario that accommodates two product types, parallel feasibility checks, conditional managerial control and built-in rework to keep the process both compliant and customer-oriented.