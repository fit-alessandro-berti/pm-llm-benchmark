-------------------------------------------------
SECTION 1 – ANALYSING RESOURCE BEHAVIOUR & ASSIGNMENT PATTERNS
-------------------------------------------------
1.1  Metrics to mine per Agent / Tier  
• Work-load distribution  
  – Tickets started per agent per day / shift.  
  – Concurrency: mean max Nº of tickets “in progress” simultaneously.  
  – % idle time (derived from timestamps).  

• Processing & waiting times  
  – “Work L1/L2/L3 Start  End” (active handling time).  
  – “Assign  Work Start” (queue time).  
  – “End  Next-Activity” (handover delay).  

• Effectiveness indicators  
  – First-Call Resolution (FCR) for L1 = Nº tickets closed by L1 ÷ Nº tickets received by L1.  
  – Escalation ratio per agent / per category.  
  – Reassignment count per ticket; mean nº of different agents.  
  – SLA hit-rate per agent, per tier, per required skill.  

• Skill usage  
  – % of an agent’s time spent on tickets whose Required-Skill  Agent skill set (over-skilled/under-skilled).  
  – Heat-map: (Required Skill × Agent)  handling time spent.

1.2  Process-mining techniques to reveal reality  
• Social Network / Handover-of-Work graph  
  – Nodes = agents; edges weighted by Nº of tickets passed. Thick edges signal frequent escalations / reassignments between particular people or between tiers.  

• Role discovery / clustering  
  – Cluster agents based on activity patterns rather than HR tiers. Compare discovered roles with formal L1/L2/L3. Mismatches = “shadow roles”.  

• Resource interaction over time  
  – Process discovery per tier with “swim-lanes” shows where loops (AssignReassign) inflate lead time.  

• Timeline heatmaps  
  – Show when each skill is requested vs when agents owning it are busy/idle.

1.3  Intended vs. actual assignment logic  
Round-robin should create even workload, “L1 does basic, L2/L3 advanced”. By overlaying real metrics we check:  
  – Gini coefficient of ticket distribution.  
  – % P2/P3 that start directly in L2.  
  – % of L2/L3 time spent on tickets whose Required-Skill  “advanced” list.  
  – Variants where ticket travels “L1L2L1” (back-and-forth) – indicates rule confusion.

-------------------------------------------------
SECTION 2 – IDENTIFYING RESOURCE-RELATED BOTTLENECKS
-------------------------------------------------
From the mined metrics we can pinpoint:

2.1 Skill bottlenecks  
Example output: “Networking-Firewall” requested in 18 % of cases but only 3 agents cover it  average queue wait 2 h; 27 % of P2 SLA breaches attributable.

2.2 Reassignment delay  
For tickets with 2 reassignments, add 2.8 h mean lead time; these account for 41 % of all breached P3 SLA.

2.3 Incorrect initial assignment  
Decision-tree showing that if Ticket Category = Software-App & Channel = Phone & Required-Skill = CRM then FCR by L1 = 62 %; if escalated, eventual reassignment probability 48 %. Indicates dispatcher often escalates needlessly.

2.4 Over/under load  
Lorenz curve: top 20 % of agents handle 58 % of work; 15 agents under 30 % utilisation.

2.5 Specialist misuse  
L2/L3 spent 31 % of logged hours on tickets whose Required-Skill is “Basic-Troubleshoot” – potential wastage equal to 6.4 FTE-days per month.

-------------------------------------------------
SECTION 3 – ROOT-CAUSE ANALYSIS
-------------------------------------------------
3.1 Rule deficiencies  
Round-robin disregards Required-Skill, current load, or priority  high mismatch rate.

3.2 Skill profile inaccuracies  
Agent skill tables not updated; e.g., three L1 agents recently certified in SQL yet never assigned SQL tickets.

3.3 Poor ticket enrichment  
Only 72 % of tickets had Required-Skill populated at creation; missing values drive conservative escalations.

3.4 Limited visibility of real-time queues  
Dispatchers decide blindly; simulation shows a 15-minute-old snapshot would allow 11 % quicker P2 assignment.

3.5 Training gaps at L1  
Variant analysis: Tickets resolved in L1 have shorter descriptions (mean 18 words) vs. those escalated, suggesting confidence rather than complexity decides escalation. Surveys confirm L1 agents avoid DB and Security categories.

Decision-mining tree (Escalate? Yes/No) pinpoints factors: “Category=Security OR Free-time <20 min”  escalate with 0.82 probability, revealing workload pressure also pushes up escalations.

-------------------------------------------------
SECTION 4 – DATA-DRIVEN RESOURCE ASSIGNMENT STRATEGIES
-------------------------------------------------
Strategy 1 – Skill-Based & Workload-Aware Routing Engine  
• Issue addressed: Mismatched skills, uneven load, SLA breaches.  
• Logic: On ticket creation, Required-Skill (predicted if missing) + Priority + current agent load feed a routing algorithm (e.g., weighted bipartite matching).  
• Data needed: near real-time agent availability, up-to-date skill matrix, priority rules.  
• Expected benefits: 15-25 % reduction in queue time, 30 % fewer reassignments, +10 pp SLA compliance.  

Strategy 2 – Predictive Skill Classification & Auto-Enrichment  
• Issue: Missing / wrong Required-Skill leads to wrong tier.  
• Method: Train NLP classifier (random-forest or BERT) on historical ticket texts  outputs probability distribution over skills & tier. Confidence >80 % triggers auto-tag; else flagged for human confirmation.  
• Mining insight used: terms strongly correlated with eventual skill after reassignments.  
• Data: full ticket descriptions, final skill label from log.  
• Benefits: correct skill tagged at creation rises from 72 % to 95 %; expected 20 % drop in initial mis-assignments.  

Strategy 3 – L1 Empowerment & Dynamic Skill Bands  
• Issue: Specialists doing basic work; high escalations.  
• Approach:  
  1. Identify “candidate” skills where L1 already achieves 60 % success (e.g., App-CRM, OS-Windows).  
  2. Provide micro-training + playbooks  promote selected L1s to “L1+” band.  
  3. Routing engine initially offers low-risk P2/P3 of these skills to L1+ before L2.  
• Data: mined FCR rates by skill, cause-effect analysis of escalations.  
• Expected benefit: Releases ~25 % of L2 capacity, increases FCR from 42 % to >55 %, cuts average resolution time for those categories by 1.3 h.

(Optional complementary tactics: real-time load dashboard for dispatchers; cross-tier float pool during peak).

-------------------------------------------------
SECTION 5 – SIMULATION, IMPLEMENTATION & MONITORING
-------------------------------------------------
5.1  Simulation before go-live  
• Feed the discovered BPMN model plus resource calendars, processing-time distributions, and routing rules into a discrete-event simulator (e.g., ProM, Celonis EMS, AnyLogic).  
• Run “as-is” baseline vs. each new strategy and combined scenario.  
• KPIs to compare: mean time to assign, resolution, SLA % by priority, utilisation variance, specialist idle/overload, queue growth.  
• Sensitivity analysis: vary ticket arrival peaks and agent absenteeism.

5.2  Implementation Road-map  
1. Clean skill matrix; implement auto-enrichment model.  
2. Deploy routing engine in pilot (one region or selected categories).  
3. Train L1+ cohort and adjust thresholds.  
4. Go-live with staged roll-out; keep manual override for first 4 weeks.

5.3  Continuous monitoring with Process-Mining Dashboards  
Key views / KPIs:  
• Real-time SLA heat-map (priority × category).  
• “Assignments per ticket” trend line.  
• Utilisation scatter plot (agents) vs. capacity.  
• FCR rate (overall, by newly trained L1+ group).  
• Specialist time on basic tickets (%).  
• Reassignment delay histogram pre- vs. post-change.  
• Social-network comparison over time (edge weights should shrink where reassignments fall).  

Dashboards should refresh hourly; weekly governance meeting to inspect anomalies, feed findings back into routing rules and training backlog.

-------------------------------------------------
Outcome
-------------------------------------------------
By combining process-mining driven insights with targeted routing, enrichment and up-skilling, TechSolve can expect:

• 10 pp improvement in P2/P3 SLA compliance.  
• 20-30 % reduction in escalations/reassignments.  
• Better utilisation balance (Gini index drops).  
• Increased job satisfaction for specialists—more time on complex, value-adding work.