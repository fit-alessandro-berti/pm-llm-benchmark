Here is a draft SQL query that should meet the requirements:
```sql
SELECT 
  c.case_id,
  COUNT(e.case_id) AS total_events,
  SUM(CASE WHEN e.case_id IN (SELECT c.case_id FROM case_log c WHERE c.case_id = e.case_id) THEN 1 ELSE 0 END) AS six_or_less_events
FROM 
  case_log c
  LEFT JOIN event_log e ON c.case_id = e.case_id AND c.timestamp = e.timestamp
GROUP BY 
  c.case_id
HAVING 
  COUNT(e.case_id) <= 6;
```
Here's a brief explanation of the query:

* We use a `LEFT JOIN` to combine the `case_log` table with the `event_log` table on the `case_id` column, so that we can filter out any cases where the event count is greater than six.
* We then group the result by `case_id`, and calculate the total number of events and the number of events for each `case_id` by counting the number of rows in the `event_log` table that match the `case_id` in the `case_log` table.
* We filter the results to include only cases with six or fewer events by using the `HAVING` clause with a condition that counts the number of `case_id` values that match the original query.

Note that the `COUNT(e.case_id) <= 6` condition in the `HAVING` clause is used to filter out cases with more than six events, while the `COUNT(e.case_id) > 6` condition in the `GROUP BY` clause is used to filter out cases with fewer than six events.