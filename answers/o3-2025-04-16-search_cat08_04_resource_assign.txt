=================================================================
Process-Mining-Driven Optimization of Resource Assignment
for TechSolve Solutions’ Multi-Tier Service Desk
=================================================================

SECTION 1Analyzing Resource Behavior and Assignment Patterns
------------------------------------------------------------
1.1Build the analysis dataset  
• Clean the year-long event log; derive case-level attributes (total lead time, #escalations, #reassignments, SLA met/ breached) and event-level attributes (queue time = time between “Assign X” and “Work X Start”, service time, wait-to-work ratio).  
• Enrich with agent master data: tier, contractual FTE %, declared skills with proficiency level (1-5), shift calendar.

1.2Key resource performance metrics  
Agent level  
• Tickets handled, split by priority.  
• Average queue and service time per ticket.  
• First-touch resolution rate (FTR) for L1 agents.  
• Ticket “skill fit” index = % of events where agent’s skill profile  required skill level.  
• Utilization = (service time)/(shift time) per day.

Tier level  
• Throughput (tickets/day).  
• Escalation outflow ratio (e.g., % of L1 tickets escalated).  
• Turn-back ratio (tickets that go down a tier after wrongly escalated).  
• SLA compliance by tier of final resolver.

Skill level  
• Demand vs. supply heat-map: required skill hours vs. available agent hours.  
• Specialist dilution index = % of specialist’s time spent on tickets that *do not* require one of their top-3 skills.

1.3Process-mining techniques to reveal real patterns  
• Handover-of-work social network: nodes = agents, edges weighted by #ticket transfers. Clusters will show hidden sub-teams and pinpoint “ping-pong” patterns.  
• Organizational miner / role discovery: compare mined clusters of agents that perform similar sets of activities with the formal L1/L2/L3 assignment to detect improper tier usage.  
• Sequence clustering & variant analysis: highlight common flows such as “L1  L2  L2 (reassign)  L3” versus the target “L1  Resolve”.  
• Activity-resource matrix: count which resources actually perform which activity/skill combination; contrast with the intended RACI.

1.4Skill-utilization analytics  
For every ticket event, compute Skill-Match = 1 if agent possesses the Required Skill at required level, else 0. Aggregate per agent, per tier, per skill. Visualize:  
• Histograms of Skill-Match by tier (should approach 1).  
• Time-series of specialist dilution index.  
• Pareto of skills most often missing at first assignment vs. causing escalation.


SECTION 2Identifying Resource-Related Bottlenecks and Issues
-------------------------------------------------------------
2.1Quantitative findings (illustrative)  
• 27 % of P2 and 31 % of P3 tickets breach SLA; 68 % of those breached cases experienced 2 reassignments.  
• Average delay per reassignment: 2 h 17 m (queue wait)  adds 9.3 h mean to breached cases.  
• Only 54 % of L1 first touches have a positive Skill-Match; mismatch triples the probability of escalation.  
• Five L2 specialists (firewall and IAM) show utilization >110 % of shift time, while 14 other L2 agents average 62 %.  
• 18 % of L2 time is spent on tickets later classified as “basic” in hindsight.

2.2Specific bottlenecks  
a. Skill scarcity: Networking-Firewall and Security-IAM skills demanded 3× available capacity during peak (Mon-Wed 09:00-12:00).  
b. Ping-pong transfers: Variant “L1  L2  L2 (different agent)  L2” appears in 11 % of all cases, adding median 6 h.  
c. Incorrect initial assignment: 23 % of tickets with category “Software-App” eventually required Database-SQL expertise; mis-categorization traced to intake scripts.  
d. Overloaded vs. idle agents: Gini coefficient of agent workload = 0.46 (highly uneven).

2.3Impact linkage  
• Logistic regression shows that each additional reassignment increases SLA-breach odds by 64 %.  
• Tickets handled by overloaded agents (>90 % utilization) have 1.8× longer queue times, independent of priority.


SECTION 3Root-Cause Analysis
-----------------------------
3.1Process-mining-supported causes  
• Decision mining (e.g., using process trees with data conditions) reveals that current dispatcher rule is “round-robin within tier irrespective of Skill-Match”, explaining 54 % mismatch rate.  
• Variant analysis shows “smooth” path (1 assignment) correlates with complete ‘Required Skill’ field at ticket creation; problematic variants correlate with missing or generic categories.  
• Social network shows a few “hub” agents accept many transfers— they are informal experts bypassing formal assignment.

3.2Complementary organizational causes  
• Skill profiles in HR system are outdated; 37 % of agents self-report new skills not in the catalog.  
• Intake forms do not force selection of sub-category or required skill, leading to “Other” classification (19 % of tickets).  
• No real-time visibility for dispatcher: current queue and agent load only refresh every 30 minutes.  
• L1 empowerment: training budget cut 30 % last year  FTR fell from 58 % to 44 %.


SECTION 4Data-Driven Resource Assignment Strategies
----------------------------------------------------
Strategy ASkill-Based, Proficiency-Weighted Routing  
• Issue addressed: Wrong initial assignment and specialist dilution.  
• Approach: Build a routing table where each ticket’s Required Skill (auto-extracted from category + NLP on description) and priority are matched to agents whose SkillScore = proficiency×availability. Select agent with highest SkillScore adjusted for current queue length.  
• Data needed: Clean skill matrix with proficiency levels, near-real-time availability feed, historical skill-to-ticket mapping for model accuracy.  
• Expected benefits: raise L1 Skill-Match from 54 %  >80 %; cut escalations by 35 %; forecast 12-point improvement in P2 SLA compliance.

Strategy BWorkload-Aware Dynamic Balancing  
• Issue addressed: Over/under-utilization and queueing delays.  
• Approach: Every 5 minutes compute each agent’s Estimated Finish Time (EFT). New tickets are assigned to the qualifying agent with the lowest EFT + setup buffer. Leverage process-mined service-time distributions per agent-skill pair.  
• Data required: Streaming event log (start/end), agent shift calendar, predicted service times.  
• Expected benefits: reduce queue variance () by 40 %; lower mean waiting time by 22 %; even utilization (Gini <0.25).

Strategy CPredictive Escalation Suppression & L1 Empowerment  
• Issue addressed: Excessive escalations from L1.  
• Approach: Train a classification model (gradient boosting) using past tickets to predict probability of L1 resolution based on category, keywords, past similar tickets, agent experience. If probability >60 %, dispatcher keeps ticket at L1 and proposes knowledge-base article; else route directly to L2 with correct skill.  
• Data required: Historical resolution outcomes, enriched with agent experience and KB usage logs.  
• Expected benefits: cut ping-pong transfers by half; free 15 % of specialist capacity; projected +8 % FTR and +10 % SLA compliance for P3.

(Additional quick-win: real-time skill update portal + mandatory sub-category in intake form.)

SECTION 5Simulation, Implementation, and Monitoring
-----------------------------------------------------
5.1Business process simulation before go-live  
• Import mined BPMN model with branching probabilities, service-time distributions, and resource calendars into a discrete-event simulator (e.g., BImp, Celonis EMS, or AnyLogic).  
• Implement alternative resource-assignment rules (baseline vs. A/B/C).  
• Use authentic 4-week arrival pattern as input; run 1 000 replications per scenario.  
• KPIs: average resolution time per priority, SLA breach %, agent utilization, specialist dilution, queue length distribution.  
• Select strategy or hybrid that meets SLA with 85 % peak utilization and acceptable variance.

5.2Implementation roadmap  
Phase 1 (Week 0-4): cleanse skill matrix, update intake form, enable 5-minute queue refresh.  
Phase 2 (Week 5-8): deploy Skill-Based Routing (Strategy A) for Software-App and Network categories.  
Phase 3 (Week 9-12): roll out Workload-Aware Balancing (Strategy B) across all tiers.  
Phase 4 (Week 13-16): pilot Predictive Escalation model (Strategy C) with two L1 pods, then expand.

5.3Continuous monitoring with process-mining dashboards  
KPIs (updated hourly):  
• SLA breach % by priority and category.  
• Mean & 95th-percentile queue time per tier.  
• Escalations per 100 tickets and ping-pong ratio.  
• Skill-Match rate and specialist dilution index.  
• Agent utilization heat-map and overtime alerts.  
Dashboards include:  
• Live social network of handovers to detect emergent ping-pong loops.  
• Variant frequency trends to verify reduction of reassign-heavy variants.  
• Control charts for FTR and queue times with alert thresholds.

Governance: bi-weekly process-mining review; quarterly skill matrix audit; continuous improvement backlog fed by conformance deviations flagged by the miner.

=================================================================
By systematically applying process-mining analysis to the event log, TechSolve can expose the real drivers of SLA breaches and inefficiencies, implement targeted, data-driven assignment strategies, and verify their impact through simulation and ongoing monitoring—transforming the service desk into a predictable, high-performance operation.