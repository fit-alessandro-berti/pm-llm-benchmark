<think>
**Constructing DuckDB SQL for event sequences**

I'm putting together a DuckDB SQL query to spot exact sequences of three consecutive events per case—specifically 'Approve Purchase Requisition' followed by 'Create Order' and 'Confirm Order'—and then exclude cases where the time between 'Create Order' and 'Confirm Order' exceeds five days. The query uses window functions like lead() with careful ordering to guarantee direct succession and filters out undesired cases based on those criteria. I'll finalize this with a clean CTE structure while double-checking interval syntax for DuckDB compatibility.
</think>
```sql
WITH ordered_events AS (
    SELECT
        case_id,
        activity,
        timestamp,
        LEAD(activity)  OVER (PARTITION BY case_id ORDER BY timestamp) AS next_activity,
        LEAD(activity, 2) OVER (PARTITION BY case_id ORDER BY timestamp) AS next2_activity,
        LEAD(timestamp) OVER (PARTITION BY case_id ORDER BY timestamp) AS next_timestamp,
        LEAD(timestamp, 2) OVER (PARTITION BY case_id ORDER BY timestamp) AS next2_timestamp
    FROM event_log
),
cases_to_exclude AS (
    SELECT DISTINCT case_id
    FROM ordered_events
    WHERE activity = 'Approve Purchase Requisition'
      AND next_activity = 'Create Order'
      AND next2_activity = 'Confirm Order'
      AND next2_timestamp - next_timestamp > INTERVAL '5' DAY
)
SELECT e.*
FROM event_log e
WHERE e.case_id NOT IN (SELECT case_id FROM cases_to_exclude)
ORDER BY e.case_id, e.timestamp;
```