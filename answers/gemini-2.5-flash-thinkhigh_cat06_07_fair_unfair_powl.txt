```python
import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define all atomic activities
ReceiveApplication = Transition(label="ReceiveApplication")
ResumeParsingAndInitialDataCheck = Transition(label="ResumeParsingAndInitialDataCheck")
RequestMoreInfo = Transition(label="RequestMoreInfo")
PreliminarySkillAssessment = Transition(label="PreliminarySkillAssessment")
CulturalFitCheck = Transition(label="CulturalFitCheck")
CommunityAffiliationCheck = Transition(label="CommunityAffiliationCheck")
ManagerialReview = Transition(label="ManagerialReview")
FinalDecision = Transition(label="FinalDecision")

# --- POWL Model 1: With Potential Unfairness ---
# This model includes the XOR branch where community affiliation can introduce bias.

# 1. Data Completeness Loop
# The loop process is: ResumeParsingAndInitialDataCheck (A), then if missing info, RequestMoreInfo (B) and loop back to A.
data_completeness_loop_unfair = OperatorPOWL(
    operator=Operator.LOOP,
    children=[ResumeParsingAndInitialDataCheck, RequestMoreInfo]
)

# 2. Cultural Fit & Community Affiliation Check (XOR Choice)
# This is the potential bias point, an XOR between standard CulturalFitCheck and CommunityAffiliationCheck.
cultural_fit_or_affiliation_check = OperatorPOWL(
    operator=Operator.XOR,
    children=[CulturalFitCheck, CommunityAffiliationCheck]
)

# 3. Overall Sequential Flow for Model 1
powl_model_unfair = StrictPartialOrder(nodes=[
    ReceiveApplication,
    data_completeness_loop_unfair,
    PreliminarySkillAssessment,
    cultural_fit_or_affiliation_check,
    ManagerialReview,
    FinalDecision
])

# Define the sequential order of activities for Model 1
powl_model_unfair.order.add_edge(ReceiveApplication, data_completeness_loop_unfair)
powl_model_unfair.order.add_edge(data_completeness_loop_unfair, PreliminarySkillAssessment)
powl_model_unfair.order.add_edge(PreliminarySkillAssessment, cultural_fit_or_affiliation_check)
powl_model_unfair.order.add_edge(cultural_fit_or_affiliation_check, ManagerialReview)
powl_model_unfair.order.add_edge(ManagerialReview, FinalDecision)

print("--- POWL Model 1: With Potential Unfairness ---")
print(powl_model_unfair)
print("\nDescription of Model 1:")
print("The process starts with receiving applications, followed by a loop for resume parsing and data completeness (RequestMoreInfo if data is missing). After a skill assessment, there's an XOR choice: either a standard CulturalFitCheck or a CommunityAffiliationCheck (where bias can occur). Finally, it proceeds to ManagerialReview and a FinalDecision.")


# --- POWL Model 2: Without Unfairness ---
# This model removes the biased XOR branch, ensuring all applicants undergo the same cultural fit evaluation.

# 1. Data Completeness Loop
# This loop structure is the same as in the unfair model, as it's a necessary part of ensuring data quality.
data_completeness_loop_fair = OperatorPOWL(
    operator=Operator.LOOP,
    children=[ResumeParsingAndInitialDataCheck, RequestMoreInfo]
)

# 2. Cultural Fit Check (No Bias Branch)
# All applicants go through a single, unbiased cultural fit evaluation.
# We reuse the CulturalFitCheck activity directly.

# 3. Overall Sequential Flow for Model 2
powl_model_fair = StrictPartialOrder(nodes=[
    ReceiveApplication,
    data_completeness_loop_fair,
    PreliminarySkillAssessment,
    CulturalFitCheck, # Direct cultural fit check, no XOR with CommunityAffiliationCheck
    ManagerialReview,
    FinalDecision
])

# Define the sequential order of activities for Model 2
powl_model_fair.order.add_edge(ReceiveApplication, data_completeness_loop_fair)
powl_model_fair.order.add_edge(data_completeness_loop_fair, PreliminarySkillAssessment)
powl_model_fair.order.add_edge(PreliminarySkillAssessment, CulturalFitCheck) # Direct flow
powl_model_fair.order.add_edge(CulturalFitCheck, ManagerialReview)
powl_model_fair.order.add_edge(ManagerialReview, FinalDecision)

print("\n--- POWL Model 2: Without Unfairness ---")
print(powl_model_fair)
print("\nDescription of Model 2:")
print("The process starts with receiving applications, followed by a loop for resume parsing and data completeness (RequestMoreInfo if data is missing). After a skill assessment, all applicants undergo a standard CulturalFitCheck. There is no separate path for community affiliation. Finally, it proceeds to ManagerialReview and a FinalDecision.")
```