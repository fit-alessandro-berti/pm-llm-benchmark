Here’s an example Python dictionary “temporal_profile” covering a representative subset of direct and indirect activitypair delays (times in seconds):  
```python
temporal_profile = {
    # direct successors
    ('SS', 'OP'): (172800,   43200),    # Supplier Selection  Order Placement:  2 d ±12 h
    ('OP', 'RC'): (1209600,  259200),   # Order Placement  Receive Components: 14 d ±3 d
    ('RC', 'QI'): (21600,    3600),     # Receive Components  Quality Inspection: 6 h ±1 h
    ('QI', 'CA'): (28800,    7200),     # Quality Inspection  Component Assembly: 8 h ±2 h
    ('CA', 'PT'): (86400,    14400),    # Component Assembly  Product Testing: 1 d ±4 h
    ('PT', 'PK'): (21600,    3600),     # Product Testing  Packaging: 6 h ±1 h
    ('PK', 'WS'): (7200,     1800),     # Packaging  Warehouse Storage: 2 h ±0.5 h
    ('WS', 'DT'): (259200,   86400),    # Warehouse Storage  Distribution: 3 d ±1 d
    ('DT', 'AS'): (2592000,  604800),   # Distribution  AfterSales Support: 30 d ±7 d

    # onestep skips
    ('SS', 'RC'): (1392000,  288000),   # SS  RC (via OP)
    ('OP', 'CA'): (1267200,  259200),   # OP  CA (via RC, QI)
    ('RC', 'CA'): (50400,    10800),    # RC  CA (via QI)
    ('QI', 'PT'): (115200,   28800),    # QI  PT (via CA)
    ('CA', 'WS'): (115200,   28800),    # CA  WS (via PT, PK)

    # twostep skips
    ('SS', 'PT'): (1519200,  345600),   # SS  PT (via OP, RC, QI, CA)
    ('OP', 'PK'): (1368000,  302400),   # OP  PK (via RC, QI, CA, PT)
    ('RC', 'WS'): (165600,   43200),    # RC  WS (via QI, CA, PT, PK)

    # longerrange pairs
    ('QI', 'DT'): (403200,   100800),   # QI  DT (via CA, PT, PK, WS)
    ('CA', 'DT'): (374400,   105600),   # CA  DT (via PT, PK, WS)
    ('PT', 'DT'): (288000,   72000),    # PT  DT (via PK, WS)
    ('PK', 'AS'): (2858400,  756000),   # PK  AS (via WS, DT)
    ('SS', 'PK'): (1540800,  345600),   # SS  PK
    ('OP', 'AS'): (4226400,  907200),   # OP  AS
}
```  
Each key is a tuple `(activity_i, activity_j)` indicating that `j` eventually follows `i` in the process, and each value is `(average_time_in_seconds, standard_deviation_in_seconds)`.