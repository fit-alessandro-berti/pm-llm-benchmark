```sql
SELECT *
FROM event_log
WHERE case_id NOT IN (
    SELECT DISTINCT c.case_id
    FROM event_log c
    INNER JOIN event_log d ON c.case_id = d.case_id AND d.activity = 'Create Order'
    INNER JOIN event_log e ON c.case_id = e.case_id AND e.activity = 'Confirm Order'
    WHERE c.activity = 'Approve Purchase Requisition'
    AND d.timestamp < e.timestamp
    AND DATE_PART('day', (e.timestamp - d.timestamp)) > 5
);
```

**Explanation:**

1. **Outer Query:** Selects all columns (`*`) from the `event_log` table.
2. **Subquery:**
   - Identifies case IDs (`c.case_id`) where the activity sequence 'Approve Purchase Requisition' - 'Create Order' - 'Confirm Order' exists with a time gap of more than 5 days between 'Create Order' and 'Confirm Order'.
   - Uses `INNER JOIN` to link events within the same case (`c.case_id = d.case_id` and `c.case_id = e.case_id`).
   - Filters for the specific activities in the desired order: c.activity = 'Approve Purchase Requisition', d.activity = 'Create Order', and e.activity = 'Confirm Order'.
   - Ensures `Create Order` (`d.timestamp`) precedes `Confirm Order` (`e.timestamp`).
   - `DATE_PART('day', (e.timestamp - d.timestamp)) > 5` calculates the number of days between the events and checks if it's greater than 5.

3. **NOT IN Clause:** Excludes case IDs (`c.case_id`) returned by the subquery from the outer query's results. This effectively filters out events from cases that meet both the sequence and the time condition.

**Output:**

The final result set will contain all events from `event_log` except for those that belong to cases exhibiting the specified activity sequence ('Approve Purchase Requisition' - 'Create Order' - 'Confirm Order') with a time difference of more than 5 days between the 'Create Order' and 'Confirm Order' events.



