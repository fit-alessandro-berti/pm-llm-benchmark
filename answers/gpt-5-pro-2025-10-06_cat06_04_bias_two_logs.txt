Short answer: The Group B (Unprotected) log reveals the biased rule, and that rule disadvantages Group A (Protected). The bias is a positive “Community Boost” applied only to LocalResident applicants who belong to a specific CommunityGroup, which only appears in Group B. Group A never receives this adjustment.

What the logs show
- LocalResident and CommunityGroup:
  - Group A: LocalResident = FALSE, CommunityGroup = None for all cases.
  - Group B: LocalResident = TRUE; some cases have CommunityGroup = “Highland Civic Darts Club.”
- ScoreAdjustment:
  - Group A: Always 0; no applicant receives any adjustment.
  - Group B: Applicants with the community membership receive +10 (“Community Boost”) at PreliminaryScoring and it carries through ManualReview and to the FinalDecision.

How the bias manifests
- The adjustment is gated by attributes that only Group B has (LocalResident + specific CommunityGroup). This is disparate treatment: a favorable rule is applied to one group and not available to the other.
- Decision impact example:
  - U003: PreliminaryScore 695  +10 = 705 (Adjusted)  Approved.
  - P002: PreliminaryScore 710  +0 = 710  Rejected.
  - A lower-base-score B case is approved while a higher-base-score A case is rejected, solely due to the community-based boost.
- Even though this small sample yields the same approval rate (2/3 vs 2/3), the process advantage for Group B will systematically flip borderline cases in their favor over larger cohorts.

Why this leads to systematic differences
- Causal chain: LocalResident  eligibility for CommunityGroup  +10 ScoreAdjustment  higher adjusted score used by Rules Engine  higher approval odds.
- Because Protected Group A cannot be LocalResident or in the listed CommunityGroup in these logs, they never benefit from the boost, creating a structural disadvantage on near-threshold cases.

What to check or change
- Remove or neutralize the “Community Boost,” or make it available via group-neutral, verifiable criteria accessible to all applicants.
- Validate that any adjustment has real predictive value and apply it symmetrically across groups.
- Re-run decisions with ScoreAdjustment set to 0 for all to quantify disparate impact (e.g., U003 would likely shift from Approved to Rejected).