1. Case durations (from first “Submit Claim” to last “Close Claim”)

| Case ID | Compare_Start_End (`Close Claim`) | Duration |
|---------|-----------------------------------|----------|
| 2001 | 09:00  10:30 on the same day | 1 h 30 min |
| 2002 | 09:05  11:00 the next day | 25 h 55 min |
| 2003 | 09:10  09:30 two days later | 48 h 20 min |
| 2004 | 09:20  10:45 same day | 1 h 25 min |
| 2005 | 09:25  14:30 three days later | 77 h 5 min |

Only cases 2002, 2003 and 2005 noticeably exceed a few hours.  
(2001 and 2004 are clearly within SLA.)

2. Attribute-driven root-cause analysis

Attribute | Fast cases | Slow cases | Observation
---|---|---|---
Complexity | Fast cases are Low | Slow cases are Medium (2002) or High (2003, 2005) | High complexity correlates strongly with long cycles.
Region | No clear pattern: both A and B appear in each speed class. | Region is not an explanatory factor on this data alone.
Resource | Every resource working on fast cases can also be found on slow cases (e.g., Adjuster_Mike on 2001 vs 2003; CSR_Paul 2004 vs 2005). | Resource in isolation does not explain delay—rather the combination with complexity and number of loops does.

Secondary inspection: the **number of “Request Additional Documents” loops**.

| Case | Complexity | # times “Request…Documents” occurs |
|---|---|---|
2001 | Low | 0
2002 | Medium | 1
2003 | High | 2
2004 | Low | 0
2005 | High | 3

The adversarial pattern is:  
Medium/High claims  at least one “Request Additional Documents” loop  longer cycle time.  
Each extra iteration adds roughly one additional business day (e.g., 2003 required at least 48 h; 2005 accumulated 3 rounds across 77 h).

3. Root-cause explanation and mitigation suggestions

Root cause 1 – High complexity breeds repeated documentation loops  
Explanation: Complex claims lack packaged evidence during initial submission, causing assistants/adjusters to issue repeated requests instead of obtaining everything in a single sweep.

Actions  
a. Introduce a pre-submission checklist/portal that dynamically generates a required-document list based on claim type/complexity.  
b. When “Evaluate Claim” runs and detects high complexity, auto-forward to a specialised “Complex Case Desk” trained to request all necessary evidence in **one batch**.  
c. Escalate to a senior adjuster before the first “Request Additional Documents” event to decide whether to waive or expedite documentation.

Root cause 2 – Open-loop communication loop dependency  
Each round trip with the customer waits for their offline reaction and internal re-processing. No automated reminders or parallel tasks accelerate this.

Actions  
a. Set a 24-hour hard response deadline with automatic email / SMS reminders every 8 hours.  
b. Allow upload via a customer self-service portal to eliminate postal delays.  
c. Parallelise document review: administrative staff review new uploads as they arrive instead of re-starting the whole “Evaluate Claim” path.

Root cause 3 – High complexity is not reflected in scheduling or resource allocation  
The same adjuster bandwidth is used for both Low and High cases. High cases therefore queue behind quick ones.

Actions  
a. Use complexity score to predict workload and detach High complexity items into a dedicated, capacity-buffered queue.  
b. Introduce rules: High complexity triggers at least one senior review within 4 hours to cut down iterations.

With these mitigations, the frequency and duration of “Request Additional Documents” loops should drop, reducing excessive case durations for complex claims.