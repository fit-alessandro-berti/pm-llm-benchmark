The figure is composed of three related sub-diagrams that together illustrate how a small part of a hospital laboratory process can be modelled with “proclets” (process fragments that can communicate with one another).

( a ) Two proclet classes that cooperate through two message channels  
• On the left, the Lab visit proclet starts at the black-filled arrow.  
   1. A doctor performs “Order entry”, after which a lab assistant “Takes blood sample”.  
   2. The order is sent through the dashed “Order system” channel (message places 1.*) to the Lab test proclet on the right.  
   3. Later, the Lab visit proclet receives a result through the dashed “HIS” (hospital information system) channel, judges the result and either:  
      – follows the green branch “Everything fine” and eventually “Sends report”, or  
      – follows the red branch, asks to “Do tests again”, waits for an updated result, and only then “Sends report”.  
   4. The black square marks the termination of the Lab visit instance.

• On the right, the Lab test proclet is triggered by the incoming order.  
   1. A chemical analyst “Performs test”, then “Makes report” and ships it back through the HIS channel.  
   2. If the visit proclet requests a re-test, the Lab test proclet “Performs test again”, “Provides updated report” and finally “Finishes lab test”.

• Dashed rounded rectangles represent communication channels.  
  Each oval inside them is a message place; matching numbers (1.1, 1.2, … 1.n) show which send and receive transitions belong together.

( b ) UML-style class diagram  
Lab visit requires at least one Lab test (multiplicity 1..*) and exactly one Lab visit exists for the set of tests (multiplicity 1..1 on the other side).

( c ) Example of a performative (message) that is sent through a channel  
At 11:00 the Lab visit instance for patient John sends, via the Order system channel, the performative “Create” with content “Can you perform an HGB test for John?” to the corresponding Lab test instance.  The message is private and its direction is OUT.

In short, the visualization shows:

• two interacting workflow fragments (proclets)  
• their internal activities, decision points, start/end states and responsible roles  
• the two communication channels and the individual messages flowing through them  
• the structural relation between the proclet classes  
• an example of the concrete message exchanged during execution.