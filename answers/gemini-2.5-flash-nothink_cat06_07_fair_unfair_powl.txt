```python
import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define common activities
ReceiveApplication = Transition(label="ReceiveApplication")
ResumeParsing_InitialDataCheck = Transition(label="ResumeParsing_InitialDataCheck")
RequestMoreInfo = Transition(label="RequestMoreInfo")
PreliminarySkillAssessment = Transition(label="PreliminarySkillAssessment")
ManagerialReview = Transition(label="ManagerialReview")
FinalDecision = Transition(label="FinalDecision")

# --- POWL Model with Potential Unfairness ---

# Loop for data completeness: (ResumeParsing_InitialDataCheck -> RequestMoreInfo) until complete
DataCompletenessCheck_Unfair = OperatorPOWL(
    operator=Operator.LOOP,
    children=[ResumeParsing_InitialDataCheck, RequestMoreInfo]
)

# Cultural Fit & Community Affiliation Check (Potential Bias Point)
CulturalFitCheck_Unfair = Transition(label="CulturalFitCheck")
CommunityAffiliationCheck_Unfair = Transition(label="CommunityAffiliationCheck")

# XOR branch for cultural fit or community affiliation check
# This is the point of potential unfairness
CulturalFit_BiasXOR = OperatorPOWL(
    operator=Operator.XOR,
    children=[CulturalFitCheck_Unfair, CommunityAffiliationCheck_Unfair]
)

# Root POWL model for the unfair process
powl_unfair = StrictPartialOrder(nodes=[
    ReceiveApplication,
    DataCompletenessCheck_Unfair,
    PreliminarySkillAssessment,
    CulturalFit_BiasXOR,
    ManagerialReview,
    FinalDecision
])

# Define the order for the unfair process
powl_unfair.order.add_edge(ReceiveApplication, DataCompletenessCheck_Unfair)
powl_unfair.order.add_edge(DataCompletenessCheck_Unfair, PreliminarySkillAssessment)
powl_unfair.order.add_edge(PreliminarySkillAssessment, CulturalFit_BiasXOR)
powl_unfair.order.add_edge(CulturalFit_BiasXOR, ManagerialReview)
powl_unfair.order.add_edge(ManagerialReview, FinalDecision)

print("POWL Model with Potential Unfairness:")
print(powl_unfair)
print("\n" + "="*50 + "\n")

# --- POWL Model Without Unfairness ---

# Loop for data completeness (same as before)
DataCompletenessCheck_Fair = OperatorPOWL(
    operator=Operator.LOOP,
    children=[ResumeParsing_InitialDataCheck, RequestMoreInfo]
)

# Standard Cultural Fit Evaluation for all applicants
CulturalFitCheck_Fair = Transition(label="CulturalFitCheck")

# Root POWL model for the fair process
powl_fair = StrictPartialOrder(nodes=[
    ReceiveApplication,
    DataCompletenessCheck_Fair,
    PreliminarySkillAssessment,
    CulturalFitCheck_Fair, # No XOR branch here, only one path for cultural fit
    ManagerialReview,
    FinalDecision
])

# Define the order for the fair process
powl_fair.order.add_edge(ReceiveApplication, DataCompletenessCheck_Fair)
powl_fair.order.add_edge(DataCompletenessCheck_Fair, PreliminarySkillAssessment)
powl_fair.order.add_edge(PreliminarySkillAssessment, CulturalFitCheck_Fair)
powl_fair.order.add_edge(CulturalFitCheck_Fair, ManagerialReview)
powl_fair.order.add_edge(ManagerialReview, FinalDecision)

print("POWL Model Without Unfairness:")
print(powl_fair)

```