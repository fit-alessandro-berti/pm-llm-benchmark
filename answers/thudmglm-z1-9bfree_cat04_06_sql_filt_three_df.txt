To achieve the specified requirements, we can utilize the following SQL query in DuckDB. This query first identifies cases meeting the specified sequence and timing criteria, then excludes these cases from the final result:

```sql
WITH 
sequence undercover as (
    SELECT
        e1.case_id,
        e1.activity AS 'Approve Purchase Requisition',
        e2.activity AS 'Create Order',
        e3.activity AS 'Confirm Order',
        e1.timestamp AS 'Approve timestamp',
        e2.timestamp AS 'Create timestamp',
        e3.timestamp AS 'Confirm timestamp'
    FROM 
        event_log AS e1
    CROSS JOIN LATERAL (
        SELECT 
            * 
        FROM 
            event_log 
        WHERE 
            activity = 'Create Order' AND 
            case_id = e1.case_id AND
            timestamp > e1.timestamp
    ) AS e2
    CROSS JOIN LATERAL (
        SELECT 
            * 
        FROM 
            event_log 
        WHERE 
            activity = 'Confirm Order' AND 
            case_id = e1.case_id AND
            timestamp > e2.timestamp
    ) AS e3
    WHERE 
        e1.activity = 'Approve Purchase Requisition' AND 
        e2.activity = 'Create Order' AND 
        e3.activity = 'Confirm Order'
),
qualify_time AS (
    SELECT 
        case_id
    FROM 
        sequence undercover
    WHERE 
        'Confirm timestamp' - 'Create timestamp' > '5 day'
)
SELECT
    * 
FROM 
    event_log 
WHERE 
    case_id NOT IN (
        SELECT 
            case_id 
        FROM 
            qualify_time
    );
```

**Step-by-Step Explanation:**

1. **Identify Candidate Sequences:**
   - The `sequence undercover` CTE uses lateral joins to find cases where:
     - An `Approve Purchase Requisition` event is followed by a `Create Order` event (in chronological order).
     - The `Create Order` event is further followed by a `Confirm Order` event (immediately after `Create Order`).
     - Each event must belong to the same `case_id`.

2. **Filter by Time Elapsed:**
   - The `qualify_time` CTE filters the candidate cases to exclude those where:
     - The time between the `Create Order` and `Confirm Order` events exceeds 5 days.
     - This is calculated using the difference in timestamps converted to days.

3. **Exclude qualifying Cases:**
   - The final `SELECT` statement returns all events from the original table (`event_log`), but filters out any event whose `case_id` appears in the excluded cases list derived from `qualify_time`.

This approach ensures that only events from cases not meeting the sequence and timing criteria are included in the result. The use of lateral joins and explicit time comparison guarantees correctness in both activity order and temporal constraints.