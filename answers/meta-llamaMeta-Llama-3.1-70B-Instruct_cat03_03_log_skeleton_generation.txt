Here is an example of a Log Skeleton model for an hypothetic Purchase-to-Pay process:

```python
log_skeleton = {
    'equivalence': {('Create Purchase Order', 'Send Purchase Order')},  # Create and send PO are equivalent
    'always_before': {('Create Purchase Order', 'Receive Goods'), ('Send Purchase Order', 'Receive Goods')},  # PO must be created and sent before goods are received
    'always_after': {('Receive Goods', 'Create Invoice'), ('Receive Goods', 'Send Invoice')},  # After receiving goods, an invoice must be created and sent
    'never_together': {('Create Invoice', 'Send Payment')},  # An invoice cannot be created and payment sent at the same time
    'activ_freq': {
        'Create Purchase Order': {1},  # PO is created once
        'Send Purchase Order': {1},  # PO is sent once
        'Receive Goods': {1},  # Goods are received once
        'Create Invoice': {1},  # Invoice is created once
        'Send Invoice': {1},  # Invoice is sent once
        'Create Payment': {1},  # Payment is created once
        'Send Payment': {1}  # Payment is sent once
    },
    'directly_follows': {('Send Purchase Order', 'Receive Goods'), ('Create Invoice', 'Send Invoice')},  # Send PO is directly followed by Receive Goods, and Create Invoice is directly followed by Send Invoice
}
```

This Log Skeleton model captures the following process:

1. A Purchase Order (PO) is created and sent to the supplier.
2. The goods are received from the supplier.
3. An invoice is created and sent to the customer.
4. A payment is created and sent to the supplier.

The constraints in the Log Skeleton model ensure that:

* The PO is created and sent before the goods are received.
* The invoice is created and sent after the goods are received.
* The payment is created and sent after the invoice is sent.
* The PO is sent directly before the goods are received.
* The invoice is created directly before it is sent.

Note that this is a simplified example and a real-world Purchase-to-Pay process may have additional activities and constraints.