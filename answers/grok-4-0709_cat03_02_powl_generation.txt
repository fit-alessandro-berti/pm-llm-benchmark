```python
import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Create transitions for individual activities
SR = Transition(label="SR")
CS = Transition(label="CS")
DA = Transition(label="DA")
ACI = Transition(label="ACI")
BNC = Transition(label="BNC")
D_R = Transition(label="D&R")
CD = Transition(label="CD")
MD = Transition(label="MD")
QA = Transition(label="QA")
SA = Transition(label="SA")
GLA = Transition(label="GLA")

# Create the loop for the configuration phase: * (BNC, D&R)
loop = OperatorPOWL(operator=Operator.LOOP, children=[BNC, D_R])

# Create the exclusive choice for deployment: X (CD, MD)
deployment_xor = OperatorPOWL(operator=Operator.XOR, children=[CD, MD])

# Create the root StrictPartialOrder encompassing all top-level nodes
root = StrictPartialOrder(nodes=[SR, CS, DA, ACI, loop, deployment_xor, QA, SA, GLA])

# Add edges to define the partial order
root.order.add_edge(SR, CS)  # SR before CS
root.order.add_edge(CS, DA)  # CS before DA
root.order.add_edge(CS, ACI)  # CS before ACI
root.order.add_edge(DA, loop)  # DA before loop
root.order.add_edge(ACI, loop)  # ACI before loop
root.order.add_edge(loop, deployment_xor)  # loop before deployment choice
root.order.add_edge(deployment_xor, QA)  # deployment before QA
root.order.add_edge(deployment_xor, SA)  # deployment before SA
root.order.add_edge(QA, GLA)  # QA before GLA
root.order.add_edge(SA, GLA)  # SA before GLA
```