Below is one correct solution. In this query we first use a CTE to identify the cases where, within the ordered event sequence of a case, we see an event with activity 'Approve Purchase Requisition' that is immediately followed by 'Create Order' and then by 'Confirm Order' (using the LEAD window function to “look ahead”) and where the time difference between the 'Create Order' event (the first LEAD) and the 'Confirm Order' event (the second LEAD) is more than 5 days. Finally, we return all events from cases that do not appear in that list.

----------------------------------------------------------------
WITH sequence_matches AS (
  SELECT DISTINCT case_id
  FROM (
    SELECT 
      case_id,
      activity,
      timestamp,
      LEAD(activity, 1) OVER (PARTITION BY case_id ORDER BY timestamp) AS next_activity,
      LEAD(timestamp, 1) OVER (PARTITION BY case_id ORDER BY timestamp) AS next_timestamp,
      LEAD(activity, 2) OVER (PARTITION BY case_id ORDER BY timestamp) AS next2_activity,
      LEAD(timestamp, 2) OVER (PARTITION BY case_id ORDER BY timestamp) AS next2_timestamp
    FROM event_log
  ) sub
  WHERE activity = 'Approve Purchase Requisition'
    AND next_activity = 'Create Order'
    AND next2_activity = 'Confirm Order'
    -- Check if the elapsed time between 'Create Order' and 'Confirm Order' is more than 5 days.
    AND (next2_timestamp - next_timestamp) > interval '5' day
)
SELECT *
FROM event_log
WHERE case_id NOT IN (SELECT case_id FROM sequence_matches)
ORDER BY case_id, timestamp;
----------------------------------------------------------------

Explanation:

1. The inner query uses LEAD() to obtain, for every event within a case (ordered by timestamp), the next two events’ activities and timestamps.
2. We then filter for rows where the current event is 'Approve Purchase Requisition', the following event is 'Create Order', and the one after that is 'Confirm Order'. Additionally, we ensure that the duration between the 'Create Order' (next_timestamp) and 'Confirm Order' (next2_timestamp) is more than 5 days.
3. The outer query then selects all events from event_log whose case_id does not belong to the set of excluded cases that satisfy the conditions.

This query meets the requirements by excluding cases where the undesired sequence with the time gap is found, and returning all events only from the remaining cases.