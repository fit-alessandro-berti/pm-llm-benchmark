This query uses Common Table Expressions (CTEs) to first identify the sequences and apply the time condition, and then uses a final filtering step to exclude all events belonging to the problematic cases.

```sql
-- CTE 1: Rank events within each case to determine sequential order.
WITH RankedEvents AS (
    SELECT
        case_id,
        activity,
        timestamp,
        -- Assign a unique, sequential rank based on timestamp within each case.
        ROW_NUMBER() OVER (PARTITION BY case_id ORDER BY timestamp) AS rn
    FROM
        event_log
),

-- CTE 2: Identify all instances of the required three-activity sequence in direct succession.
IdentifiedSequences AS (
    SELECT
        T1.case_id,
        T2.timestamp AS ts_create_order,
        T3.timestamp AS ts_confirm_order
    FROM
        RankedEvents AS T1
    
    -- Join to T2: Must be 'Create Order' and immediately follow T1 (rn + 1)
    INNER JOIN RankedEvents AS T2 
        ON T1.case_id = T2.case_id 
        AND T2.rn = T1.rn + 1
    
    -- Join to T3: Must be 'Confirm Order' and immediately follow T2 (rn + 2 relative to T1)
    INNER JOIN RankedEvents AS T3 
        ON T1.case_id = T3.case_id 
        AND T3.rn = T1.rn + 2
    
    WHERE
        T1.activity = 'Approve Purchase Requisition'
        AND T2.activity = 'Create Order'
        AND T3.activity = 'Confirm Order'
),

-- CTE 3: Filter down to the specific cases that match BOTH criteria: sequence found AND timing violation.
CasesToExclude AS (
    SELECT
        case_id
    FROM IdentifiedSequences
    WHERE
        -- Calculate the difference between the two timestamps and check if it exceeds 5 days.
        (ts_confirm_order - ts_create_order) > INTERVAL '5 days'
    
    -- We only need a distinct list of case IDs that violated the rule
    GROUP BY 
        case_id
)

-- Final Query: Select all events EXCEPT those belonging to the identified cases.
SELECT
    e.*
FROM
    event_log AS e
WHERE
    e.case_id NOT IN (
        SELECT case_id FROM CasesToExclude
    )
ORDER BY
    e.case_id, e.timestamp;
```