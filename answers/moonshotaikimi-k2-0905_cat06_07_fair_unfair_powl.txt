Below are the two requested POWL models.  
The first keeps the “CommunityAffiliationCheck” branch that can give a hidden advantage, while the second removes that branch so that every applicant follows the same cultural-fit path.

--------------------------------------------------
1.  POWL model WITH the potential unfairness
--------------------------------------------------
```python
import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# --- activities --------------------------------------------------------------
ReceiveApplication   = Transition(label="ReceiveApplication")
DataCompletenessCheck = Transition(label="DataCompletenessCheck")
RequestMoreInfo    = Transition(label="RequestMoreInfo")
SkillAssessment    = Transition(label="SkillAssessment")
CulturalFitCheck   = Transition(label="CulturalFitCheck")
CommunityAffiliationCheck = Transition(label="CommunityAffiliationCheck")
ManagerialReview   = Transition(label="ManagerialReview")
FinalDecision      = Transition(label="FinalDecision")

# ---------------------------------------------------------------------------
# 1. loop (completeness check – may request more info)
loop = OperatorPOWL(operator=Operator.LOOP,
                    children=[DataCompletenessCheck, RequestMoreInfo])

# 2. after the loop we must do the skill assessment
root = StrictPartialOrder(nodes=[loop, SkillAssessment])
root.order.add_edge(loop, SkillAssessment)

# 3. XOR split: either standard cultural fit OR the biased affiliation check
xor_cultural = OperatorPOWL(operator=Operator.XOR,
                            children=[CulturalFitCheck, CommunityAffiliationCheck])
root.nodes.append(xor_cultural)
root.order.add_edge(SkillAssessment, xor_cultural)

# 4. managerial review & final decision (sequential)
root.nodes.extend([ManagerialReview, FinalDecision])
root.order.add_edge(xor_cultural, ManagerialReview)
root.order.add_edge(ManagerialReview, FinalDecision)
```

--------------------------------------------------
2.  POWL model WITHOUT the potential unfairness
--------------------------------------------------
```python
# reuse the same activity objects
root_fair = StrictPartialOrder(nodes=[loop, SkillAssessment, CulturalFitCheck,
                                      ManagerialReview, FinalDecision])

# 1. data-completeness loop
root_fair.order.add_edge(loop, SkillAssessment)

# 2. only one cultural-fit step for everyone
root_fair.order.add_edge(SkillAssessment, CulturalFitCheck)
root_fair.order.add_edge(CulturalFitCheck, ManagerialReview)
root_fair.order.add_edge(ManagerialReview, FinalDecision)
```

Both models can be visualised with pm4py’s `pmn_vis_factory` or exported as Petri nets for further analysis.