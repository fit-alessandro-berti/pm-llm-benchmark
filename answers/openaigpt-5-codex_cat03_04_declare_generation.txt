<think>
**Building comprehensive declarative constraints dictionary**
</think>
```python
declare_model = {
    "existence": {
        "IG": (1.0, 1.0),
        "FL": (1.0, 0.97)
    },
    "absence": {},
    "exactly_one": {},
    "init": {
        "IG": (1.0, 1.0)
    },
    "responded_existence": {
        ("UT", "LT"): (1.0, 0.94),
        ("MP", "AG"): (1.0, 0.91)
    },
    "coexistence": {
        ("PC", "LT"): (1.0, 0.92),
        ("LT", "UT"): (1.0, 0.90)
    },
    "response": {
        ("IG", "DD"): (1.0, 0.96),
        ("DD", "TFC"): (1.0, 0.95),
        ("TFC", "CE"): (1.0, 0.94),
        ("CE", "PC"): (1.0, 0.93),
        ("PC", "LT"): (1.0, 0.92),
        ("LT", "UT"): (1.0, 0.91),
        ("UT", "AG"): (1.0, 0.97),
        ("AG", "MP"): (1.0, 0.90),
        ("MP", "FL"): (1.0, 0.98)
    },
    "precedence": {
        ("DD", "IG"): (1.0, 0.96),
        ("TFC", "DD"): (1.0, 0.95),
        ("CE", "TFC"): (1.0, 0.94),
        ("PC", "CE"): (1.0, 0.93),
        ("LT", "PC"): (1.0, 0.92),
        ("UT", "LT"): (1.0, 0.91),
        ("AG", "UT"): (1.0, 0.97),
        ("MP", "AG"): (1.0, 0.90),
        ("FL", "MP"): (1.0, 0.98)
    },
    "succession": {
        ("IG", "DD"): (1.0, 0.94),
        ("LT", "UT"): (1.0, 0.90),
        ("AG", "MP"): (1.0, 0.89)
    },
    "altresponse": {},
    "altprecedence": {},
    "altsuccession": {},
    "chainresponse": {
        ("DD", "TFC"): (1.0, 0.88),
        ("TFC", "CE"): (1.0, 0.85),
        ("LT", "UT"): (1.0, 0.87)
    },
    "chainprecedence": {
        ("CE", "TFC"): (1.0, 0.85),
        ("UT", "LT"): (1.0, 0.87)
    },
    "chainsuccession": {
        ("LT", "UT"): (1.0, 0.83)
    },
    "noncoexistence": {},
    "nonsuccession": {
        ("FL", "IG"): (1.0, 0.99)
    },
    "nonchainsuccession": {}
}
```