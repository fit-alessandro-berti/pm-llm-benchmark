Certainly! Below are the two POWL models for the hiring process at GlobalTeq Solutions, one with potential unfairness and one without.

POWL Model with Potential Unfairness
In this model, after the skill assessment, there is an XOR branching. One branch leads to a standard cultural fit evaluation, and the other to a “CommunityAffiliationCheck” activity that gives a subtle advantage if the applicant is affiliated with a known local group.

python
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define activities
receive_app = Transition(label="ReceiveApplication")
data_check = Transition(label="DataCompletenessCheck")
request_info = Transition(label="RequestMoreInfo")
skill_assess = Transition(label="SkillAssessment")
cultural_fit = Transition(label="CulturalFitCheck")
community_check = Transition(label="CommunityAffiliationCheck")
manager_review = Transition(label="ManagerialReview")
final_decision = Transition(label="FinalDecision")

# Define loop for data completeness
data_loop = OperatorPOWL(operator=Operator.LOOP, children=[data_check, request_info])

# Define XOR choice for cultural fit evaluation
cultural_xor = OperatorPOWL(operator=Operator.XOR, children=[cultural_fit, community_check])

# Define partial order
nodes = [receive_app, data_loop, skill_assess, cultural_xor, manager_review, final_decision]
powl_order = StrictPartialOrder(nodes=nodes)

# Define order relationships
powl_order.order.add_edge(receive_app, data_loop)
powl_order.order.add_edge(data_loop, skill_assess)
powl_order.order.add_edge(skill_assess, cultural_xor)
powl_order.order.add_edge(cultural_xor, manager_review)
powl_order.order.add_edge(manager_review, final_decision)

# Print the model (for debugging purposes)
print(powl_order)
POWL Model Without Unfairness
In this model, all applicants undergo the same cultural fit evaluation process without any special branches for community affiliations.

python
# Define activities (same as above, excluding community_check)
receive_app = Transition(label="ReceiveApplication")
data_check = Transition(label="DataCompletenessCheck")
request_info = Transition(label="RequestMoreInfo")
skill_assess = Transition(label="SkillAssessment")
cultural_fit = Transition(label="CulturalFitCheck")
manager_review = Transition(label="ManagerialReview")
final_decision = Transition(label="FinalDecision")

# Define loop for data completeness
data_loop = OperatorPOWL(operator=Operator.LOOP, children=[data_check, request_info])

# Define partial order
nodes = [receive_app, data_loop, skill_assess, cultural_fit, manager_review, final_decision]
powl_order = StrictPartialOrder(nodes=nodes)

# Define order relationships
powl_order.order.add_edge(receive_app, data_loop)
powl_order.order.add_edge(data_loop, skill_assess)
powl_order.order.add_edge(skill_assess, cultural_fit)
powl_order.order.add_edge(cultural_fit, manager_review)
powl_order.order.add_edge(manager_review, final_decision)

# Print the model (for debugging purposes)
print(powl_order)
Summary
POWL Model with Potential Unfairness:

Activities: ReceiveApplication, DataCompletenessCheck, RequestMoreInfo, SkillAssessment, CulturalFitCheck, CommunityAffiliationCheck, ManagerialReview, FinalDecision
Loop: DataCompletenessCheck loops back to RequestMoreInfo if data is incomplete.
XOR Choice: After SkillAssessment, choose between CulturalFitCheck and CommunityAffiliationCheck.
Partial Order: Activities follow a specific sequence with the XOR choice introducing potential bias.
POWL Model Without Unfairness:

Activities: ReceiveApplication, DataCompletenessCheck, RequestMoreInfo, SkillAssessment, CulturalFitCheck, ManagerialReview, FinalDecision
Loop: DataCompletenessCheck loops back to RequestMoreInfo if data is incomplete.
Sequence: After SkillAssessment, all applicants go through CulturalFitCheck.
Partial Order: Activities follow a linear sequence without any XOR choice for cultural fit evaluation.
By comparing these two models, one can see how the introduction of an XOR branch for community affiliations can lead to subtle biases in the hiring process. The second model ensures a fair and consistent evaluation for all applicants.