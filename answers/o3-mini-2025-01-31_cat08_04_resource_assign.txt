Below is a structured, detailed approach that applies process mining fundamentals to diagnose and resolve the resource assignment issues at TechSolve Solutions.


1. Analyzing Resource Behavior and Assignment Patterns

a. Agent and Tier Performance Metrics  
• First, extract metrics from the event log to assess individual and group performance. Metrics might include:  
– Workload distribution per agent/tier (e.g., number of tickets handled, cumulative handling time)  
– Activity processing times for key steps (ticket open-to-close time, escalation delays)  
– First-call resolution rates for L1 agents as an indicator of their effectiveness  
– Frequency and duration of escalations per ticket type  
– Ticket closure rates and the number of reassignments per incident  

b. Applying Process Mining Techniques  
• Use process mining algorithms (e.g., the fuzzy miner) to reconstruct the actual process flows. This reveals:  
– The sequence of activities including routing, escalations, and reassignments  
– Bottlenecks and variations between the intended round-robin/dispatcher assignments and the observed flows  
– Social network analysis (SNA) to visualize handovers among agents, highlighting the frequency and nature of cross-tier interactions  
– Role discovery methods to identify if certain agents, despite being in a designated tier, are consistently handling tasks outside their expected domain  

c. Skill Utilization Analysis  
• By correlating the “Required Skill” attribute on tickets with the “Agent Skills” field, determine:  
– The workload for specialized skills (e.g., ‘Networking-Firewall’, ‘DB-SQL’) and assess whether specialists are consistently engaged on matching tickets  
– If specialists (L2/L3) appear frequently on lower complexity issues, which would indicate potential overuse  
– The overall skill match percentage, thus identifying any deviations between the required and actual skills used during ticket handling


2. Identifying Resource-Related Bottlenecks and Issues

a. Pinpointing Specific Issues  
• Bottlenecks in specialized areas can be flagged by the analysis if:  
– Tickets requiring niche skills have longer waiting times due to a limited pool of available experts  
– Frequent handovers or reassignments are seen for specific categories (e.g., Software-App vs. Network)  
• Evaluate delays by:  
– Measuring the average time lapse on each reassignment or escalation step. For example, if each unnecessary escalation adds a delay of 5–10 minutes, these linearly add to SLA breach risks  
– Comparing the SLA breaches against cases with multi-tier routing vs. those with resolved first-call  
• Evaluate mismatches by:  
– Identifying a high frequency of cases where L1 agents escalate tickets that potentially could be resolved at the initial level, pointing to inadequate initial classification or training  
– Determining if the agent’s skill profile is misaligned with the ticket’s required skill  
• Identify workload imbalance by:  
– Comparing the ticket volumes and handling durations among agents. Some agents might be overloaded while others remain idle  
– Using resource utilization graphs from process mining dashboards to visually confirm disparities

b. Quantification of Impact  
• Quantify average delays per reassignment and track correlations with SLA breaches (e.g., “25% of SLA breaches are linked to tickets that underwent more than two reassignments”)  
• Measure the percentage of tickets where the required skill did not match the assigned agent’s primary skill, highlighting efficiency losses due to underutilization of L1 capabilities or over-reliance on L2/L3 agents


3. Root Cause Analysis for Assignment Inefficiencies

a. Potential Root Causes  
• Inadequate Assignment Rules  
– The current manual and round-robin approach may ignore real-time workload data and the specific technical skills required per ticket  
• Inaccurate Agent Skill Profiles  
– If agent skills are either outdated or not granularly documented, the assignment algorithm may not match tickets appropriately  
• Poor Initial Categorization  
– Errors in categorizing tickets (e.g., mislabeling a “Software-App” issue that requires database knowledge) can lead to improper routing  
• Lack of Real-Time Data on Availability  
– Without live feed of agent status or queue lengths, the dispatcher may inadvertently assign tasks to already overloaded agents  
• Limited Empowerment and Training  
– An excessive rate of escalations may be linked to L1 agents not being empowered or sufficiently trained to reduce the need for reassignments

b. Use of Variant Analysis and Decision Mining  
• Compare variant cases where tickets were resolved without any reassignment against those with multiple escalations. Look for patterns:  
– Is there a common ticket type that frequently escalates, suggesting an inherent misclassification?  
– Do reassignments often occur after the L1 agent’s initial handling, hinting that initial decisions are flawed?  
• Apply decision mining to extract the decision points and rules used by dispatchers. Validate these against the ticket attributes to see if deviations explain poor outcomes


4. Developing Data-Driven Resource Assignment Strategies

Below are three concrete strategies based on insights from the process mining analysis:

Strategy 1: Skill-Based Routing with Proficiency Weighting  
• Issue Addressed: Mismatches between ticket requirements and agent skills; overuse of L2/L3 for basic tasks  
• Approach: Implement an automated routing system that compares the ticket’s skill requirement with a proficiency-weighted profile of each agent.  
– Data Required: Updated agent skill profiles, historical resolution times by skill, and real-time queue data  
– Expected Benefits:  
 Reduced escalations by directing tickets to the most appropriate agent from the start  
 Improved resolution times and enhanced SLA compliance

Strategy 2: Workload-Aware Assignment Algorithm  
• Issue Addressed: Uneven workload distribution and resultant delays  
• Approach: Develop an algorithm that factors in each agent’s current load, historical performance metrics (handling time, reassignments), and real-time availability.  
– Data Required: Continuous data feed on active ticket count per agent, average handling time, and agent status (busy/idle)  
– Expected Benefits:  
 Balanced work distribution, potentially reducing average resolution times  
 Fewer SLA breaches due to faster response times across the board

Strategy 3: Predictive Ticket Categorization and Dynamic Escalation Thresholds  
• Issue Addressed: Initial misclassification of tickets resulting in unnecessary escalations  
• Approach: Use historical ticket data to build predictive models (e.g., via machine learning) that classify tickets accurately upon creation, suggesting whether a case should be handled at L1 or directly routed to a specialist.  
– Data Required: Historical ticket features (description keywords, initial categorization, resolution path) and corresponding outcomes  
– Expected Benefits:  
 Improved initial ticket assignments, leading to fewer reassignments  
 Empowerment of L1 agents with clear escalation criteria, reducing delays


5. Simulation, Implementation, and Monitoring

a. Simulation Before Implementation  
• Employ business process simulation tools that ingest the derived process models and resource utilization data.  
– Simulate the impact of each proposed strategy (e.g., how skill-based routing reduces escalations or how workload-aware assignment shortens delays)  
– Perform “what-if” analyses by adjusting parameters such as agent availability or escalation thresholds to predict potential improvements  
• Use simulation results to refine algorithms and to forecast the benefits (time savings, reduction in SLA breaches) before rolling them out live

b. Implementation and Monitoring Plan  
• Develop process mining dashboards that continuously track key KPIs, including:  
– SLA compliance rate by priority and category  
– Average number of ticket reassignments and escalations per ticket  
– Workload distribution across agents and tiers  
– Agent utilization rates and case resolution times by skill requirement  
– Real-time maps of handovers between agents using social network visualizations  
• Set up alert thresholds for deviations (e.g., a sudden increase in reassignments or an imbalance in workload)  
• Conduct regular review meetings using dashboard insights to further fine-tune the algorithms and assignment rules


Summary

By closely analyzing the event log with process mining techniques, TechSolve Solutions can uncover deviations between intended and actual resource assignments, identify bottlenecks, and quantify inefficiencies. Addressing these through tailored strategies—skill-based routing, workload-aware assignment, and predictive ticket categorization—will enhance operational efficiency and reduce SLA breaches. Moreover, simulation and continuous monitoring ensure that these interventions are both effective and adaptable to changes in demand.