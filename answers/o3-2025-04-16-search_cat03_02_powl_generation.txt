```python
# POWL model of the “Corporate Network Provisioning” process
# ----------------------------------------------------------
# Steps represented:
# 1. Service-Request verification    2. Contract setup
# 3. Datacenter allocation    Access-control initialization   (concurrent)
# 4. Loop:   Base-network-configuration  { Debug-and-reconfigure  Base-network-configuration …}
# 5. XOR-choice:  Containerized-deployment    Monolithic-deployment
# 6. Quality-assurance    Security-audit   (concurrent)
# 7. Go-Live-approval

from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# ------------- atomic activities (POWL transitions) -------------
SRV = Transition(label="Service Request Verification")
CS  = Transition(label="Contract Setup")

DA  = Transition(label="Datacenter Allocation")
ACI = Transition(label="Access Control Initialization")

BNC = Transition(label="Base Network Configuration")
DR  = Transition(label="Debug & Reconfigure")

CD  = Transition(label="Containerized Deployment")
MD  = Transition(label="Monolithic Deployment")

QA  = Transition(label="Quality Assurance")
SA  = Transition(label="Security Audit")

GLA = Transition(label="Go-Live Approval")

# ------------- operator nodes (loop and exclusive-choice) --------
loop_conf      = OperatorPOWL(operator=Operator.LOOP, children=[BNC, DR])
deploy_choice  = OperatorPOWL(operator=Operator.XOR,  children=[CD,  MD])

# ------------- build the global partial-order workflow -----------
root_nodes = [
    SRV, CS,           # initial verification & contract
    DA, ACI,           # concurrent environment prep
    loop_conf,         # looped configuration phase
    deploy_choice,     # XOR deployment
    QA, SA, GLA        # final tests and approval
]

root = StrictPartialOrder(nodes=root_nodes)

# ------------- add precedence (order) relations ------------------
root.order.add_edge(SRV, CS)               # verify SR  contract setup

root.order.add_edge(CS, DA)                # contract done  datacenter alloc.
root.order.add_edge(CS, ACI)               # contract done  access-control init.

root.order.add_edge(DA,  loop_conf)        # environment ready  configuration loop
root.order.add_edge(ACI, loop_conf)

root.order.add_edge(loop_conf, deploy_choice)  # stable network  choose deployment

root.order.add_edge(deploy_choice, QA)     # deploy finished  QA
root.order.add_edge(deploy_choice, SA)     # deploy finished  security audit

root.order.add_edge(QA,  GLA)              # both audits must precede Go-Live
root.order.add_edge(SA,  GLA)

# ------------------- (root is the complete POWL model) -----------
# The variable `root` now contains the fully-specified POWL model
# that exactly mirrors the described telecom provisioning process.
```
