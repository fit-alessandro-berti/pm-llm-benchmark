The picture shows a process model drawn as a (workflow-) Petri net.

Main process (upper left):
• Rounded rectangles are transitions (activities).  
  a Register request  
  b Examine thoroughly  
  c Examine casually  
  d Check ticket  
  e Decide  
  f Re-initiate request  
  g Pay compensation  
  h Reject request  
  z End

• Small black circles are places (pre-/post-conditions).  
• Arrows are arcs that indicate the flow of tokens (control-flow).

Execution logic that can be read from the arcs:
1. The process starts with a token in the source place of activity a (“register request”).  
2. After a, the token can move to several alternative or parallel branches that lead to  
   – b “examine thoroughly”,  
   – c “examine casually”, or  
   – d “check ticket”.  
   These branches can be taken separately or together, depending on how the places are marked.
3. All open branches must eventually converge in transition e “decide”.  
4. From e there is a loop back to f “re-initiate request”, which in turn returns the flow to the examination activities, modelling a possible rework cycle.  
5. If the request is accepted, the flow continues from e to g “pay compensation” and finally to z “end”.  
6. If it is rejected, the flow goes from e to h “reject request” and then to z.

Legend (lower right):
A shaded box explains the routing patterns used:
• XOR-split / XOR-join – only one branch is chosen / one of several branches is accepted.  
• AND-split / AND-join – all outgoing branches fire in parallel / all incoming branches must complete.  
• OR-split / OR-join – any non-empty combination of branches may be chosen / the corresponding combination must converge.  
The little black circles show how these patterns are realized with places and arcs.

Overall, the visualization illustrates how different examination steps can be performed (possibly in parallel), how rework can occur, and how the process eventually ends with either compensation or rejection.