====================================================
1. Process Discovery and Conformance Checking
====================================================

1.1 Data preparation & integration  
a. Case notion  
   • VehicleDay (e.g., “V1220241205”) – to analyse the tour as one process instance.  
   • Package ID – for a finegrained view on every parcel.  
   • Linking key: each scanner event contains both Vehicle ID and Package ID, therefore the logs can be turned into a classic “multicase / objectcentric” log:  
      – Vehicle object  activities: Start Shift, Depart Depot, Driving, Unscheduled Stop, Return Depot, …  
      – Package object  Scan at Depot, Arrive Customer, Delivery Success/Fail, …  

b. Mandatory harmonisation steps  
   • Time stamps: convert to one timezone, millisecond precision, resolve clock drift between GPS units and scanners.  
   • Event classification: map raw GPS points to meaningful states (“Driving”, “IdleTraffic”, “IdleParking”, “MaintenanceStop”) by speed thresholds and geofences (depot polygons, workshop, customer coordinates).  
   • Attribute unification: add distance travelled since last GPS ping, fuel used (from CANbus / OBD if available), traffic level (enrich with TomTom/OpenTraffic API).  
   • Noise removal: drop duplicate pings, merge consecutive GPS points with the same state (event abstraction) to keep the log humanreadable.  
   • Correlation challenges  
       – Missing IDs (e.g. maintenance record may only have Vehicle ID).  use time overlap heuristics.  
       – Different granularity (GPS every 5 s vs. scanner events per stop).  keep both and later apply abstraction for discovery.  
       – Objectcentric nature  use OCPN or split into two conventional logs (VehicleDay & Package) and analyse jointly.

1.2 Process discovery  
   • VehicleDay log  Inductive Miner or Split Miner to obtain a sound Petri net / BPMN showing: Start Shift  (parallel loops of Driving + Delivery cycles)  Return Depot  End Shift.  
   • Overlay performance: colour arcs by median travel time, service time, idle time. Unscheduled/maintenance branches will appear as infrequent but visible sidepaths.  
   • Package log  discover the “parcel lifecycle” and relate durations to customer time windows.

1.3 Conformance with planned route  
   • Create a reference model automatically from the dispatch file (ordered list of planned stops incl. ETAs).  
   • Tokenbased replay / alignment analysis per VehicleDay:  
       – Sequence deviations: stop visited in a different order, skipped, extra stop.  
       – Timing deviations: early/late vs. ETA, compliance with promised time window.  
       – Resource deviations: different driver/vehicle than assigned.  
       – Performance deviations: longer dwell, longer driving between two geofences than routing engine predicted.  
   • KPIs from conformance: %cases fully conformant, average negative/positive lateness, average extradistance vs. plan.

====================================================
2. Performance Analysis & Bottleneck Identification
====================================================

Key KPIs (can be derived directly from the timestamped, enriched log):

1. OnTime Delivery Rate = (# parcels delivered within customer window) / (total delivered).  
2. Average Stop Service Time = mean(DepartCustomer – ArriveCustomer).  
3. Travel vs. Service Time Ratio = DrivingTime / ServiceTime per tour.  
4. Idle / Traffic Delay Time = LowSpeed(<8 km/h & ignition on).  
5. Fuel per km / per package = FuelDrawn / distance , FuelDrawn / #parcels.  
6. Vehicle Utilisation = (ShiftDuration – idleEngineOff) / total availability.  
7. Failed Delivery Rate = (# DeliveryFailed) / (# delivery attempts).  
8. Maintenance Downtime = workshop hours per vehicle per month.

Techniques to detect bottlenecks  

a. Performanceannotated process maps: highlight the slowest transitions (red arcs).  
b. Process variants cube: slice by weekday, driver, region, vehicle type; compare median case duration.  
c. Auto bottleneck detection plugin (e.g. ProM’s Bottleneck Analyzer) – lists activities with waiting time > threshold.  
d. Geoheatmaps: overlay “IdleTraffic” and “ParkingSearch” events on city map  spatial congestion hotspots.  
e. Clustering traces by kmeans on duration vectors to separate “smooth tours” vs. “problem tours”. Quantify their volume and delta to KPIs.  
f. Correlation matrix / regression: explanatory variables (traffic index, rain, vehicle age, driver)  dependent variables (lateness, fuel, failures).

====================================================
3. Root Cause Analysis
====================================================

Potential root causes & supporting processmining analyses:

1. Suboptimal static routes  
   – Evidence: high % of sequence deviations and detours; variant analysis shows dynamic resequencing by drivers outperforms original plan.  

2. Incorrect traveltime estimation  
   – Alignment shows systematic positive lateness between Stop A and B during 07:3009:30 on weekdays  outdated speed profiles in routing engine.  

3. Traffic congestion patterns  
   – Geoheatmaps of “IdleTraffic” match city ring roads at rush hours  suggests timedependent routing.  

4. High variability in onsite service time  
   – Service time distribution is bimodal; long tail associated with highrise buildings lacking concierge access.  

5. Vehicle reliability  
   – OC analysis: traces containing “Unscheduled StopMaintenance” are 23 % longer and consume +14 % fuel  older vans (age > 6 yrs).  

6. Driver behaviour  
   – KPI scatter plot: some drivers have 20 % higher idleengineon time; decision tree (driver id  high fuel / lateness) pinpoints outliers.  

7. Failed deliveries  
   – Conformance check: parcels with failed first attempt cause on average 1.4 additional km and 6.5 min each on subsequent days. Most failures concentrated in time windows 08:0010:00 where customers likely absent.

====================================================
4. DataDriven Optimisation Strategies
====================================================

Strategy 1: Dynamic, trafficaware route replanning  
• Targeted inefficiency: Rushhour delays, detours, high fuel usage.  
• Root cause addressed: Static route plan ignores realtime congestion.  
• Processmining proof: 65 % of lateness align with “IdleTraffic” events clustered on ring roads 07:0009:00 & 16:3018:00.  
• Solution: Integrate realtime traffic feed into dispatch engine; allow midtour resequencing when forecast delay > 5 min.  
• Expected impact:  
   – Ontime delivery +812 pp.  
   – Fuel per km –5 %.  
   – Idle/traffic delay –25 %.  

Strategy 2: Predictive maintenance scheduling  
• Targeted inefficiency: Unscheduled breakdowns causing tour interruption and high repair cost.  
• Root cause: Reactive maintenance on aging vehicles.  
• Processmining proof: Survival analysis shows hazard rate for “Unscheduled StopMaintenance” jumps after 4 000 km since last workshop event.  
• Solution: Train a remainingusefullife model using distance, engine hours, error codes; schedule maintenance during lowdemand days before failure probability > 15 %.  
• Expected impact:  
   – Unscheduled maintenance events –70 %.  
   – Vehicle utilisation +6 %.  
   – Ontime rate +2 pp (by avoiding inshift failures).  

Strategy 3: Smart customer timewindow & firstattempt success program  
• Targeted inefficiency: High faileddelivery rate causing redelivery kilometres.  
• Root cause: Mismatch between customer availability and assigned slot.  
• Processmining proof: Variant analysis: parcels with customerselected afternoon windows have 4 % failure; companydefault morning windows 12 %.  
• Solution:  
   1. Offer realtime selfservice slot rescheduling when ETA slips > 15 min.  
   2. Push notification 30 min before arrival; allow safedrop consent.  
   3. Use historical success probability model to propose optimal slot at checkout.  
• Expected impact:  
   – Failed delivery rate –40 %.  
   – km per delivered parcel –6 %.  
   – Driver overtime –4 %.  

(Additional quick wins: territory rebalancing based on stop density & timewindow mix; driver ecodriving coaching using perdriver idletime dashboards.)

====================================================
5. Operational Constraints & Continuous Monitoring
====================================================

5.1 Respecting constraints  
• Legal working time: dynamic routing engine incorporates remaining shift hours / mandatory breaks as hard constraints (soft constraint penalties in optimisation model).  
• Vehicle capacity: keep load feasibility when resequencing stops.  
• Customer time windows: tagged as hard/soft; soft windows incur penalty cost balanced against traffic delay cost.  
• Maintenance: predictive schedule integrated into fleet availability calendar before route optimisation.

5.2 Continuous monitoring plan  
Dashboards (updated daily):  
1. Conformance view: % tours fully conformant, average distance deviation.  
2. KPI trend lines: Ontime rate, idletraffic hours, fuel/100 km, failed deliveries, maintenance downtime.  
3. Heatmaps: latest week’s traffic idle locations vs. historical baseline.  
4. Driver scorecard: utilisation, ecodriving index, service time variance.  
5. Earlywarning alerts:  
   • Vehicle with failure probability > 15 %.  
   • Route whose predicted lateness > 10 min before depot departure.  
   • Sudden rise in failed deliveries for a postcode.

Monthly review: automatically generated processmining comparison (before vs. after change) to verify expected KPI deltas; conduct A/B experiments when rolling out optimisation features.

By combining integrated, objectcentric process mining with focused operational interventions, Speedy Parcels can systematically raise punctuality, cut fuel and maintenance costs, and sustain these gains through continuous datadriven monitoring.