```python
log_skeleton = {
    # RECEIVE ORDER must occur exactly once per case; every other activity
    # occurs at most once (0 or 1) except INVOICE and PAYMENT which can be
    # retried after dispatch.
    'activ_freq': {
        'RO': {1},        # exactly once – the case starts here
        'CA': {0, 1},
        'RI': {0, 1},
        'PI': {0, 1},
        'QC': {0, 1},
        'PO': {0, 1},
        'GSL': {0, 1},
        'D': {0, 1},
        'IC': {0, 1, 2},  # may be re-sent
        'RP': {0, 1, 2}   # may be re-tried
    },

    # 1. EQUIVALENCE – pairs that must appear together and equally often
    'equivalence': {
        ('CA', 'RI'),     # availability check always paired with reservation
        ('PI', 'QC')      # every pick is quality-checked
    },

    # 2. ALWAYS BEFORE – second activity must already have occurred
    'always_before': {
        ('PI', 'RI'),     # can only pick after items are reserved
        ('QC', 'PI'),     # quality check needs something that was picked
        ('PO', 'QC'),     # can only pack after QC
        ('GSL', 'PO'),    # label generated for packed parcel
        ('D', 'GSL'),     # dispatch needs a label
        ('IC', 'D'),      # invoice sent only after parcel left
        ('RP', 'IC')      # payment recorded only after invoice
    },

    # 3. ALWAYS AFTER – second activity will eventually follow
    'always_after': {
        ('RI', 'PI'),     # after reserving we will pick
        ('PI', 'QC'),     # after picking we will quality-check
        ('QC', 'PO'),     # after QC we will pack
        ('PO', 'GSL'),    # after packing we will create label
        ('GSL', 'D'),     # after label we will dispatch
        ('D', 'IC'),      # after dispatch we will invoice
        ('IC', 'RP')      # after invoice we will record payment
    },

    # 4. NEVER TOGETHER – incompatible in the same case
    'never_together': {
        ('RO', 'D'),      # cannot dispatch before receiving
        ('RO', 'IC'),
        ('RO', 'RP'),
        ('CA', 'RP'),     # cannot record payment before checking stock
        ('PI', 'IC'),
        ('PI', 'RP')
    },

    # 5. DIRECTLY FOLLOWS – immediate succession
    'directly_follows': {
        ('RO', 'CA'),     # receive  immediately check availability
        ('RI', 'PI'),     # reserve  immediately pick
        ('QC', 'PO'),     # quality-check  immediately pack
        ('PO', 'GSL'),    # pack  immediately generate label
        ('GSL', 'D')      # label  immediately dispatch
    }
}
```