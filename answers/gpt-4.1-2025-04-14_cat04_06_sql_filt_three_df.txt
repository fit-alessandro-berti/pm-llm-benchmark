Certainly! Here’s how you can accomplish this in DuckDB SQL:

### Step-by-step reasoning

- **Step 1:** For each `case_id`, number the events in order by `timestamp` (using `ROW_NUMBER()` or `ROW_NUMBER() OVER (PARTITION BY case_id ORDER BY timestamp)`).
- **Step 2:** For each event, look at itself and the next two to see if they are exactly in the sequence:  
  'Approve Purchase Requisition'  'Create Order'  'Confirm Order'.
- **Step 3:** For every such matching sequence, calculate the time between 'Create Order' and 'Confirm Order' (i.e., between 2nd and 3rd event of the three).
- **Step 4:** For cases where there is such a sequence and the gap is more than 5 days, collect their `case_id` values.
- **Step 5:** Exclude all events from those cases from the final result.

### The Query

```sql
WITH ordered_events AS (
    SELECT
        *,
        ROW_NUMBER() OVER (PARTITION BY case_id ORDER BY timestamp) AS rn
    FROM event_log
),

sequences AS (
    SELECT
        e1.case_id,
        e1.rn AS seq_start_rn,
        e1.timestamp AS ts_approve_purchase_requisition,
        e2.timestamp AS ts_create_order,
        e3.timestamp AS ts_confirm_order
    FROM ordered_events e1
    JOIN ordered_events e2
      ON e1.case_id = e2.case_id AND e2.rn = e1.rn + 1
    JOIN ordered_events e3
      ON e1.case_id = e3.case_id AND e3.rn = e1.rn + 2
    WHERE
        e1.activity = 'Approve Purchase Requisition'
        AND e2.activity = 'Create Order'
        AND e3.activity = 'Confirm Order'
),

cases_to_exclude AS (
    SELECT DISTINCT case_id
    FROM sequences
    WHERE ts_confirm_order - ts_create_order > INTERVAL '5 days'
)

SELECT *
FROM event_log
WHERE case_id NOT IN (SELECT case_id FROM cases_to_exclude)
ORDER BY case_id, timestamp;
```

---

### **Summary**
- `ordered_events`: Assigns a row number to events within each `case_id`, ordered by `timestamp`.
- `sequences`: Locates every place in each case where the three-activity pattern occurs in direct succession, and captures the relevant timestamps.
- `cases_to_exclude`: Filters to cases with such a sequence **and** a gap exceeding 5 days.
- The final SELECT fetches all events not belonging to any of the excluded cases.

**This query will give you all events from cases that do NOT contain the specified sequence with the offending time gap.**