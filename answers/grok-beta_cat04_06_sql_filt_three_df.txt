Here's how we can approach this problem step-by-step with DuckDB SQL:

1. **Identify Cases with the Sequence:**
   First, we'll identify cases where the sequence 'Approve Purchase Requisition', 'Create Order', 'Confirm Order' occurs in that order with no other event in between.

2. **Filter for Time Condition:**
   From these cases, we'll filter for those where the time between 'Create Order' and 'Confirm Order' is more than 5 days.

3. **Exclude These Cases:**
   Finally, we'll exclude all events from these identified cases from the `event_log`.

Here is the SQL query to achieve this:

```sql
WITH 
-- Step 1: Identify the sequence of events in order
sequence_events AS (
    SELECT 
        case_id,
        activity,
        timestamp,
        LEAD(activity, 1) OVER (PARTITION BY case_id ORDER BY timestamp) AS next_activity,
        LEAD(activity, 2) OVER (PARTITION BY case_id ORDER BY timestamp) AS next_next_activity
    FROM event_log
    WHERE activity IN ('Approve Purchase Requisition', 'Create Order', 'Confirm Order')
),

-- Step 2: Filter cases with the exact sequence
sequence_cases AS (
    SELECT DISTINCT case_id
    FROM sequence_events
    WHERE activity = 'Approve Purchase Requisition'
      AND next_activity = 'Create Order'
      AND next_next_activity = 'Confirm Order'
),

-- Step 3: Calculate time difference for those cases
time_check AS (
    SELECT 
        sc.case_id,
        se.timestamp AS create_order_time,
        LEAD(se.timestamp) OVER (PARTITION BY sc.case_id ORDER BY se.timestamp) AS confirm_order_time,
        (LEAD(se.timestamp) OVER (PARTITION BY sc.case_id ORDER BY se.timestamp) - se.timestamp) > INTERVAL '5 days' AS long_delay
    FROM sequence_cases sc
    JOIN sequence_events se ON sc.case_id = se.case_id
    WHERE se.activity = 'Create Order'
),

-- Step 4: Get cases with a delay > 5 days
cases_to_exclude AS (
    SELECT case_id 
    FROM time_check 
    WHERE long_delay
),

-- Step 5: Exclude events from these cases
final_result AS (
    SELECT el.* 
    FROM event_log el
    LEFT JOIN cases_to_exclude cte ON el.case_id = cte.case_id
    WHERE cte.case_id IS NULL
)

SELECT * FROM final_result
ORDER BY case_id, timestamp;
```

**Explanation:**

- The `sequence_events` CTE uses window functions to look ahead two events to find the required sequence.
- `sequence_cases` finds unique cases where this sequence exists.
- `time_check` calculates the time difference between 'Create Order' and 'Confirm Order' for cases with the sequence.
- `cases_to_exclude` filters cases where the delay was more than 5 days.
- `final_result` uses a LEFT JOIN to exclude events from cases in `cases_to_exclude`.

This query will return all events from `event_log` except those from cases that have the specified sequence with a delay of more than 5 days between 'Create Order' and 'Confirm Order'.