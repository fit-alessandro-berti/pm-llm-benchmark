```python
# 
#  DECLARE model enriched with bias–mitigation constraints
# 

declare_model = {
    # -----------------------------------------------------
    # Unary constraints
    # -----------------------------------------------------
    "existence": {
        "StartApplication":   {"support": 1.0, "confidence": 1.0},
        "FinalDecision":      {"support": 1.0, "confidence": 1.0},

        # New – at least one explicit fairness check
        "BiasMitigationCheck":{"support": 1.0, "confidence": 1.0},
        "ManualReview":       {"support": 1.0, "confidence": 1.0}
    },
    "absence":        {},
    "exactly_one":    {},
    "init": {
        "StartApplication":   {"support": 1.0, "confidence": 1.0}
    },

    # -----------------------------------------------------
    # Binary constraints — fairness additions highlighted
    # -----------------------------------------------------
    "responded_existence": {},

    # ---- Co-Existence: if one happens, so must the other
    "coexistence": {
        # original
        "StartApplication": {"FinalDecision": {"support": 1.0, "confidence": 1.0}},

        # new – whenever a sensitive attribute is checked, a bias
        #      mitigation step must be present in the same trace
        "CheckApplicantRace":   {"BiasMitigationCheck": {"support": 1.0, "confidence": 1.0}},
        "CheckApplicantGender": {"BiasMitigationCheck": {"support": 1.0, "confidence": 1.0}},
        "CheckApplicantAge":    {"BiasMitigationCheck": {"support": 1.0, "confidence": 1.0}},

        # new – every decision goes together with a manual review
        "FinalDecision": {"ManualReview": {"support": 1.0, "confidence": 1.0}},
        "ManualReview":  {"FinalDecision": {"support": 1.0, "confidence": 1.0}}
    },

    # ---- Response: after A, B must eventually occur
    "response": {
        # original
        "StartApplication": {"RequestAdditionalInfo": {"support": 1.0, "confidence": 1.0}},

        # new – sensitive checks must be followed (eventually) by
        #       an explicit bias-mitigation activity
        "CheckApplicantRace":   {"BiasMitigationCheck": {"support": 1.0, "confidence": 1.0}},
        "CheckApplicantGender": {"BiasMitigationCheck": {"support": 1.0, "confidence": 1.0}},
        "CheckApplicantAge":    {"BiasMitigationCheck": {"support": 1.0, "confidence": 1.0}},

        # new – once the bias-mitigation check is done, a manual
        #       review must eventually follow
        "BiasMitigationCheck":  {"ManualReview":        {"support": 1.0, "confidence": 1.0}}
    },

    # ---- Precedence: B may only happen if A occurred before
    "precedence": {
        # new – final decisions are only allowed after
        #       the bias-mitigation check
        "BiasMitigationCheck": {"FinalDecision": {"support": 1.0, "confidence": 1.0}},

        # new – manual review must also precede the decision
        "ManualReview":        {"FinalDecision": {"support": 1.0, "confidence": 1.0}}
    },

    # ---- Succession (original constraint kept)
    "succession": {
        "RequestAdditionalInfo": {"FinalDecision": {"support": 1.0, "confidence": 1.0}}
    },

    # ---- Immediate response (chain) — stricter ordering
    "chainresponse": {
        # new – bias-mitigation must happen right after the
        #       sensitive attribute is looked at
        "CheckApplicantRace":   {"BiasMitigationCheck": {"support": 1.0, "confidence": 1.0}},
        "CheckApplicantGender": {"BiasMitigationCheck": {"support": 1.0, "confidence": 1.0}},
        "CheckApplicantAge":    {"BiasMitigationCheck": {"support": 1.0, "confidence": 1.0}},

        # new – manual review immediately after the mitigation
        "BiasMitigationCheck":  {"ManualReview":        {"support": 1.0, "confidence": 1.0}}
    },

    # ---- Forbid immediate succession from sensitive check to decision
    "nonchainsuccession": {
        "CheckApplicantRace":   {"FinalDecision": {"support": 1.0, "confidence": 1.0}},
        "CheckApplicantGender": {"FinalDecision": {"support": 1.0, "confidence": 1.0}},
        "CheckApplicantAge":    {"FinalDecision": {"support": 1.0, "confidence": 1.0}}
    },

    # -----------------------------------------------------
    # Empty constraint sets kept for completeness
    # -----------------------------------------------------
    "altresponse":       {},
    "altprecedence":     {},
    "altsuccession":     {},
    "chainprecedence":   {},
    "chainsuccession":   {},
    "noncoexistence":    {},
    "nonsuccession":     {}
}
```

Explanation of the bias-mitigation constraints
1. existence(BiasMitigationCheck) and existence(ManualReview)  
   • Guarantees every case contains at least one explicit bias-control step and a human-in-the-loop review.

2. coexistence(CheckApplicant… , BiasMitigationCheck)  
   • If the process inspects a sensitive attribute (age, gender or race), a bias-mitigation activity must also appear in the same trace, assuring that no attribute is examined without a fairness safeguard.

3. response / chainresponse from the attribute checks to BiasMitigationCheck  
   • Ensures the mitigation step occurs and, in the chain variant, occurs immediately after the check, preventing other activities from slipping in between and influencing the decision.

4. nonchainsuccession(CheckApplicant…, FinalDecision)  
   • Prohibits an immediate jump from seeing a sensitive attribute directly to issuing the decision, avoiding impulsive or biased outcomes.

5. precedence(BiasMitigationCheck  FinalDecision) and precedence(ManualReview  FinalDecision)  
   • A decision is only allowed if both the mitigation check and a manual review have happened earlier in the case.

6. coexistence(FinalDecision, ManualReview)  
   • Provides a double guarantee that every automatic decision is paired with human oversight and vice-versa.

Together, these DECLARE constraints make it impossible for the process to:  
• Skip fairness controls after looking at sensitive data,  
• Arrive at a decision without both algorithmic bias checks and human review, or  
• Decide immediately after a sensitive attribute is revealed.  

Hence the extended model systematically reduces the risk of discriminatory behaviour in the loan-application workflow.