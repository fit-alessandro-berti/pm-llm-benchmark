To model the hospital patient management scenario described as a process tree using the specified operators (`->`, `X`, `+`, `*`), we will follow the structure outlined in the problem statement. The goal is to capture all sequential, exclusive choices, concurrent executions, and looping behavior as required by the scenario.

### Step-by-Step Construction

1. **Define Root Process Tree**: 
   - This will be the starting point of our process tree. It encompasses all activities from arrival through discharge without any external parent.

2. **Arrival (A)**:
   - The patient first arrives at the hospital reception, denoted as `A`.

3. **Registration (RG)**:
   - After arriving, patients complete registration to gather personal and insurance details, labeled as `RG`.

4. **Intake Assessment (IA)**:
   - Subsequent to registration, an intake assessment is conducted (`IA`).

5. **Triage Evaluation**:
   - The triage team evaluates the patient with two mandatory sequential activities: 
     - **Triage Interview (TI)**
     - **Triage Classification (TC)**.
   - This sequence can be represented as a process tree `SEQ_Triage` where children are `TI` and `TC`.

6. **Exclusive Diagnostic Testing**:
   - Based on the triage classification, an exclusive choice is made between two tests: 
     - If cardiovascular suspicion exists, perform `CE`.
     - Otherwise, perform `FBP`.
   - This decision point can be denoted as `X ( CE, FBP )`.

7. **Initial Diagnostic Loop**:
   - After the initial diagnostic test (`CE` or `FBP`), evaluate results.
   - If abnormal, enter a loop with two exclusive choices for treatment: 
     - **Targeted Medication (TM)**
     - **Specialized Physical Therapy (SPT)**.
   - This forms an infinite loop represented as `* ( TM, SPT )`.
   - Following the treatment within this loop is an initial re-diagnostic test (`RDT`), which again has exclusive choices:
     - **Follow-up ECG (FCE)**
     - **Follow-up Blood Analysis (FBA)**.
   - This forms another infinite loop represented as `* ( FCE, FBA )`. 
   - The entire process of abnormal results leading back to re-diagnostic testing repeats until normal results are obtained.

8. **Advanced Diagnostic Imaging and Nutritional Counseling**:
   - Once normal results are achieved, proceed with advanced diagnostic imaging (`AI`) and nutritional counseling (`NC`).
   - Both activities occur concurrently using the `+` operator: `+ ( AI, NC )`.

9. **Final Administrative Steps**:
   - After completing imaging and counseling, handle final administrative tasks in sequence:
     - **Follow-up Appointment Scheduling (FAS)**
     - **Detailed Discharge Instructions (DDI)**.
   - These are sequential activities represented by a simple chain `+` but are also in true concurrency with no explicit ordering implied (`+ ( FAS, DDI )`).

10. **Final Administrative and Financial Clearances**:
    - Finally, handle parallel administrative tasks to complete the patient's journey through the hospital system.
    - These steps include billing, insurance claims processing, and medical records finalization, represented as `BL`, `ICP`, and `MRF`.
    - The concurrency of these tasks is denoted by `+ ( BL, ICP, MRF )`.

### Final Process Tree Construction

Below is the constructed process tree using the notation provided:

```python
from pm4py.objects.process_tree.obj import ProcessTree, Operator

# Define root of the process tree
root = ProcessTree(operator=Operator.PARALLEL)

# 1. Arrival at hospital reception (A)
arrival_node = ProcessTree(label="A", parent=root)

# 2. Registration (RG)
registration_node = ProcessTree(label="RG", parent=root)

# 3. Intake Assessment (IA)
intake_assessment_node = ProcessTree(label="IA", parent=registration_node)

# 4. Triage Evaluation
triage_seq = ProcessTree(operator=Operator.SEQUENCE, parent=root)
trian_interview_node = ProcessTree(label="TI", parent=triage_seq)
triage_classify_node = ProcessTree(label="TC", parent=triage_seq)
triage_seq.children.extend([trian_interview_node, triage_classify_node])

# 5. Diagnostic Testing (Exclusive Choice: CE or FBP)
diagnostic_choice = ProcessTree(operator=X, children=[
    ProcessTree(label="CE", parent=root), 
    ProcessTree(label="FBP", parent=root)], parent=triage_seq)

# 6. Initial Diagnostic Loop
loop_root = ProcessTree(parent=diagnostic_choice)
re_diag_test_node = ProcessTree(label="RDT", parent=loop_root)
re_diag_test_children = [ProcessTree(label="FCE", parent=re_diag_test_node), 
                        ProcessTree(label="FBA", parent=re_diag_test_node)]
re_diag_test_node.children.extend(re_diag_test_children)
specialist_choice_loop = ProcessTree(operator=Operator.LOOP, children=[re_diag_test_node], parent=loop_root)

# 7. Advanced Diagnostic Imaging and Nutritional Counseling (Concurrency)
advanced_imaging_counselling_seq = ProcessTree(operator=Operator.SEQUENCE, parent=root)
ai_node = ProcessTree(label="AI", parent=advanced_imaging_counselling_seq)
nc_node = ProcessTree(label="NC", parent=advanced_imaging_counselling_seq)
advanced_imaging_counselling_seq.children.extend([ai_node, nc_node])

# 8. Final Administrative Steps
final_administration_seq = ProcessTree(operator=Operator.SEQUENCE, parent=root)
fas_node = ProcessTree(label="FAS", parent=final_administration_seq)
ddi_node = ProcessTree(label="DDI", parent=final_administration_seq)
final_administration_seq.children.extend([fas_node, ddi_node])

# 9. Final Administrative and Financial Clearances
final_clearances = ProcessTree(operator=Operator.PARALLEL, parent=root)
billing_node = ProcessTree(label="BL", parent=final_clearances)
icp_node = ProcessTree(label="ICP", parent=final_clearances)
mrf_node = ProcessTree(label="MRF", parent=final_clearances)
final_clearances.children.extend([billing_node, icp_node, mrf_node])

# The root process tree now encapsulates the entire patient journey
```

### Explanation

- **Sequential Steps**: Activities such as arrival (`A`), registration (`RG`), intake assessment (`IA`), triage evaluation (sequence of `TI` and `TC`), and final administrative tasks are modeled using sequential chains denoted by the `+` operator. Each activity is directly connected to its parent node in a linear fashion.
  
- **Exclusive Choices**: The decision point between diagnostic tests and re-diagnostic test options is represented using the `X` operator, indicating an exclusive choice where only one branch (test or treatment) can be executed at any step.

- **Looping Behavior**: The process of abnormal results leading back to further consultations (`SC`) and subsequent treatments (`TM`, `SPT`) forms a loop. This looping behavior is modeled using the `*` operator, indicating that once entered into this path, the patient may repeatedly pass through it until normal results are obtained.

- **Concurrency with Silent Steps**: The advanced diagnostic imaging (`AI`) and nutritional counseling (`NC`) activities, along with final administrative steps (`FAS`, `DDI`), run in parallel as denoted by the `+` operator. This signifies that they can be executed simultaneously without a specified order.

This hierarchical construction provides a comprehensive model of the hospital patient management process using ProcessTree objects and the defined operators. Each node represents an activity or decision point, with parents explicitly set to ensure correct execution sequencing in accordance with the process tree logic.