```sql
WITH SequenceMatch AS (
    SELECT 
        CASE_ID,
        ACTIVITY,
        TIMESTAMP
    FROM 
        event_log
    WHERE 
        (CASE_ID = 'some_case_id' -- Replace with actual case ID, if needed for testing purposes.
            AND ACTIVITY IN ('Approve Purchase Requisition', 'Create Order', 'Confirm Order')
            AND TIMESTAMP BETWEEN '2023-01-01' AND '2023-12-31'
        )
),
SequenceFiltered AS (
    SELECT 
        CASE_ID,
        ACTIVITY,
        TIMESTAMP
    FROM 
        SequenceMatch
    WHERE 
        (CASE_ID = 'some_case_id' -- Replace with actual case ID, if needed for testing purposes.
            AND SUBSTR(LOWER(Activity), 12) LIKE '%create%'
            AND SUBSTR(LOWER(Activity), 8) LIKE '%confirm%'
        )
),
FilteredOut AS (
    SELECT DISTINCT 
        CASE_ID,
        ACTIVITY,
        TIMESTAMP
    FROM 
        event_log
    WHERE 
        (CASE_ID = 'some_case_id' -- Replace with actual case ID, if needed for testing purposes.
            AND NOT EXISTS(
                SELECT 1
                FROM SequenceFiltered sf
                WHERE 
                    sf.CASE_ID = CASE_ID
                    AND sf.ACTIVITY IN ('Approve Purchase Requisition', 'Create Order', 'Confirm Order')
                    AND TIMESTAMP BETWEEN sf.TIMESTAMP - INTERVAL '5 days' AND sf.TIMESTAMP + INTERVAL '5 days'
            )
        )
)
SELECT *
FROM FilteredOut;
```

Please replace `'some_case_id'` in the query with the actual case ID for which you want to check. This SQL script will help you identify and exclude events from cases that meet both a specific sequence of activities and the timing requirement.