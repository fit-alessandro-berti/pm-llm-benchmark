To achieve the task described, you can follow these steps in DuckDB SQL:

1. **Determine the sequence of activities for each `case_id` while maintaining the order imposed by `timestamp`.**
2. **Group cases by their complete activity sequence to identify unique process variants.**
3. **Count how many cases correspond to each variant and determine the top K variants by their frequency.**
4. **Return all events from the original event log that belong only to cases which are part of these top K variants.**

Here is the DuckDB SQL query to accomplish this:

```sql
WITH OrderedEvents AS (
    SELECT
        case_id,
        activity,
        timestamp,
        ROW_NUMBER() OVER (PARTITION BY case_id ORDER BY timestamp) AS event_order
    FROM
        event_log
),
ProcessVariants AS (
    SELECT
        case_id,
        STRING_AGG(activity, '->') OVER (PARTITION BY case_id ORDER BY timestamp) AS variant_sequence
    FROM
        OrderedEvents
),
VariantCounts AS (
    SELECT
        variant_sequence,
        COUNT(*) AS case_count
    FROM
        ProcessVariants
    GROUP BY
        variant_sequence
),
TopKVariants AS (
    SELECT
        variant_sequence
    FROM
        VariantCounts
    ORDER BY
        case_count DESC
    LIMIT
        K
)
SELECT
    e.*
FROM
    event_log e
JOIN
    TopKVariants tv
ON
    STRING_AGG(e.activity, '->') OVER (PARTITION BY e.case_id ORDER BY e.timestamp) = tv.variant_sequence;
```

### Explanation:

1. **OrderedEvents**: This CTE (Common Table Expression) assigns a sequential order to events within each `case_id` based on their `timestamp`.

2. **ProcessVariants**: This CTE constructs the sequence of activities for each `case_id` using `STRING_AGG` to concatenate activities in the order of their `timestamp`.

3. **VariantCounts**: This CTE counts the number of cases for each unique process variant.

4. **TopKVariants**: This CTE selects the top K variants based on their frequency (number of cases).

5. **Final Selection**: The main query selects all events from the original `event_log` that belong to the top K variants by joining with the `TopKVariants` CTE.

### Note:
- Replace `K` with the desired number of top variants you want to consider.
- The `STRING_AGG` function concatenates activities with `->` as the delimiter. Adjust the delimiter as needed.
- Ensure that the `event_log` table exists and contains the specified columns (`case_id`, `activity`, `timestamp`).