Here is a plausible temporal-profile dictionary (times are in seconds):

```python
temporal_profile = {
    # --- Up-stream procurement and early manufacturing ---
    ('SS', 'OP'): (172_800, 43_200),        # ~2 days ± 0.5 day
    ('SS', 'RC'): (1_209_600, 259_200),     # ~14 days ± 3 days
    ('SS', 'QI'): (1_296_000, 345_600),     # ~15 days ± 4 days
    ('SS', 'CA'): (1_555_200, 432_000),     # ~18 days ± 5 days

    ('OP', 'RC'): (1_036_800, 259_200),     # ~12 days ± 3 days
    ('OP', 'QI'): (1_123_200, 302_400),     # ~13 days ± 3.5 days
    ('OP', 'CA'): (1_382_400, 388 800),     # ~16 days ± 4.5 days

    # --- Receiving, inspection, and assembly ---
    ('RC', 'QI'): (86_400, 21_600),         # ~1 day ± 6 h
    ('RC', 'CA'): (345_600, 86_400),        # ~4 days ± 1 day
    ('QI', 'CA'): (259_200, 86_400),        # ~3 days ± 1 day

    # --- Down-stream manufacturing and logistics ---
    ('CA', 'PT'): (172_800, 43 200),        # ~2 days ± 0.5 day
    ('PT', 'PK'): (86_400, 28 800),         # ~1 day ± 8 h
    ('PK', 'WS'): (43 200, 14 400),         # ~0.5 day ± 4 h
    ('WS', 'DT'): (432_000, 172 800),       # ~5 days ± 2 days
    ('DT', 'AS'): (2_592_000, 604 800),     # ~30 days ± 7 days

    # --- Longer-range, cross-phase pairs (illustrating eventual-following) ---
    ('CA', 'DT'): (864_000, 259 200),       # ~10 days ± 3 days
    ('SS', 'AS'): (4_492_800, 1_209 600),   # ~52 days ± 14 days
    ('OP', 'PK'): (1_555_200, 432 000),     # ~18 days ± 5 days
    ('RC', 'PT'): (518_400, 172 800),       # ~6 days ± 2 days
    ('QI', 'PT'): (345_600, 172 800)        # ~4 days ± 2 days
}
```

This subset captures both consecutive and non-consecutive activity pairs, providing a realistic spread of average delays and variability across the entire high-tech electronics supply-chain process.