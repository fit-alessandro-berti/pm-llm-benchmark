1. One concrete trace that is classified as “fitting’’ by the processtree but is clearly wrong from a business point of view is  

   Receive_Order,  
   Check_Inventory,  
   Ship_Order,  
   Package_Items,  
   Authorize_Payment,  
   Close_Order

2. Why the trace is wrong although the model accepts it  

• In the model the three activities Authorize_Payment, Package_Items and Ship_Order sit under a PARALLEL (  ) node.  
  – A  node forces all its children to occur, but lets them occur in any relative order.  
  – Hence every permutation of those three activities is considered legal by the tree, including the one shown above.

• In a real OrdertoCash scenario the order of those three activities is not arbitrary:  
  – Payment must be authorised before anything is shipped (otherwise goods could leave the warehouse without any guarantee of being paid).  
  – Items have to be packaged before they can be shipped.  

• Because those causal constraints are not captured by the underrestrictive parallel operator, the model erroneously “accepts’’ the trace where  
  – the parcel is shipped before it is even packaged, and  
  – the parcel is shipped before the customer’s payment has been authorised.  

Thus the sequence is operationally impossible and violates domain rules, yet it is still deemed conformant by the current underfitting processtree.