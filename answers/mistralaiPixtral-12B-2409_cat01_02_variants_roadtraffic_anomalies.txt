To identify the main anomalies in the process variants, we need to look at both the frequency and performance data. Here are some data and process-specific considerations:

### Anomalies in Frequency:
1. **High Frequency with Low Performance:**
   - `Create Fine -> Send Fine -> Insert Fine Notification -> Add penalty -> Send for Credit Collection` has a very high frequency (56,482) but a significantly high performance (59,591,524.946). This suggests a potential inefficiency or bottleneck in this process step.

2. **Low Frequency with High Performance:**
   - `Create Fine -> Send Fine -> Insert Fine Notification -> Add penalty -> Payment -> Payment -> Payment` has a low frequency (69) but a high performance (47,844,313.043). This indicates that this path might be less common but highly efficient.

3. **High Frequency with Moderate Performance:**
   - `Create Fine -> Send Fine` has a high frequency (20,385) but a moderate performance (8,380,516.026). This suggests that while this step is common, it might not be as efficient as others.

4. **Low Frequency with Very High Performance:**
   - `Create Fine -> Send Fine -> Insert Fine Notification -> Add penalty -> Send for Credit Collection` has a low frequency (522) but a very high performance (54,309,682.759). This indicates that this path is less common but highly efficient.

### Anomalies in Performance:
1. **High Performance with Moderate Frequency:**
   - `Create Fine -> Send Fine -> Insert Fine Notification -> Add penalty -> Send for Credit Collection` has a high performance (58,289,146.931) with a moderate frequency (1,515). This suggests that this step is very efficient but not commonly taken.

2. **Low Performance with High Frequency:**
   - `Create Fine -> Payment` has a high frequency (46,371) but a low performance (889,688.400). This indicates that this step is common but inefficient.

3. **Very High Performance with Low Frequency:**
   - `Create Fine -> Send Fine -> Insert Fine Notification -> Add penalty -> Send for Credit Collection` has a very high performance (90,716,800.000) with a low frequency (108). This suggests that this path is highly efficient but rarely taken.

### Process-Specific Considerations:
1. **Complexity vs. Frequency:**
   - Paths with multiple steps (e.g., `Create Fine -> Send Fine -> Insert Fine Notification -> Add penalty -> Payment -> Send for Credit Collection`) tend to have lower frequencies but can have varied performances. This suggests that more complex paths might be less common but critical when they do occur.

2. **Redundancy:**
   - Paths like `Create Fine -> Send Fine -> Insert Fine Notification -> Add penalty -> Payment -> Payment` indicate potential redundancy in the process, as multiple payments are involved.

3. **Critical Paths:**
   - Paths with high performance and moderate frequency (e.g., `Create Fine -> Send Fine -> Insert Fine Notification -> Add penalty -> Send for Credit Collection`) could be critical paths that need to be optimized for efficiency.

### Conclusion:
The main anomalies lie in the discrepancy between the frequency and performance of various process steps. High-frequency steps are not always the most efficient, and some less common paths are highly efficient. Identifying and optimizing these anomalies can lead to significant process improvements.