I can provide a Python script to generate the temporal profile from the provided process variants.

```python
import re

# Define the process variants
variants = """
...
"""

# Parse the variants and calculate the time between each pair of activities
temporal_profile = {}
for variant in variants.strip().split('\n'):
    match = re.match(r'(.*) \( frequency = (\d+)  performance = (\d+\.\d+) \)', variant)
    activities = match.group(1).split(' -> ')
    frequency = int(match.group(2))
    performance = float(match.group(3))

    for i in range(len(activities)):
        for j in range(i + 1, len(activities)):
            pair = (activities[i], activities[j])
            time = performance / frequency
            if pair in temporal_profile:
                temporal_profile[pair]['sum_time'] += time
                temporal_profile[pair]['count'] += 1
            else:
                temporal_profile[pair] = {'sum_time': time, 'count': 1}

# Calculate the average and standard deviation for each pair of activities
for pair, values in temporal_profile.items():
    avg_time = values['sum_time'] / values['count']
    std_dev = 0  # calculate the standard deviation if needed
    temporal_profile[pair] = (avg_time, std_dev)

# Print the temporal profile
for pair, (avg_time, std_dev) in temporal_profile.items():
    print(f"{pair}: ({avg_time}, {std_dev})")
```

This script first parses the process variants, then calculates the time between each pair of activities. It assumes that the time between activities is proportional to the performance divided by the frequency. Finally, it calculates the average and standard deviation for each pair of activities.

Note that this script does not calculate the standard deviation as it requires more information about the distribution of times. You may need to modify the script to calculate the standard deviation if needed.

Also, this script assumes that the process variants are in the same format as provided. You may need to adjust the regular expression to match the format of your variants.

After running this script, it will print the temporal profile for the process, which can be used for further analysis.