```python
from pm4py.objects.petri_net.obj import PetriNet, Marking
from pm4py.objects.petri_net.utils import petri_utils

net = PetriNet("insurance_claim")

# Places
p_start = PetriNet.Place("Start")
p_claim_registered = PetriNet.Place("Claim Registered")
p_documents_verified = PetriNet.Place("Documents Verified")
p_fraud_checked = PetriNet.Place("Fraud Checked")
p_claim_assessed = PetriNet.Place("Claim Assessed")
p_approved = PetriNet.Place("Approved")
p_paid = PetriNet.Place("Paid")
p_notified = PetriNet.Place("Notified")
p_closed = PetriNet.Place("Closed")


# Transitions
t_claim = PetriNet.Transition("C", "Insurance Claim")
t_claim_registration = PetriNet.Transition("CR", "Claim Registration")
t_document_verification = PetriNet.Transition("DV", "Document Verification")
t_re_document_submission = PetriNet.Transition("RDS", "Re-Document Submission")
t_fraud_check = PetriNet.Transition("FC", "Fraud Check")
t_in_depth_investigation = PetriNet.Transition("II", "In-depth Investigation")
t_claim_assessment = PetriNet.Transition("CA", "Claim Assessment")
t_approval = PetriNet.Transition("AP", "Approval")
t_payment = PetriNet.Transition("P", "Payment")
t_notification = PetriNet.Transition("N", "Notification")
t_closure = PetriNet.Transition("CL", "Closure")

# Add places and transitions to the net
net.places.add(p_start)
net.places.add(p_claim_registered)
net.places.add(p_documents_verified)
net.places.add(p_fraud_checked)
net.places.add(p_claim_assessed)
net.places.add(p_approved)
net.places.add(p_paid)
net.places.add(p_notified)
net.places.add(p_closed)

net.transitions.add(t_claim)
net.transitions.add(t_claim_registration)
net.transitions.add(t_document_verification)
net.transitions.add(t_re_document_submission)
net.transitions.add(t_fraud_check)
net.transitions.add(t_in_depth_investigation)
net.transitions.add(t_claim_assessment)
net.transitions.add(t_approval)
net.transitions.add(t_payment)
net.transitions.add(t_notification)
net.transitions.add(t_closure)


# Arcs
petri_utils.add_arc_from_to(p_start, t_claim, net)
petri_utils.add_arc_from_to(t_claim, p_claim_registered, net)
petri_utils.add_arc_from_to(p_claim_registered, t_claim_registration, net)
petri_utils.add_arc_from_to(t_claim_registration, p_documents_verified, net)
petri_utils.add_arc_from_to(p_documents_verified, t_document_verification, net)
petri_utils.add_arc_from_to(t_document_verification, p_fraud_checked, net)
petri_utils.add_arc_from_to(p_documents_verified, t_re_document_submission, net)
petri_utils.add_arc_from_to(t_re_document_submission, p_documents_verified, net)
petri_utils.add_arc_from_to(p_fraud_checked, t_fraud_check, net)
petri_utils.add_arc_from_to(t_fraud_check, p_claim_assessed, net)
petri_utils.add_arc_from_to(p_fraud_checked, t_in_depth_investigation, net)
petri_utils.add_arc_from_to(t_in_depth_investigation, p_fraud_checked, net)
petri_utils.add_arc_from_to(p_claim_assessed, t_claim_assessment, net)
petri_utils.add_arc_from_to(t_claim_assessment, p_approved, net)
petri_utils.add_arc_from_to(p_approved, t_approval, net)
petri_utils.add_arc_from_to(t_approval, p_paid, net)
petri_utils.add_arc_from_to(p_paid, t_payment, net)
petri_utils.add_arc_from_to(t_payment, p_notified, net)
petri_utils.add_arc_from_to(p_notified, t_notification, net)
petri_utils.add_arc_from_to(t_notification, p_closed, net)


# Initial and Final Markings
im = Marking()
im[p_start] = 1

fm = Marking()
fm[p_closed] = 1

```