# Log Skeleton for Order Fulfillment Process

```python
log_skeleton = {
    'equivalence': {
        ('RO', 'IC'),  # If order is received, invoice must be generated same number of times
        ('PI', 'QC'),  # Picking and quality check occur same number of times
    },
    
    'always_before': {
        ('CA', 'RO'),   # Check Availability must occur before Receive Order is complete
        ('RI', 'CA'),   # Reserve Items must occur after Check Availability
        ('PI', 'RI'),   # Pick Items must occur after Reserve Items
        ('QC', 'PI'),   # Quality Check must occur after Pick Items
        ('PO', 'QC'),   # Pack Order must occur after Quality Check
        ('GSL', 'PO'),  # Generate Shipping Label must occur after Pack Order
        ('D', 'GSL'),   # Dispatch must occur after Generate Shipping Label
        ('IC', 'D'),    # Invoice Customer must occur after Dispatch
        ('RP', 'IC'),   # Record Payment must occur after Invoice Customer
    },
    
    'always_after': {
        ('RO', 'CA'),   # If Receive Order occurs, Check Availability follows
        ('CA', 'RI'),   # If Check Availability occurs, Reserve Items follows
        ('RI', 'PI'),   # If Reserve Items occurs, Pick Items follows
        ('PI', 'QC'),   # If Pick Items occurs, Quality Check follows
        ('QC', 'PO'),   # If Quality Check occurs, Pack Order follows
        ('PO', 'GSL'),  # If Pack Order occurs, Generate Shipping Label follows
        ('GSL', 'D'),   # If Generate Shipping Label occurs, Dispatch follows
        ('D', 'IC'),    # If Dispatch occurs, Invoice Customer follows
    },
    
    'never_together': {
        # No activities should occur together that contradict the process
        # This scenario has a linear flow, so conflicts are minimal
    },
    
    'activ_freq': {
        'RO': {1},              # Receive Order occurs exactly once per case
        'CA': {1},              # Check Availability occurs exactly once per case
        'RI': {1},              # Reserve Items occurs exactly once per case
        'PI': {1},              # Pick Items occurs exactly once per case
        'QC': {1},              # Quality Check occurs exactly once per case
        'PO': {1},              # Pack Order occurs exactly once per case
        'GSL': {1},             # Generate Shipping Label occurs exactly once per case
        'D': {1},               # Dispatch occurs exactly once per case
        'IC': {1},              # Invoice Customer occurs exactly once per case
        'RP': {0, 1},           # Record Payment may occur 0 or 1 time (optional if prepaid)
    },
    
    'directly_follows': {
        ('CA', 'RI'),   # Check Availability is directly followed by Reserve Items
        ('RI', 'PI'),   # Reserve Items is directly followed by Pick Items
        ('PI', 'QC'),   # Pick Items is directly followed by Quality Check
        ('QC', 'PO'),   # Quality Check is directly followed by Pack Order
        ('PO', 'GSL'),  # Pack Order is directly followed by Generate Shipping Label
        ('GSL', 'D'),   # Generate Shipping Label is directly followed by Dispatch
        ('D', 'IC'),    # Dispatch is directly followed by Invoice Customer
    },
}
```

---

## **Explanation of Constraints:**

### **Equivalence:**
- `(RO, IC)`: Every order received must result in an invoice (1:1 relationship)
- `(PI, QC)`: Every picked item batch must undergo quality check

### **Always Before:**
- Establishes the strict sequential ordering of the workflow
- Example: Items must be reserved before they can be picked

### **Always After:**
- Complements the "always_before" constraints
- Ensures that once a step completes, the next step is guaranteed to follow

### **Never Together:**
- Empty set as the process follows a linear sequence with no conflicting parallel activities

### **Activity Occurrences:**
- Most activities occur exactly once (1 per case)
- `RP` (Record Payment) is optional ({0, 1}) since some orders may be prepaid

### **Directly Follows:**
- Defines the strict sequential chain where activities must occur consecutively
- Creates a rigid pipeline: RO  CA  RI  PI  QC  PO  GSL  D  IC  RP