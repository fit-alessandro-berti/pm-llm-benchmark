Below is a practical, endtoend approach to identify, explain, and reduce queuing issues in the clinic using process mining and queue mining. It is structured in five sections as requested.

1) Queue identification and characterization

A. How to compute waiting (queue) times from the event log
- Concepts
  - Service time for an activity = complete_time  start_time.
  - Enablement time for an activity = the earliest time a case could start that activity given the process logic. For single-predecessor steps (e.g., Registration  Nurse Assessment), this is the predecessor’s completion time. For steps with multiple required predecessors (e.g., Specialist Review requires both Doctor Consultation and Test results), enablement_time(activity) = max(complete_time of all required predecessors) for that case.
  - Waiting (queue) time for an activity = start_time(activity)  enablement_time(activity). This isolates the delay attributable to queuing and coordination, not service duration or clinical work.
  - Inter-activity waiting on a specific arc (AB) = start_time(B)  complete_time(A), but only if A is the enabling predecessor for B in that case. To generalize, compute enablement time based on the discovered process model rather than assuming a single predecessor.

- Practical steps
  1) Clean and align: Ensure each case has paired start/complete for each activity. Resolve clock skew, duplicates, and missing completes.
  2) Discover process model: Use a sound model (e.g., Inductive Miner) to identify control-flow (sequence, parallel, choices). This is needed to compute proper enablement times, especially where multiple predecessors exist.
  3) Create “virtual enqueue” records: For every activity in every case, add a derived event “Queue start” at enablement_time(activity). Then waiting_time(activity) = start_time(activity)  queue_start_time(activity).
  4) First-activity waits: If an arrival or check-in timestamp exists (or appointment scheduled time), waiting_before_registration = start_time(Registration)  arrival/scheduled_time. If not available, this first queue cannot be measured reliably; plan to add an “Arrival” event going forward.

B. Key queue metrics to compute
For each activity queue (e.g., Registration, Nurse Assessment, Dr. Consultation by specialty, ECG, X-ray, Check-out) and for each key arc (e.g., RegistrationNurse Assessment), compute:
- Frequency: number and share of visits that join the queue.
- Mean, median, 90th and 95th percentile, and max waiting time.
- Excess-wait count and rate: number and percent of cases exceeding SLA (e.g., >15 min for Registration, >20 min for Nurse Assessment, >30 min for Diagnostics, clinic-specific).
- Cumulative queue time contribution: total waiting minutes contributed by this queue across all cases, per day/week (helps rank systemic impact).
- Queue length over time: estimate with Little’s Law (L   × W) per time-of-day or compute directly by scanning “queue start” vs “start” events to count concurrent waiting cases.
- Time-of-day/day-of-week patterns: average/percentiles by hour and weekday.
- Segmentation: by patient type (New/Follow-up), urgency, specialty, physician, insurance, and appointment type (walk-in vs scheduled).
- Resource-level metrics: per resource or resource pool, compute service time distribution, start–start inter-arrival to the resource, utilization ( = workload / available time), and idle/starved/blocked times.

C. Identifying the most critical queues
Use a severity score combining magnitude, prevalence, and business impact. For each queue q:
- Severity score S(q) = w1 × mean_wait + w2 × p90_wait + w3 × (cases_exceeding_SLA) + w4 × (share_of_total_visit_time_waiting) + w5 × (affected volume/coverage).
- Prioritize queues that:
  - Affect many patients (e.g., Nurse Assessment, Registration).
  - Have high 90th/95th percentile waits (painful tail).
  - Contribute a large share of total visit duration (e.g., tests that cause long delays before physician review).
  - Disproportionately impact priority cohorts (e.g., urgent or new patients).
  - Exhibit strong time-of-day spikes indicating controllable scheduling or staffing misalignments.

2) Root cause analysis

Go beyond “where queues are” to “why they occur” using process mining extensions:

A. Resource bottlenecks and utilization
- Compute per-resource-pool utilization:  = arrival_rate × mean_service_time / number_of_servers. Focus where  > 0.8; waiting grows nonlinearly as  approaches 1.
- Compare utilization and queue metrics by hour: do spikes in waits align with  spikes? If yes, capacity misalignment is likely.
- Identify resource fragmentation: many small single-server stations (ECG Room 3 only) create fragile queues; pooling reduces variability and waits.

B. Activity dependencies and handovers
- Use handover-of-work analysis: measure transitions between roles (clerks  nurses  doctors  technicians  clerks). High handover counts or rework loops correlate with coordination delays.
- Parallelization opportunities: identify where activities currently run in sequence but could run in parallel (e.g., ECG before vs after physician).

C. Variability in service times and arrivals
- Compute coefficients of variation (CVa for inter-arrivals, CVs for service times). High variability inflates queues even at moderate . Apply Kingman/Allen–Cunneen approximations to demonstrate sensitivity of waits to variability.
- Identify outlier resources/activities with unusually high variance; investigate root causes (training, room setup, EHR workflows).

D. Scheduling policies and arrival patterns
- Overlay appointment templates on arrival patterns: do many starts occur at the top of the hour? Are multiple specialties synchronized, creating surges at registration and nursing?
- Late/early arrivals: if scheduled times are available, quantify earliness/lateness distributions and their effect on downstream congestion.

E. Patient-type and urgency differences
- Variant analysis by New vs Follow-up, Urgent vs Normal, Specialty: discover which variants contain the worst queues.
- Priority preemption: quantify the extent to which Urgent cases overtake Normal cases and how that spills over into longer waits for others.

F. Equipment/room downtime
- From resource calendars or gaps between tasks, identify systematic downtime (e.g., calibration) coinciding with build-ups in queues.

3) Data-driven optimization strategies

Below are six concrete, complementary strategies. Each includes target queues, root cause, data support, and expected impact. Impact ranges are indicative; quantify with a calibrated what-if simulation using your event log.

1. Smooth arrivals to match capacity (appointment template redesign)
- Targets: Registration, Nurse Assessment, first doctor consult of the session, early diagnostics.
- Root cause: Arrival surges at fixed clock times (e.g., 9:00, 10:00) create transient overload.
- Data support: Hourly arrival rates and queue lengths spike at tops of hours;  > 0.9 for clerks/nurses during those spikes.
- Action:
  - Stagger appointment start times (e.g., 5-min offsets per provider).
  - Cap concurrent starts per resource pool.
  - Introduce micro-slots for follow-ups vs new patients (different average service times).
- Expected impact: If top-of-hour arrivals drop by 30–40% and  at Registration/Nursing reduces from ~0.9 to ~0.75 during peaks, queueing theory suggests 40–60% reduction in peak waiting and 20–30% reduction in average waits for these steps.

2. Add parallelism and pre-visit completion for predictable diagnostics
- Targets: Queues before ECG/X-ray/Blood Test and the subsequent wait before Specialist Review.
- Root cause: Sequential dependency—tests are ordered after the physician visit, forcing a second queue and return.
- Data support: Variant analysis shows path “Doctor  Test  Specialist Review” has long inter-activity waits; cases with “Test  Doctor” have shorter overall visits (if such variants exist).
- Action:
  - Protocolize diagnostic-first pathways for well-defined conditions (e.g., pre-visit ECG for cardiology, routine labs for endocrinology) based on rules mined from historical orders.
  - Allow nurse-driven standing orders within defined criteria; schedule predictable tests before the consult or enable home/nearby lab draws 24–48 hours prior.
- Expected impact: For eligible cohorts (often 30–60% of new patients in some specialties), cycle time to decision can drop by 20–35%; wait before Specialist Review can shrink by 50% because results are ready.

3. Pool and dynamically balance front desk and diagnostic technicians
- Targets: Registration, Check-out, ECG/X-ray queues.
- Root cause: Single-server stations and rigid staffing create long waits when one station is busy and others are idle.
- Data support: Resource analysis shows alternating periods of high  for one clerk/tech while others are idle; high CV in inter-arrival and service times.
- Action:
  - Pool clerks for both Registration and Check-out with cross-training; set WIP limits and real-time task dispatching (the next available clerk serves the next queued case).
  - For diagnostics, allow a floating tech to cover multiple rooms/equipment during spikes.
- Expected impact: Pooling reduces variability impact; M/M/1 to M/M/s conversion commonly reduces Wq by 30–60% at the same total staffing, especially at moderate loads.

4. Align nurse coverage to demand and introduce a “fast track” for simple follow-ups
- Targets: Nurse Assessment queue and downstream physician delays.
- Root cause: Staffing not aligned to demand curves; simple follow-ups compete with complex new cases for the same pre-assessment capacity.
- Data support: p90 waits peak mid-morning; follow-ups have shorter, more predictable nurse time.
- Action:
  - Shift one nurse to cover the mid-morning spike (e.g., 9:30–11:30) and late afternoon mini-peak.
  - Create a fast-track lane where follow-ups with no vitals complexity are assessed in a lighter protocol or virtual pre-assessment done pre-arrival (digital PROMs, vitals kiosk).
- Expected impact: 20–40% reduction in p90 waiting for Nurse Assessment during peak windows; 10–20% reduction in overall visit duration for follow-ups.

5. Protect capacity for “Urgent” without preempting all “Normal” patients
- Targets: Doctor and diagnostic queues where urgent cases jump the line.
- Root cause: Preemptive priority causes long waits for Normal patients and variability amplification.
- Data support: Variant and priority analysis show Normals’ waits spike when Urgents arrive; high tail percentiles for Normal.
- Action:
  - Reserve a small number of rolling urgent slots per hour per specialty, released to Normal patients if unused by TX minutes.
  - Use scheduled buffers rather than ad hoc preemption; maintain SLA for urgent without destabilizing the base flow.
- Expected impact: 10–25% reduction in Normal p90 waits and fewer schedule cascades, with urgent SLA preserved.

6. Real-time orchestration and digital pre-registration
- Targets: Registration and handovers; global coordination.
- Root cause: Coordination delays and variability in front-end processes; lack of real-time visibility.
- Data support: A large share of total waiting is front-end; handover analysis shows idle gaps between Registration completion and Nurse start.
- Action:
  - Digital pre-registration (forms, insurance verification) to cut in-person Registration service time by 20–40%.
  - Real-time queue board fed by the same event stream; auto-alerts when WIP or p90 waits exceed thresholds; reassign float staff proactively.
- Expected impact: 15–30% reduction in Registration wait; 5–10% reduction in total visit duration via quicker handovers and proactive balancing.

How to quantify expected impact rigorously
- Calibrate a discrete event simulation or apply queueing approximations using your measured , service-time distributions, and CVs per resource pool. Compare baseline vs scenarios:
  - Capacity/staffing changes (s, shift changes).
  - Arrival smoothing (reduced top-of-hour spikes).
  - Flow redesign (parallelism/pre-visit completion).
- Validate with a time-boxed pilot on one specialty or time window; measure pre/post differences controlling for case mix.

4) Trade-offs and constraints

- Shifting bottlenecks: Reducing Registration waits may move the bottleneck to Nursing or Diagnostics. Mitigation: end-to-end monitoring; implement changes in small increments and re-evaluate.
- Cost vs benefit: More staff or extended hours reduce waits but increase labor costs. Prefer pooling, staggering, and pre-visit work to “buy” capacity before adding FTEs.
- Staff workload and burnout: Dynamic reassignments and fast tracks can feel chaotic. Mitigation: stable rules, clear triggers, transparent dashboards, and protected breaks.
- Clinical quality and safety: Pre-visit tests must be clinically appropriate; avoid unnecessary testing. Use rule sets mined from historical orders and approved by clinical governance.
- Patient equity and experience: Priority rules for Urgent must not unduly penalize Normal; monitor fairness (differences in p90 wait by cohort).
- Technology and change management: Digital pre-registration and real-time orchestration require integration and training; plan phased rollout and support.

5) Measuring success

A. KPIs (balanced across time, quality, and cost)
- Patient time KPIs
  - Total visit duration (arrival to check-out): mean, median, p75/p90.
  - Waiting time per stage: mean, p90, percent exceeding SLA.
  - Share of visit spent waiting vs in service (non–value-add ratio).
  - Time-to-first-provider and time-to-decision (where clinically relevant).
- Flow and reliability
  - On-time start rate for first appointment of session.
  - Rework/loops rate (e.g., repeated Registration, missing orders).
  - Same-day completion rate of planned diagnostics.
- Resource KPIs
  - Utilization by resource pool and time-of-day; overtime hours.
  - Idle/starved vs blocked time fractions (process mining resource analytics).
- Patient-centered outcomes
  - Satisfaction score/NPS related to waiting.
  - No-show rate for follow-ups post-intervention; LWBS/abandonment proxies.
- Financial/operational
  - Throughput per session/day.
  - Cost per visit and staff cost per RVU (or equivalent).

B. Ongoing monitoring and sustainment
- Use the same event log structure to compute KPIs daily; maintain the “virtual enqueue” logic to track queue states in near real-time.
- Statistical process control: p-charts/x–R charts for SLA exceedance rates and mean waits; alert on sustained shifts.
- Cohort dashboards: segment by specialty, provider, patient type, urgency, and time-of-day to catch regressions and inequities.
- Monthly variance review: compare observed waits vs predicted (from queueing model) to detect new failure modes (e.g., equipment downtime).
- A/B or stepped-wedge rollouts: implement changes in selected clinics or sessions, then difference-in-differences analysis to attribute impact while controlling for case mix and seasonality.

Implementation roadmap (suggested)
- Weeks 1–3: Data cleaning, process discovery, enablement-time derivation, baseline KPI/queue dashboard, and resource utilization profiles.
- Weeks 4–6: Root-cause deep dives; design appointment template changes; identify pre-visit diagnostics candidates; define pooling rules; prepare simulation.
- Weeks 7–10: Pilot in 1–2 specialties/time windows; real-time queue board; digital pre-registration for pilot cohort; measure impact.
- Weeks 11–16: Iterate, scale successful strategies, embed monitoring and governance.

This approach uses your event logs to quantify queues precisely, link them to resource and scheduling drivers, test targeted improvements with low-cost operational changes first (smoothing, pooling, parallelism, protected urgent capacity), and then measure sustained impact with ongoing process mining and control.