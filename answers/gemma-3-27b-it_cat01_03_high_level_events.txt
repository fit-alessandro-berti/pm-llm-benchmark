```python
# Proposed High-Level Activities and Justifications

high_level_activities = [
    {
        "ActivityName": "Material Preparation",
        "LowLevelEvents": [
            "Retrieve raw metal sheet",
            "Scan barcode",
            "Place metal sheet on table",
            "Align metal sheet",
            "Preheat metal sheet"
        ],
        "Justification": "These events all relate to getting the raw material ready for the next stage of processing. They involve initial handling, identification, positioning, and preparing the material for welding. They are performed sequentially and are essential before any assembly can begin."
    },
    {
        "ActivityName": "Welding",
        "LowLevelEvents": [
            "Pick up welding tool",
            "Weld corner A",
            "Weld corner B"
        ],
        "Justification": "These events are directly related to the welding process. Picking up the tool is a prerequisite for welding, and welding the corners represents the core activity of this stage. They are performed by the same resource (Operator B) and are logically connected."
    },
    {
        "ActivityName": "Quality Inspection",
        "LowLevelEvents": [
            "Measure weld integrity"
        ],
        "Justification": "This event is a dedicated quality control step. It assesses the quality of the welding performed in the previous stage. It's performed by a dedicated quality sensor and provides a specific measurement."
    },
    {
        "ActivityName": "Coating and Drying",
        "LowLevelEvents": [
            "Apply protective coating",
            "Dry coating"
        ],
        "Justification": "These events represent the application of a protective layer to the welded component and its subsequent drying. They are performed sequentially by different units but are logically linked as part of the same coating process."
    },
    {
        "ActivityName": "Final Verification",
        "LowLevelEvents": [
            "Visual check"
        ],
        "Justification": "This is the final step in the process, where a human operator visually inspects the completed component to ensure it meets quality standards. It's a final check before the product is considered finished."
    }
]

# Print the structured output
for activity in high_level_activities:
    print(f"Activity Name: {activity['ActivityName']}")
    print(f"  Low-Level Events: {', '.join(activity['LowLevelEvents'])}")
    print(f"  Justification: {activity['Justification']}")
    print("-" * 20)
```

**Explanation:**

1. **`high_level_activities` List:** This list contains dictionaries, each representing a high-level activity.

2. **`ActivityName`:**  A descriptive name for the high-level activity.

3. **`LowLevelEvents`:** A list of the low-level event activities that are grouped into this high-level activity.

4. **`Justification`:** A clear explanation of why these low-level events were grouped together, based on their logical relationship, temporal proximity, and resource usage.

5. **Grouping Logic:**
   - **Sequentiality:** Events that occur in a clear sequence (e.g., retrieving material, scanning, placing) are grouped together.
   - **Resource Similarity:** Events performed by the same resource or type of resource (e.g., Operator B for welding) are grouped.
   - **Logical Connection:** Events that are logically related (e.g., applying coating and then drying it) are grouped.
   - **Process Phase:** Events that represent a distinct phase of the manufacturing process (e.g., material preparation, quality inspection) are grouped.

6. **Output:** The code iterates through the `high_level_activities` list and prints the information in a structured format, making it easy to understand the proposed grouping.  This output can be easily adapted for use in process mining tools or for further analysis.
