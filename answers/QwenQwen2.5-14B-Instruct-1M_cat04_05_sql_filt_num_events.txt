Here's a DuckDB SQL query that accomplishes the task described in the draft prompt:

```sql
WITH case_event_count AS (
    SELECT
        case_id,
        COUNT(*) AS event_count
    FROM
        event_log
    GROUP BY
        case_id
    HAVING
        COUNT(*) <= 6
)

SELECT
    e.*
FROM
    event_log e
JOIN
    case_event_count c
ON
    e.case_id = c.case_id;
```

### Explanation:
1. **Common Table Expression (CTE) - `case_event_count`:**
   - This CTE calculates the number of events for each `case_id`.
   - It uses the `COUNT(*)` function to count the number of rows (events) per `case_id`.
   - The `GROUP BY` clause ensures that the count is calculated for each distinct `case_id`.
   - The `HAVING` clause filters `case_id`s that have more than six events, keeping only those with six or fewer events.

2. **Main Query:**
   - The main query selects all columns `*` from the `event_log` table.
   - It joins the `event_log` table with the `case_event_count` CTE on the `case_id` to ensure that only events from the filtered `case_id`s (those with six or fewer events) are returned.

This approach ensures that you only get events from cases that have six or fewer events, as required.