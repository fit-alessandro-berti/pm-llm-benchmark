To construct the Log Skeleton for the given scenario in a Python dictionary, we need to define the constraints between the activities based on the descriptions provided. Here is a possible Log Skeleton for the order fulfillment process:

```python
log_skeleton = {
    'equivalence': set(),  # No equivalence constraints given
    'always_before': {
        ('Receive Order', 'Check Availability'),
        ('Check Availability', 'Reserve Items'),
        ('Reserve Items', 'Pick Items'),
        ('Pick Items', 'Quality Check'),
        ('Quality Check', 'Pack Order'),
        ('Pack Order', 'Generate Shipping Label'),
        ('Generate Shipping Label', 'Dispatch'),
        ('Dispatch', 'Invoice Customer'),
        ('Invoice Customer', 'Record Payment')
    },
    'always_after': set(),  # No always_after constraints given
    'never_together': set(),  # No never_together constraints given
    'activ_freq': {
        'Receive Order': {1},
        'Check Availability': {1},
        'Reserve Items': {1},
        'Pick Items': {1},
        'Quality Check': {1},
        'Pack Order': {1},
        'Generate Shipping Label': {1},
        'Dispatch': {1},
        'Invoice Customer': {1},
        'Record Payment': {1}
    },
    'directly_follows': {
        ('Receive Order', 'Check Availability'),
        ('Check Availability', 'Reserve Items'),
        ('Reserve Items', 'Pick Items'),
        ('Pick Items', 'Quality Check'),
        ('Quality Check', 'Pack Order'),
        ('Pack Order', 'Generate Shipping Label'),
        ('Generate Shipping Label', 'Dispatch'),
        ('Dispatch', 'Invoice Customer'),
        ('Invoice Customer', 'Record Payment')
    }
}
```

### Explanation:

1. **Equivalence:** No equivalence constraints are given, so the set is empty.

2. **Always Before:** This constraint ensures that activities are executed in a specific order. The given constraints reflect the logical flow of the order fulfillment process.

3. **Always After:** No 'always_after' constraints are given, so the set is empty.

4. **Never Together:** No 'never_together' constraints are given, so the set is empty.

5. **Activity Occurrences:** Each activity occurs exactly once in a case.

6. **Directly Follows:** This constraint ensures that activities follow each other directly without any other activities in between. The directly_follows set is the same as the always_before set because each activity directly follows the previous one in the sequence.

This Log Skeleton captures the essential constraints and flow of the order fulfillment process in the distribution center.