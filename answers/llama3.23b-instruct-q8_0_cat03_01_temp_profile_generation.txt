Here is an example of a Python dictionary representing a temporal profile for a hypothetical Purchase-to-Pay process:
```
temporal_profile = {
    ('Order Receipt', 'Payment Processing'): (86400, 21600),  # average: 1 day, stddev: 6 hours
    ('Payment Processing', 'Approval'): (86400, 28800),  # average: 1 day, stddev: 8 hours
    ('Approval', 'Order Rejection'): (86400, 28800),  # average: 1 day, stddev: 8 hours
    ('Order Rejection', 'Cancellation Request'): (3600, 1080),  # average: 1 hour, stddev: 18 minutes
    ('Cancellation Request', 'Payment Refund'): (900, 270),  # average: 15 min, stddev: 45 min
}
```
This represents the estimated time between activities in a Purchase-to-Pay process. The keys are tuples of two activities, indicating the expected average time between them and their corresponding standard deviation.

Here's a brief explanation of the assumptions made while generating this profile:

* `Order Receipt` to `Payment Processing`: typically takes about 1 day.
* `Payment Processing` to `Approval`: typically takes around 1 day with some variability (8 hours).
* `Approval` to `Order Rejection`: again, usually within a single day, but with more uncertainty (within 8-9 hours).
* `Order Rejection` to `Cancellation Request`: quick reversal process that can happen in under an hour.
* `Cancellation Request` to `Payment Refund`: this is the critical path that needs time to resolve; a reasonable assumption might be around 15 minutes on average, with higher uncertainty (within 45-90 minutes).

Please note that this profile will not match any real-world process exactly due to the inherent difficulties and variability in any business process.