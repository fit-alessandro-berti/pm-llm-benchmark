Here's a DuckDB SQL query that accomplishes this task:

```sql
WITH case_counts AS (
    SELECT 
        case_id,
        COUNT(*) as event_count
    FROM event_log
    GROUP BY case_id
    HAVING COUNT(*) <= 6
)
SELECT 
    el.*
FROM event_log el
INNER JOIN case_counts cc ON el.case_id = cc.case_id
ORDER BY el.case_id, el.timestamp;
```

Alternatively, you can use a window function approach:

```sql
SELECT *
FROM (
    SELECT 
        *,
        COUNT(*) OVER (PARTITION BY case_id) as events_per_case
    FROM event_log
) t
WHERE events_per_case <= 6
ORDER BY case_id, timestamp;
```

Both queries will:
1. Calculate the total number of events for each `case_id`
2. Filter to keep only cases with 6 or fewer events
3. Return all events (with all columns) for those filtered cases

The first approach uses a CTE (Common Table Expression) with a JOIN, while the second uses a window function. The window function approach is often more efficient as it requires only one pass through the data.