Below are two self-contained POWL snippets (Python-style, mirroring the pm4py API) that encode the GlobalTeq Solutions hiring workflow.

1) The first model (“root_unfair”) keeps the XOR branch that may favour locally-affiliated applicants (CommunityAffiliationCheck).
2) The second model (“root_fair”) removes that branch so every applicant is treated identically after the skill test.

You can copy each block into a Python environment where pm4py is installed and run it without modifications.

-------------------------------
POWL Model WITH Potential Unfairness
-------------------------------
```python
import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# atomic activities
ReceiveApplication        = Transition(label="ReceiveApplication")
DataCompletenessCheck     = Transition(label="DataCompletenessCheck")   # parses résumé & questionnaire
RequestMoreInfo           = Transition(label="RequestMoreInfo")         # ask applicant to resubmit missing data
SkillAssessment           = Transition(label="SkillAssessment")         # auto-scored test
CulturalFitCheck          = Transition(label="CulturalFitCheck")        # normal cultural interview
CommunityAffiliationCheck = Transition(label="CommunityAffiliationCheck")  # path that gives subtle uplift
ManagerialReview          = Transition(label="ManagerialReview")
FinalDecision             = Transition(label="FinalDecision")

# loop for data completeness: do DataCompletenessCheck, optionally RequestMoreInfo then repeat
loop_node = OperatorPOWL(operator=Operator.LOOP,
                         children=[DataCompletenessCheck, RequestMoreInfo])

# XOR branch where unfairness can creep in
xor_node  = OperatorPOWL(operator=Operator.XOR,
                         children=[CulturalFitCheck, CommunityAffiliationCheck])

# overall partial order
root_unfair = StrictPartialOrder(nodes=[
        ReceiveApplication,
        loop_node,
        SkillAssessment,
        xor_node,
        ManagerialReview,
        FinalDecision])

# sequential edges
root_unfair.order.add_edge(ReceiveApplication, loop_node)
root_unfair.order.add_edge(loop_node,          SkillAssessment)
root_unfair.order.add_edge(SkillAssessment,    xor_node)
root_unfair.order.add_edge(xor_node,           ManagerialReview)
root_unfair.order.add_edge(ManagerialReview,   FinalDecision)
```

WHAT IT SHOWS  
• After the skill test, the XOR lets the workflow choose either the regular CulturalFitCheck or the special CommunityAffiliationCheck that subtly boosts certain candidates, introducing potential unfairness.

-------------------------------
POWL Model WITHOUT Unfairness
-------------------------------
```python
import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# atomic activities (same as before, except no community-specific activity)
ReceiveApplication    = Transition(label="ReceiveApplication")
DataCompletenessCheck = Transition(label="DataCompletenessCheck")
RequestMoreInfo       = Transition(label="RequestMoreInfo")
SkillAssessment       = Transition(label="SkillAssessment")
CulturalFitCheck      = Transition(label="CulturalFitCheck")   # single, uniform path
ManagerialReview      = Transition(label="ManagerialReview")
FinalDecision         = Transition(label="FinalDecision")

# identical data-completeness loop
loop_node = OperatorPOWL(operator=Operator.LOOP,
                         children=[DataCompletenessCheck, RequestMoreInfo])

# NO XOR – every applicant follows the same cultural-fit activity
root_fair = StrictPartialOrder(nodes=[
        ReceiveApplication,
        loop_node,
        SkillAssessment,
        CulturalFitCheck,
        ManagerialReview,
        FinalDecision])

# sequential edges
root_fair.order.add_edge(ReceiveApplication, loop_node)
root_fair.order.add_edge(loop_node,          SkillAssessment)
root_fair.order.add_edge(SkillAssessment,    CulturalFitCheck)
root_fair.order.add_edge(CulturalFitCheck,   ManagerialReview)
root_fair.order.add_edge(ManagerialReview,   FinalDecision)
```

KEY DIFFERENCE  
In the “fair” model the XOR is removed, so every applicant—regardless of local ties or club membership—undergoes the same CulturalFitCheck, eliminating the structural point where implicit bias could be introduced.