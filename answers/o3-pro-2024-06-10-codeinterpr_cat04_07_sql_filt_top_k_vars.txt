Below is a compact solution that does the four requested steps completely inside DuckDB.  
Replace :K with the number of variants you want to keep (top K).

```sql
-- 1) build the ordered activity sequence (one row per case)
WITH case_sequences AS (          -- STEP 1
    SELECT
        case_id,
        string_agg(activity, '' ORDER BY "timestamp") AS variant   -- ordered trace
    FROM event_log
    GROUP BY case_id
),

-- 2) count how many cases follow each variant
variant_frequency AS (            -- STEP 2
    SELECT
        variant,
        COUNT(*) AS cases_per_variant
    FROM case_sequences
    GROUP BY variant
),

-- 3) keep only the K most frequent variants
top_k_variants AS (               -- STEP 3
    SELECT variant
    FROM variant_frequency
    ORDER BY cases_per_variant DESC
    LIMIT :K                      -- <-- put your K here
),

-- 4) collect all cases that belong to those variants
selected_cases AS (               -- helper CTE
    SELECT cs.case_id
    FROM case_sequences cs
    JOIN top_k_variants tkv USING(variant)
)

-- 5) finally return every original event of the selected cases
SELECT e.*                         -- STEP 4
FROM event_log AS e
JOIN selected_cases sc
     ON e.case_id = sc.case_id
ORDER BY e.case_id, e."timestamp";
```

What each block does:

1. `case_sequences` – For every `case_id` the events are ordered by `timestamp` and concatenated (`string_agg`) into a single text field called `variant`. The delimiter (``) can be any string that is not used inside activity names.

2. `variant_frequency` – Counts how many different cases exhibit the same `variant`.

3. `top_k_variants` – Sorts the variants by that count and keeps only the top K.

4. `selected_cases` – Retrieves the concrete `case_id` values whose variant is in the previous list.

5. Final `SELECT` – Joins the original `event_log` with those `case_id`s so that every event belonging to the top-K variants is returned; all other cases are automatically excluded.

This single query therefore:

• Extracts the ordered activity sequence per case,  
• Groups and counts cases per variant,  
• Identifies the most frequent K variants,  
• And outputs the complete, unmodified event records of exactly those cases.