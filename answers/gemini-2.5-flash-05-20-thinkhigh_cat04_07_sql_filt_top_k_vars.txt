```sql
-- This query identifies process variants, counts their frequencies,
-- determines the top K most frequent variants, and then returns
-- all original events belonging to cases that follow these top K variants.

-- Define K, the number of top variants to retrieve events for.
-- You can change this value as needed.
WITH parameters AS (
    SELECT 5 AS k_value -- Example: Top 5 variants
),

-- Step 1: Determine the sequence of activities for each case_id.
-- This CTE creates the 'process variant' for each case by concatenating
-- activities in chronological order.
CaseVariants AS (
    SELECT
        el.case_id,
        STRING_AGG(el.activity, '->' ORDER BY el.timestamp) AS activity_sequence
    FROM
        event_log AS el
    GROUP BY
        el.case_id
),

-- Step 2 & 3: Group cases by their activity sequence to identify unique
-- process variants, count their frequencies, and determine the top K.
VariantFrequencies AS (
    SELECT
        cv.activity_sequence,
        COUNT(cv.case_id) AS variant_frequency
    FROM
        CaseVariants AS cv
    GROUP BY
        cv.activity_sequence
),

-- Step 3 (continued): Select the top K variants based on frequency.
-- If there's a tie in frequency, activity_sequence is used as a tie-breaker
-- for consistent results.
TopKVariants AS (
    SELECT
        vf.activity_sequence,
        vf.variant_frequency
    FROM
        VariantFrequencies AS vf
    ORDER BY
        vf.variant_frequency DESC, -- Order by frequency (highest first)
        vf.activity_sequence ASC   -- Tie-breaker: alphabetical order of sequence
    LIMIT (SELECT k_value FROM parameters) -- Apply the defined K value
)

-- Step 4: Return all events from the original event log that belong
-- only to cases which are part of these top K variants.
SELECT
    el.case_id,
    el.activity,
    el.timestamp
FROM
    event_log AS el
JOIN
    CaseVariants AS cv
    ON el.case_id = cv.case_id
JOIN
    TopKVariants AS tkv
    ON cv.activity_sequence = tkv.activity_sequence
ORDER BY
    el.case_id,
    el.timestamp;
```