# POWL Models for GlobalTeq Solutions Hiring Process

## Model 1: POWL with Potential Unfairness

```python
import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define activities
receive_application = Transition(label="ReceiveApplication")
data_completeness_check = Transition(label="DataCompletenessCheck")
request_more_info = Transition(label="RequestMoreInfo")
skill_assessment = Transition(label="SkillAssessment")
disqualify = Transition(label="Disqualify")
continue_process = Transition(label="ContinueProcess")
standard_cultural_fit = Transition(label="StandardCulturalFitCheck")
community_affiliation_check = Transition(label="CommunityAffiliationCheck")
managerial_review = Transition(label="ManagerialReview")
final_decision = Transition(label="FinalDecision")

# Define loop for data completeness
data_loop = OperatorPOWL(operator=Operator.LOOP, children=[data_completeness_check, request_more_info])

# Define XOR choice after skill assessment
post_skill_xor = OperatorPOWL(operator=Operator.XOR, children=[disqualify, continue_process])

# Define XOR choice for cultural fit evaluation (POTENTIAL BIAS POINT)
cultural_fit_xor = OperatorPOWL(operator=Operator.XOR, children=[standard_cultural_fit, community_affiliation_check])

# Create root node and add all activities
root = StrictPartialOrder(nodes=[receive_application, data_loop, skill_assessment, post_skill_xor, cultural_fit_xor, managerial_review, final_decision])

# Define the order
root.order.add_edge(receive_application, data_loop)
root.order.add_edge(data_loop, skill_assessment)
root.order.add_edge(skill_assessment, post_skill_xor)
root.order.add_edge(continue_process, cultural_fit_xor)
root.order.add_edge(cultural_fit_xor, managerial_review)
root.order.add_edge(managerial_review, final_decision)
```

## Model 2: POWL without Unfairness

```python
import pm4py
from pm4py.objects.powl.obj import StrictPartialOrder, OperatorPOWL, Transition, SilentTransition
from pm4py.objects.process_tree.obj import Operator

# Define activities
receive_application = Transition(label="ReceiveApplication")
data_completeness_check = Transition(label="DataCompletenessCheck")
request_more_info = Transition(label="RequestMoreInfo")
skill_assessment = Transition(label="SkillAssessment")
disqualify = Transition(label="Disqualify")
continue_process = Transition(label="ContinueProcess")
standard_cultural_fit = Transition(label="StandardCulturalFitCheck")
managerial_review = Transition(label="ManagerialReview")
final_decision = Transition(label="FinalDecision")

# Define loop for data completeness
data_loop = OperatorPOWL(operator=Operator.LOOP, children=[data_completeness_check, request_more_info])

# Define XOR choice after skill assessment
post_skill_xor = OperatorPOWL(operator=Operator.XOR, children=[disqualify, continue_process])

# Create root node and add all activities
root = StrictPartialOrder(nodes=[receive_application, data_loop, skill_assessment, post_skill_xor, standard_cultural_fit, managerial_review, final_decision])

# Define the order
root.order.add_edge(receive_application, data_loop)
root.order.add_edge(data_loop, skill_assessment)
root.order.add_edge(skill_assessment, post_skill_xor)
root.order.add_edge(continue_process, standard_cultural_fit)
root.order.add_edge(standard_cultural_fit, managerial_review)
root.order.add_edge(managerial_review, final_decision)
```

## Explanation of the Models

### Key Differences

In Model 1 (with potential unfairness):
- After the skill assessment, candidates who continue face an XOR choice between two different cultural fit evaluations
- The "CommunityAffiliationCheck" represents the biased path where applicants with membership in the "Global Business Leaders Club" or local residents receive preferential treatment
- This XOR branch creates a subtle unfairness in the hiring process

In Model 2 (without unfairness):
- All candidates who pass the skill assessment undergo the same "StandardCulturalFitCheck"
- The removal of the biased branch ensures all applicants are evaluated using consistent criteria
- This creates a fair process where community affiliations do not provide advantages

### Common Elements in Both Models

Both models maintain the core hiring process structure:
- Applications are received and checked for completeness (with a loop to request more information if needed)
- Candidates undergo skill assessment with two possible outcomes (disqualify or continue)
- Cultural fit evaluation (either biased or unbiased, depending on the model)
- Managerial review of candidates
- Final hiring decision

The primary difference is the elimination of the biased XOR branch in Model 2, ensuring all candidates receive equal treatment regardless of their community affiliations.