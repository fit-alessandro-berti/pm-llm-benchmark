Section 1: Identify instance-spanning constraints and quantify impact

Data preparation and enrichment
- Clean and align start/complete events per activity. Create case attributes: Order Type, Region, Cold-Packing flag, Hazardous flag. Tag resources by type: Standard packing vs Cold-Packing (C1–C5), QC, pickers, etc.
- Derive intervals: For each activity, compute waiting time (queue) = start_time – previous_complete_time; processing time = complete_time – start_time; blocking time where a resource is held but downstream queue prevents release (if visible).
- Build calendars: operating hours, shifts, station-specific availability.

A. Shared Cold-Packing stations (capacity-constrained resource pool)
Identification
- Filter orders with Requires Cold Packing = TRUE.
- Build a time-based resource utilization series for stations C1–C5 using start/complete intervals.
- Compute queue length over time for cold-packing: number of cold orders waiting (status “ready for packing” but not started) using event state reconstruction.

Impact metrics
- Cold-packing waiting time: average/median queueing time prior to cold-packing, 90th/95th percentiles.
- Resource utilization: average, peak, and time-above-85% utilization for C1–C5.
- Turnaway/preemption instances: count of times a standard order at cold-packing is preempted by an express order (detected by interruption or start delay coincident with express arrival).
- Throughput loss due to contention: regression or queueing-based estimate of added lead time per additional concurrent arrival rate.
- SLA miss attribution: proportion of end-to-end delay explained by cold-packing queue using path-based contribution analysis (Shapley or variance decomposition across activities).

B. Shipping batch formation before label generation
Identification
- Detect batches: group Shipping Label Generation completes with same Region and same Batch ID (if logged) or within a short time window with shared “System (Batch Bx)”.
- Infer batch windows: earliest ready_time among batch members to batch release time.

Impact metrics
- Batch wait time: for each order, time from ready-for-label (QC complete) to batch release.
- Batch fill patterns: batch size distribution, time-to-fill per region per hour/day, abandoned/incomplete batches.
- Opportunity cost: proportion of orders waiting beyond a threshold because batch not full; compare to hypothetical single-order release cost via what-if calculation.

C. Priority handling (Express preemption)
Identification
- Define preemption windows: when an express order arrives “ready” to a step and a resource is occupied by a non-express, check for interruptions (explicit pause events or gaps in activity) or delayed start for the express beyond SLA policy. Mark the impacted standard orders and the preempting express orders.
- Construct priority queues by step (Packing, QC) with separate classes.

Impact metrics
- Preemption count and duration: number of interruptions, total paused time imposed on standard orders, start delays avoided for express orders.
- Service level effects: express on-time rate before/after preemption; standard order delay increments attributable to preemption events.
- Resource class impact: utilization spikes immediately after express arrivals; increase in variance of waiting times for standard orders.

D. Hazardous materials simultaneous limit (max 10 across Packing and QC)
Identification
- Reconstruct concurrency: at each timestamp, count number of hazardous orders in Packing or QC with status “in-progress”.
- Flag compliance breaches (if any) or binding periods when concurrency = 10.

Impact metrics
- Blocking due to cap: number and duration of times hazardous orders are queued solely because cap reached, even if stations free.
- Throughput reduction: compare hazardous order service rate during binding periods vs non-binding periods.
- Cross-queue effects: measure waiting time increases for non-hazardous if scheduling reserves capacity for hazardous (if policy exists).

Separating within-instance vs between-instance waiting
- Within-instance factors: long processing times, rework loops, missing inputs within the same case. Diagnose via activity duration distributions, outlier detection, and rework tags.
- Between-instance factors: queueing before start when resource is busy with another case or policy constraints hold the case. Diagnose by correlating waiting time with observed resource occupancy/concurrency caps or batch not-yet-released state.
- Method: state-based replay. For each waiting interval, compute contemporaneous system state: resource busy/idle, queue length, cap binding, batch status. Attribute waiting to:
  1) Resource contention (busy=true, queue>0),
  2) Policy cap (hazardous_concurrency=10),
  3) Batch formation (awaiting batch),
  4) Internal (missing prerequisites, exceptions),
  5) Calendar (off-hours).
- Validate with survival/hazard models predicting start time using covariates of system state; significant coefficients indicate between-instance causes.

Section 2: Analyze constraint interactions

- Express x Cold-Packing: Express cold orders jump queue at the scarce C-stations, increasing preemptions and setup losses; standard cold orders experience long-tail waits. High utilization with priority scheduling increases variance and average queue length for lower priority class (well-known queueing effect).
- Batching x Hazardous cap: If region-specific batches contain many hazardous orders, coordinated release to labeling may backpressure QC completion, holding hazardous items in QC and Packing, pushing the hazardous concurrency toward the cap and delaying new hazardous intakes.
- Express x Batching: Express orders may wait for batch release if batching for label generation is mandatory; if bypass allowed, they can fragment batch economics but reduce express lead time. Mixed policy creates oscillations in batch sizes and release cadence.
- Cold-Packing x Hazardous cap: If some cold orders are also hazardous, simultaneous contention for C-stations and cap can create double blocking: a cold station is free but cap at QC prevents progressing prior jobs, keeping stations occupied longer (blocking), or conversely, cap blocks packing starts.
- Global ripple effects: Preemptions raise setup/transition times and reduce effective capacity; batching delays push work to later peaks; cap binding shifts scheduling priorities, potentially starving non-hazardous flow if capacity is reserved.

Understanding these interactions is key to avoid local optimizations that worsen systemwide KPIs (e.g., aggressive express preemption increases overall lead times and SLA misses for standard orders; larger batches cut shipping costs but inflate WIP and cap binding periods).

Section 3: Constraint-aware optimization strategies

Strategy 1: Class-based priority with guardrails at Cold-Packing
Addresses: Express preemption, Cold-Packing contention, interaction with hazardous cap.

Changes
- Implement preemption thresholds: allow express preemption only if predicted express lateness risk > X minutes and remaining time of current job > Y minutes; otherwise finish current job.
- Reserve capacity windows: dedicate 1 of 5 cold stations as “express-first” during peak windows determined by arrival forecasts; rest operate FIFO with limited head-of-line priority boosts.
- Enforce maximum preemptions/hour and minimum service quanta (e.g., do not interrupt within first/last Z minutes of a job) to reduce setup waste.
- If cold orders can be hazardous, coordinate with hazardous cap controller to admit starts only when projected concurrent hazardous count at Packing+QC < 10 within next T minutes (predictive admission control).

Data leverage
- Predict arrival rates and due-time risk for express via time-of-day/weekday models.
- Predict remaining processing time using historical distributions by SKU mix, packer, and order type.
- Real-time state estimation to compute cap forecasts.

Expected outcomes
- Maintain high express SLA without excessive interruptions; reduce variance of standard cold order waits; lower setup loss and increase effective throughput 3–7%.
- Fewer cap-induced stalls by smoothing hazardous starts.

Strategy 2: Dynamic batching policy with time-and-fill triggers and express bypass
Addresses: Shipping batching delays, interactions with express and hazardous queues.

Changes
- Implement hybrid batch release: per region, release when either (a) batch size threshold reached, or (b) max wait time W minutes for the oldest order is hit. Optimize thresholds by region/time-of-day.
- Permit express bypass: allow express orders to print labels immediately if oldest-wait timer would be exceeded or if truck cutoff is near; log as singleton batches.
- Staggered micro-batches near truck departures: smaller batch sizes close to cutoff times to avoid carryover.
- Hazardous-aware sequencing: if many hazardous orders in a region are waiting at QC, coordinate batch release to avoid simultaneous completion spikes that would bind the cap; spread label-generation triggers to smooth upstream completions.

Data leverage
- Estimate arrival processes per region and time; optimize batch thresholds via historical cost model balancing shipping consolidation savings vs time penalties.
- Simulate cutoffs and transport capacity to set dynamic W.

Expected outcomes
- Reduce average batch wait by 20–40% for thin regions; preserve consolidation economics in thick regions; improve express lead times with minimal logistics cost increase. Smoother hazardous flow reduces cap binding periods.

Strategy 3: Hazardous-cap-aware scheduling and decoupling
Addresses: Hazardous concurrency limit across Packing and QC; interactions with cold-packing and batching.

Changes
- Token-based admission control: maintain a pool of 10 hazardous tokens spanning Packing+QC. A hazardous job can start only by acquiring a token; tokens are released on QC completion. Implement short-term reservations for jobs about to transition from Packing to QC to prevent deadlock.
- Parallelize QC staging: create a “sealed staging” post-packing where hazardous orders can be temporarily stored without counting toward cap until a QC slot is imminent, provided regulatory compliance allows. If not, minimize in-process overlap by synchronizing Packing start with predicted QC start time (just-in-time release).
- Time-slicing policy: schedule hazardous processing in waves during off-peak when cold-packing load is lighter, reducing conflicts; keep at least M resources for non-hazardous to avoid starvation.

Data leverage
- Predict QC availability and processing times to synchronize packing starts for hazardous orders.
- Use concurrency forecasts to avoid hitting cap; compute safe start windows.

Expected outcomes
- Fewer periods at cap=10; reduced hazardous waiting times; lower blocking and handoff idle time. Improved overall flow without compliance risk.

Strategy 4: Targeted capacity adjustment and setup reduction at Cold-Packing
Addresses: Persistent contention at cold stations and sensitivity to preemption.

Changes
- Add 1–2 modular cold stations during peak windows (temporary capacity or cross-trained flexible stations).
- Reduce changeover/setup by sequencing cold orders with similar pack requirements; limit preemptions that cause reconfiguration. Introduce small WIP buffers per station to absorb micro-stops without occupying the station.

Data leverage
- Identify peak periods and SKU mix clusters causing long setups; compute ROI for peak-only capacity.
- Sequence optimization using historical setup matrix.

Expected outcomes
- 10–20% reduction in cold-packing queueing time; higher express and standard SLA adherence; improved OEE for cold stations.

Section 4: Simulation and validation

Approach
- Build a discrete-event simulation (DES) calibrated from the event log. Include:
  - Entities: orders with attributes (express, cold, hazardous, region).
  - Resources: pickers, standard packing, cold-packing (5), QC, label system.
  - Policies: priority/preemption rules, batching logic, hazardous token cap.
  - Calendars: shifts, truck cutoffs, maintenance/downs if any.
  - Processing time distributions: fitted per activity, segmented by attributes/resource.
  - Arrival processes: time-varying Poisson or empirical interarrival sampling by hour/day/seasonality.
  - Setup/changeover times for cold-packing as function of SKU class and preemption.

What to focus on
- Resource contention: accurate queue discipline, preempt-resume with setup penalties, setup matrices for cold stations.
- Batching: time-and-size triggers, truck departure constraints, express bypass; batch membership tracking.
- Priority interruptions: implement guardrails (thresholds, quanta) and measure interruption counts/durations.
- Hazardous cap: global token pool with reservation logic; prevent starts when cap predicted to bind; measure binding time.
- Validation: back-test baseline model against historical KPIs (lead time distributions, utilizations, queue lengths, batch wait times, cap binding frequency). Use Theil or MAE metrics to ensure fit.

Experiment design
- Compare baseline vs each strategy and combined packages under varying demand scenarios (average, peak weeks, stress tests).
- KPIs: end-to-end lead time (mean/95th), express on-time %, standard SLA %, cold-packing queue/wait, batch wait, hazardous concurrency binding time, throughput, resource utilizations, logistics cost impact.
- Sensitivity: vary arrival rates, no-show rates, processing variability, and cap changes.

Section 5: Monitoring post-implementation

Dashboards and metrics
- Flow KPIs by segment: end-to-end cycle time by order type/region; 50th/90th/95th percentiles; express on-time; standard SLA.
- Resource health: utilization and queue length time series for cold stations; preemption count and average interruption time; setup time share; OEE.
- Batching: average batch wait by region/time, batch sizes, percent express bypass, percent hitting max-wait trigger, missed cutoff rate.
- Hazardous governance: concurrent hazardous count over time; binding duration (% time at 10); starts blocked due to cap; compliance breaches (should be zero); average hazardous waiting pre-Packing and pre-QC.
- Constraint attribution: stacked contribution to lead time by cause (resource contention, batching, cap, internal, calendar).
- Alerting: thresholds for cold-packing queue > K, cap binding > X minutes, express SLA risk > Y%, excessive preemptions/hour, batch wait > W.

Process mining views
- Variant analysis segmented by constraints (e.g., cold+express, hazardous+region).
- Performance maps with wait times on edges; resource handover networks to spot bottlenecks.
- Conformance monitoring to new policies: check adherence to preemption guardrails, token admission control, batching rules.
- Predictive monitors: real-time ETA and lateness risk; forecast queue lengths at cold-packing and hazardous concurrency next 60 minutes to trigger proactive actions.

Feedback loop
- Weekly review of KPIs vs simulation predictions; recalibrate parameters (batch thresholds, preemption limits).
- A/B testing dashboards for specific changes (e.g., express-first station windows).
- Continuous data quality checks: correct start/complete stamps, batch IDs, pause events.

By explicitly modeling and measuring the instance-spanning constraints, attributing delays to between-instance causes, and validating policy changes in a DES calibrated from the event log, the fulfillment center can reduce end-to-end times, protect express SLAs, maintain regulatory compliance, and increase throughput without unintended side effects.