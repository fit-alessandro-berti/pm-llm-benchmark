Here is a DuckDB SQL solution that:

- Detects cases where three consecutive events within the case are exactly: 
  Approve Purchase Requisition -> Create Order -> Confirm Order
- Flags cases where the time between Create Order and Confirm Order is more than 5 days
- Returns all events from cases that do NOT have such a sequence with >5 days, i.e., excludes those cases

SQL:

WITH seqs AS (
  SELECT
    case_id,
    timestamp AS t1,
    activity AS a1,
    LEAD(timestamp) OVER (PARTITION BY case_id ORDER BY timestamp) AS t2,
    LEAD(activity) OVER (PARTITION BY case_id ORDER BY timestamp) AS a2,
    LEAD(timestamp, 2) OVER (PARTITION BY case_id ORDER BY timestamp) AS t3,
    LEAD(activity, 2) OVER (PARTITION BY case_id ORDER BY timestamp) AS a3
  FROM event_log
),
excluded AS (
  SELECT DISTINCT case_id
  FROM seqs
  WHERE a1 = 'Approve Purchase Requisition'
    AND a2 = 'Create Order'
    AND a3 = 'Confirm Order'
    AND date_diff('day', t2, t3) > 5
)
SELECT el.*
FROM event_log AS el
WHERE el.case_id NOT IN (SELECT case_id FROM excluded)
ORDER BY el.case_id, el.timestamp;

Notes:
- The sequence check relies on the three events being consecutive in time within the same case (via LEAD).
- The exclusion happens only for cases where that exact sequence occurs and the gap between Create Order and Confirm Order is > 5 days.
- Final results are ordered by case_id and timestamp for clarity.