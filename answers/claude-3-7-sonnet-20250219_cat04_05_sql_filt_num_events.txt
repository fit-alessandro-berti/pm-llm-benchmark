I'll craft a DuckDB SQL query that filters out cases with more than six events and returns only events from cases with six or fewer events.

```sql
WITH case_counts AS (
  SELECT
    case_id,
    COUNT(*) AS event_count
  FROM event_log
  GROUP BY case_id
)

SELECT e.*
FROM event_log e
JOIN case_counts c ON e.case_id = c.case_id
WHERE c.event_count <= 6
ORDER BY e.case_id, e.timestamp;
```

This query works in two steps:

1. First, it creates a Common Table Expression (CTE) called `case_counts` that counts the number of events for each `case_id`.
2. Then, it joins the original `event_log` table with this CTE and filters to include only events from cases that have 6 or fewer events.
3. Finally, it orders the results by `case_id` and `timestamp` for better readability.

The query efficiently handles the requirement by:
- Calculating the count per case only once
- Using a join to filter the original data
- Preserving all original columns from the event log
- Maintaining the original event details while excluding cases with too many events