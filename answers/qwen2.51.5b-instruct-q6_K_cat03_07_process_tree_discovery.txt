To create an effective process tree from the provided event log, we need to identify key activities and their sequential order while accounting for repetitions of certain activities (like validating form and requesting missing info). Here is a detailed breakdown:

1. **Root Node:** This represents the initial state where the application is received.
2. **Validation Loop:** This loop encompasses both re-validation and request missing info, which may occur multiple times as specified in the log.
3. **Approval Decision:** After validation, there's an opportunity to make an approval decision.
4. **Confirmation:** Once approved, a confirmation step follows.
5. **Archival:** Finally, cases are archived.

Given these points, let’s build our process tree:

```python
from pm4py.objects.process_tree.obj import ProcessTree, Operator

# Create the root node (Root)
root = ProcessTree(operator=Operator.PARALLEL)

# Validate Activity Loop
validate_loop = ProcessTree(label="Validate Loop", operator=Operator.LOOP)
seq_validate = ProcessTree(operator=Operator.SEQUENCE, parent=root)
vf_1 = ProcessTree(label="Validate Form 1", parent=seq_validate)
ae_1 = ProcessTree(label="Assess Eligibility 1", parent=seq_validate)
rmi_1 = ProcessTree(label="Request Missing Info 1", parent=seq_validate)

vf_2 = ProcessTree(label="Validate Form 2", parent=seq_validate)
ae_2 = ProcessTree(label="Assess Eligibility 2", parent=seq_validate)
rmi_2 = ProcessTree(label="Request Missing Info 2", parent=seq_validate)

validate_loop.children.append(vf_1)
validate_loop.children.append(ae_1)
validate_loop.children.append(rmi_1)
validate_loop.children.append(vf_2)
validate_loop.children.append(ae_2)
validate_loop.children.append(rmi_2)

# Approval Decision Node
approval_decision = ProcessTree(label="Approval Decision", parent=root)
seq_approval = ProcessTree(operator=Operator.SEQUENCE, parent=approval_decision)
sc_1 = ProcessTree(label="Send Confirmation 1", parent=seq_approval)
ac_1 = ProcessTree(label="Archive Case 1", parent=sc_1)

seq_approval.children.append(sc_1)
seq_approval.children.append(ac_1)

# Final Archiving Step
archival_step = ProcessTree(label="Archival Step", operator=Operator.XOR, parent=root)
sc_2 = ProcessTree(label="Send Confirmation 2", parent=archival_step)
ac_2 = ProcessTree(label="Archive Case 2", parent=sc_2)

root.children.append(validate_loop)
root.children.append(approval_decision)
root.children.append(archival_step)
```

### Explanation:

1. **Root Node (`root`)**: This is the starting point of our process tree.
2. **Validate Loop (`validate_loop`)**: This node represents a loop where we validate forms and request missing information multiple times, as shown in the event log data (e.g., `vf_1`, `ae_1`, etc.). Each instance within this loop can be represented individually or through repetitions if necessary.
3. **Approval Decision (`approval_decision`)**: After successfully completing a series of validations (as indicated by validating forms and assessing eligibility), an approval decision occurs, followed by sending a confirmation message (`confirmation_step`) to proceed with archiving the case.
4. **Archival Step (`archival_step`)**: This is a final step where cases are archived.

This structure ensures that both repetitive activities of validation and requesting missing information (indicated in sequences) as well as the overall approval process flow can be accurately captured, providing a balanced representation of observed behavior from the event log.