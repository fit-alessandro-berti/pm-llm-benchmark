Integrated Event Log for Order #1234  
(Primary timeline uses the timestamp from System A whenever a merge occurred; when an event exists in only one log, that system’s timestamp is used.)

```
# Fields: primary_timestamp | alt_timestamp(s) | unified_event_name | order_id | user_id | resource_id | notes | source_logs
2023-10-10T10:00:00Z | 2023-10-10T09:59:58Z | Order Received | Order#1234 | u45 | r10 | “Event captured at warehouse system” | A & B
2023-10-10T10:01:30Z | 2023-10-10T10:01:29Z | Order Validated | Order#1234 | u12 | r10 | “Cross-check inventory” | A & B
2023-10-10T10:02:00Z | 2023-10-10T10:02:05Z | Payment Processed (aka Payment Check) | Order#1234 | u12 | r99 | “Payment gateway delay” | A & B
2023-10-10T10:03:00Z | — | Quality Check | Order#1234 | u45 | r11 | “Random inspection” | B-only
2023-10-10T10:05:00Z | 2023-10-10T10:05:02Z | Item Shipped | Order#1234 | u45 | r10 | “Package handed to courier” | A & B
2023-10-10T10:20:00Z | — | Item Delivered | Order#1234 | — | — | — | A-only
```

Explanation of matching decisions and conflict resolution
1. Matching key = (order_id, event semantics, timestamp proximity).  
   • A tolerance of ±2 seconds was the default.  
   • If an event’s name clearly referred to the same business action and its timestamp gap was still “operationally trivial” (5 s), it was merged with a note.

2. Merged events  
   • Order Received: names match (“Order Received” vs. “OrderReceived”) and are only 2 s apart  merged.  
   • Order Validated: 1 s apart; identical meaning  merged.  
   • Payment: “Payment Processed” (A) vs. “PaymentCheck” (B). Although 5 s apart (just beyond the 2 s rule), sequence position and semantic match show they are the same gateway action; merged but both timestamps retained and rationale documented.  
   • Shipping: 2 s apart, clear naming match  merged.

3. Un-matched events  
   • Quality Check exists only in System B  kept as stand-alone and flagged “B-only”.  
   • Item Delivered exists only in System A  kept as stand-alone and flagged “A-only”.

4. Attribute union  
   • All attributes from both logs are retained.  
   • For merged events the “primary_timestamp” column holds System A’s time (treating A as master), while “alt_timestamp(s)” stores System B’s value when it differed.  
   • user_id, resource_id, and notes come from System B; where a field is absent in the originating log it is left blank (—).

5. Chronology  
   • Events are sorted by primary_timestamp, preserving the high-level flow expected by downstream analytics while still exposing the finer-grain alternates if required.

This single, enriched log now offers the completeness and metadata depth of System B while preserving the authoritative ordering from System A, ready for process-mining or audit use.