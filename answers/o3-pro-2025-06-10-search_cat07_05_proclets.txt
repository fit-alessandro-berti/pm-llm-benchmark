The figure is divided into three sub-parts that together illustrate how two interacting process classes (“procelts”¹) work together in a medicallaboratory scenario, what their structural relationship is, and how an individual message (“performative”) looks when it travels between them.

1. Sub-figure (a): “Two procelet classes connected through two channels”  
   • The left swim-lane is the procelet class Lab visit (everything a patient encounter in the clinic entails).  
   • The right swim-lane is the procelet class Lab test (the work done inside the laboratory).  
   • Each procelet starts with a filled black circle (initial state) and ends with a concentric black/white circle (final state).  
   • Internal activities are rectangles annotated with the role that performs them (e.g., “Order entry” by a doctor, “Take blood sample” by a lab assistant, “Perform test” by a chemical analyst).  
   • Solid arrows show the normal control flow within each procelet.  
   • The two dashed, double-arrowed “channels” (labelled 1..3, 1..7, etc.) signify asynchronous message exchanges between the two procelets:  
     – Channel 1 (upper dashed envelope) carries the initial order and the first results.  
     – Channel 2 (lower dashed envelope) is used if results are judged “not fine” and the test must be repeated.  
   • Diamond gateways on the Lab visit side (“Judge results” with green and red outcome branches) decide whether everything is fine (proceed to “Send report”) or another test cycle must be triggered (“Do tests again”).

2. Sub-figure (b): “Class diagram containing the two procelet classes”  
   • A simple UML style box shows Lab visit and Lab test with an association “requires”.  
   • The multiplicities say one Lab visit (1..1) can require one or more Lab tests (1..*).

3. Sub-figure (c): “Example of a performative”  
   • A small table lists the fields of one concrete message that flows through Channel 1:  
     Time = 11:00  
     Channel = Order system  
     Sender = Lab visit – John  
     Receivers = Lab test – HGB John  
     Action = Create  
     Content = “Can you perform a HGB test for John?”  
     Scope = Private  
     Direction = OUT  

Taken together, the visualization explains:  
• How a patient encounter spawns lab tests,  
• Which steps are performed by which human roles,  
• What messages are exchanged and over which logical channels,  
• And the multiplicity rules that bind Lab visits and Lab tests.